[2020-04-22 16:33:05,083] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-22 16:33:12.462291 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-22 16:33:12.462291%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.8
2020-04-22 16:33:12.462291%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6074474496, percent=52.3, used=6663237632, free=6074474496)
2020-04-22 16:33:12.462291%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:12,463] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:12] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-22 16:33:12.679702 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-22 16:33:12.679702%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.1
2020-04-22 16:33:12.679702%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6073282560, percent=52.3, used=6664429568, free=6073282560)
2020-04-22 16:33:12.679702%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    126.1 MiB    126.1 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    126.1 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    126.1 MiB      0.0 MiB       auth = data
  1482    126.1 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    126.2 MiB      0.1 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    126.2 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    126.2 MiB      0.0 MiB       if verify_password(auth["password"], _user.password):
  1491    126.2 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    126.2 MiB      0.0 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    126.2 MiB      0.0 MiB           agent_obj = {}
  1495    126.4 MiB      0.2 MiB           for agent in _user.agents:
  1496    126.4 MiB      0.0 MiB               if agent.isDefault == True:
  1497    126.4 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    126.4 MiB      0.0 MiB                                "name": agent.name}
  1499    126.4 MiB      0.0 MiB                   break
  1500    126.4 MiB      0.0 MiB           return jsonify(
  1501    126.4 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    126.4 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-22 16:33:12,765] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:12] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-22 16:33:12.798360 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-22 16:33:12.798360%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.4
2020-04-22 16:33:12.798360%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6072102912, percent=52.3, used=6665609216, free=6072102912)
2020-04-22 16:33:12.798360%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:12.798360%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:12,800] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:12] "[37mOPTIONS /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-22 16:33:13.109312 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-22 16:33:13.109312%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.9
2020-04-22 16:33:13.110309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057996288, percent=52.4, used=6679715840, free=6057996288)
2020-04-22 16:33:13.110309%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.110309%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:13,114] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mOPTIONS /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-22 16:33:13.118290 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-22 16:33:13.119289%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:33:13.122280%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057385984, percent=52.4, used=6680326144, free=6057385984)
2020-04-22 16:33:13.122647%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:13,125] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-22 16:33:13.131354 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-22 16:33:13.131354%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:33:13.131354%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057414656, percent=52.4, used=6680297472, free=6057414656)
2020-04-22 16:33:13.131354%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.131354%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.144219 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-22 16:33:13.144219%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-22 16:33:13.144219%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057345024, percent=52.4, used=6680367104, free=6057345024)
2020-04-22 16:33:13.145216%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:13,147] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-22 16:33:13.150206%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.164203 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-22 16:33:13.164203%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-22 16:33:13.165202%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057304064, percent=52.4, used=6680408064, free=6057304064)
2020-04-22 16:33:13.165202%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:13,167] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
[2020-04-22 16:33:13,192] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mGET /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-22 16:33:13.429830 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-22 16:33:13.429830%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.2
2020-04-22 16:33:13.429830%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6058029056, percent=52.4, used=6679683072, free=6058029056)
2020-04-22 16:33:13.429830%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.429830%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.447778 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-22 16:33:13.447778%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-22 16:33:13.448200%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6058029056, percent=52.4, used=6679683072, free=6058029056)
2020-04-22 16:33:13.448774%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.458750%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.497642 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-22 16:33:13.497642%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.5
2020-04-22 16:33:13.497642%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057922560, percent=52.4, used=6679789568, free=6057922560)
2020-04-22 16:33:13.498639%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.500638%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:13.506020 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-22 16:33:13.506020%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-22 16:33:13.506618%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6057922560, percent=52.4, used=6679789568, free=6057922560)
2020-04-22 16:33:13.506618%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:13,510] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
[2020-04-22 16:33:13,544] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-22 16:33:13,549] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mGET /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-22 16:33:13.566459%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:13,585] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:13] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-22 16:33:14.693211 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/register [POST]
2020-04-22 16:33:14.693211%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.3
2020-04-22 16:33:14.693211%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6043037696, percent=52.6, used=6694674432, free=6043037696)
2020-04-22 16:33:14.693211%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
_user.id 24
111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222 {'name': 'Keep_alive Keep_alive', 'language': 'en', 'isDefault': True, 'user_id': 24, 'nlu_threshold': None, 'core_threshold': None, 'fallBackMessage': None}
2020-04-22 16:33:16.805200 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [POST]
2020-04-22 16:33:16.805801%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.1
2020-04-22 16:33:16.805801%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6042300416, percent=52.6, used=6695411712, free=6042300416)
2020-04-22 16:33:16.806790%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:18.984878 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-22 16:33:18.984878%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.8
2020-04-22 16:33:18.984878%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6029352960, percent=52.7, used=6708359168, free=6029352960)
2020-04-22 16:33:18.985879%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:18.985879%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:18.998843%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:21.044720 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-22 16:33:21.044720%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.4
2020-04-22 16:33:21.044720%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6017875968, percent=52.8, used=6719836160, free=6017875968)
2020-04-22 16:33:21.044720%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:21.044720%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:21,120] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:21] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-22 16:33:23.135670 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:23.135670%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.9
2020-04-22 16:33:23.136674%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6043537408, percent=52.6, used=6694174720, free=6043537408)
2020-04-22 16:33:23.136674%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:23,192] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:23] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:25.214469 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:25.214469%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.9
2020-04-22 16:33:25.215470%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6056390656, percent=52.5, used=6681321472, free=6056390656)
2020-04-22 16:33:25.215470%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:25,261] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:25] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:27.283578 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:27.283578%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.4
2020-04-22 16:33:27.283578%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6065872896, percent=52.4, used=6671839232, free=6065872896)
2020-04-22 16:33:27.284576%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:27,326] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:27] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:29.339666 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:29.339666%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-22 16:33:29.339666%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6067339264, percent=52.4, used=6670372864, free=6067339264)
2020-04-22 16:33:29.339666%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:29,375] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:29] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:31.387657 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:31.387657%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.5
2020-04-22 16:33:31.387657%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6070018048, percent=52.3, used=6667694080, free=6070018048)
2020-04-22 16:33:31.387657%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:31,437] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:31] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:33.454579 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:33.454579%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.0
2020-04-22 16:33:33.454579%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6069968896, percent=52.3, used=6667743232, free=6069968896)
2020-04-22 16:33:33.455485%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:33,498] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:33] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:35.513216 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:35.513216%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.8
2020-04-22 16:33:35.513216%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6071455744, percent=52.3, used=6666256384, free=6071455744)
2020-04-22 16:33:35.513216%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:35,543] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:35] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:37.558893 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:37.558893%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.8
2020-04-22 16:33:37.559146%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6063411200, percent=52.4, used=6674300928, free=6063411200)
2020-04-22 16:33:37.559146%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:37,606] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:37] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:39.622974 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:39.622974%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.7
2020-04-22 16:33:39.623782%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6064988160, percent=52.4, used=6672723968, free=6064988160)
2020-04-22 16:33:39.623971%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:39,669] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:39] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:41.687163 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:41.687163%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.2
2020-04-22 16:33:41.687163%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6069141504, percent=52.4, used=6668570624, free=6069141504)
2020-04-22 16:33:41.687163%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:41,725] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:41] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:43.741614 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:43.741614%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.7
2020-04-22 16:33:43.742608%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6073335808, percent=52.3, used=6664376320, free=6073335808)
2020-04-22 16:33:43.742608%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:43,787] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:43] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:45.805598 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:45.805598%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.1
2020-04-22 16:33:45.805598%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6063796224, percent=52.4, used=6673915904, free=6063796224)
2020-04-22 16:33:45.805598%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:45,858] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:45] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:47.876757 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:47.876757%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.3
2020-04-22 16:33:47.876757%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6050361344, percent=52.5, used=6687350784, free=6050361344)
2020-04-22 16:33:47.876757%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:47,916] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:47] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:49.929183 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:49.929183%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-22 16:33:49.929183%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6065483776, percent=52.4, used=6672228352, free=6065483776)
2020-04-22 16:33:49.929183%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:49,947] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:49] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:51.957006 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:51.957006%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.6
2020-04-22 16:33:51.957531%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6065856512, percent=52.4, used=6671855616, free=6065856512)
2020-04-22 16:33:51.957531%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:51,978] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:51] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:33:53.996265 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:33:53.996265%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.2
2020-04-22 16:33:53.997268%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6049370112, percent=52.5, used=6688342016, free=6049370112)
2020-04-22 16:33:53.997431%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:54,043] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:54] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-22 16:33:54,052] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:54] "[37mPOST /addintent HTTP/1.1[0m" 200 -
[2020-04-22 16:33:54,065] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:54] "[37mPOST /agent HTTP/1.1[0m" 201 -
3333333333333333333333333333333333333
[2020-04-22 16:33:54,070] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:54] "[37mPOST /register HTTP/1.1[0m" 200 -
access_token -------------------- 
2020-04-22 16:33:56.122692 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-22 16:33:56.122692%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.7
2020-04-22 16:33:56.122692%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6047952896, percent=52.5, used=6689759232, free=6047952896)
2020-04-22 16:33:56.122692%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:56.123626%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:56.130601%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:58.145529 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-22 16:33:58.145529%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.4
2020-04-22 16:33:58.145529%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6028320768, percent=52.7, used=6709391360, free=6028320768)
2020-04-22 16:33:58.145529%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:33:58.145529%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:33:58,210] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:58] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-22 16:33:58,227] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:33:58] "[37mPOST /addentity HTTP/1.1[0m" 201 -
entity_obj {'SysName': None, 'agent': {'activate_telegram': False, 'core_threshold': None, 'enableWebDemo': None, 'fallBackMessage': None, 'id': 59, 'isDefault': True, 'language': 'en', 'name': 'Keep_alive Keep_alive', 'needTrain': True, 'nlu_threshold': None, 'telegram_token': None, 'user_id': 24}, 'agent_id': 59, 'defineSynonyms': False, 'description': None, 'id': 417, 'instances': [], 'intentslotparameters': [], 'isIntentApiEntity': False, 'isSystetmEntity': False, 'name': 'Keep_alive_entity', 'pipelineId': None, 'piplines': None, 'regExpEntity': False}
2020-04-22 16:34:00.304671 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-22 16:34:00.304671%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.6
2020-04-22 16:34:00.304671%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6041706496, percent=52.6, used=6696005632, free=6041706496)
2020-04-22 16:34:00.304671%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:00.304671%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:00.314795%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:00,345] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:00] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
instance1_obj {'agent_id': 59, 'entityid': 417, 'id': 1219, 'language': 'en', 'synonyms': None, 'txt': 'alive'}
2020-04-22 16:34:02.381160 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-22 16:34:02.381160%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.5
2020-04-22 16:34:02.381160%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6043439104, percent=52.6, used=6694273024, free=6043439104)
2020-04-22 16:34:02.382066%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:02.382066%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:02.389559%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:02,426] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:02] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
instance2_obj {'agent_id': 59, 'entityid': 417, 'id': 1220, 'language': 'en', 'synonyms': None, 'txt': 'day'}
2020-04-22 16:34:04.473256 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-22 16:34:04.473256%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.8
2020-04-22 16:34:04.473256%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5989908480, percent=53.0, used=6747803648, free=5989908480)
2020-04-22 16:34:04.473256%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:04.473256%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:04.481235%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:06.499118 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-22 16:34:06.499118%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.2
2020-04-22 16:34:06.499118%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5981560832, percent=53.0, used=6756151296, free=5981560832)
2020-04-22 16:34:06.500112%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:06.500112%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:06,627] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:06] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-22 16:34:08.643067 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-22 16:34:08.643067%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.0
2020-04-22 16:34:08.643067%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5986168832, percent=53.0, used=6751543296, free=5986168832)
2020-04-22 16:34:08.643067%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Keep_alive_entity
[2020-04-22 16:34:08,752] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:08] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-22 16:34:10.777134 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:34:10.777134%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.3
2020-04-22 16:34:10.778131%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5992554496, percent=53.0, used=6745157632, free=5992554496)
2020-04-22 16:34:10.778131%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:10,836] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:10] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:34:12.867885 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-22 16:34:12.867885%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.0
2020-04-22 16:34:12.867885%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6015193088, percent=52.8, used=6722519040, free=6015193088)
2020-04-22 16:34:12.867885%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:12,932] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:12] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-22 16:34:14.950684 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-22 16:34:14.950684%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.1
2020-04-22 16:34:14.950684%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6013898752, percent=52.8, used=6723813376, free=6013898752)
2020-04-22 16:34:14.951220%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:15,007] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:15] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-22 16:34:17.030499 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-22 16:34:17.030499%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.6
2020-04-22 16:34:17.030499%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6019428352, percent=52.7, used=6718283776, free=6019428352)
2020-04-22 16:34:17.031495%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:34:17,075] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:17] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
[2020-04-22 16:34:17,097] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:34:17] "[37mPOST /addintent HTTP/1.1[0m" 200 -
[2020-04-22 16:34:17,113] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-22 16:34:17.113232
2020-04-22 16:34:19.166289 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-22 16:34:19.166289%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.0
2020-04-22 16:34:19.166289%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=6035062784, percent=52.6, used=6702649344, free=6035062784)
2020-04-22 16:34:19.166289%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:19.166289%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:34:19.176259%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2637 2637
 2- default platform is not  Null 
[2020-04-22 16:34:19,573] ERROR in GenericChatbotController: opening the pipeline config for agent  59
keys ['model']
keys ['case_sensitive']
keys ['features']
keys ['case_sensitive']
keys ['max_history']
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en_sm"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "59/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Keep_alive_entity': ['day', 'alive'], 'CARDINAL': ['r2', 'r1', '3', 'r2', 'r1'], 'LOC': ['2', 'Tea', 'Daraa', 'Damascus', 'Syria', 'Daraa', 'dodo', 'Damascus?', 'Syria', 'Damascus', 'Daraa'], 'LAW': ['t5', 't4', 't5', 't4'], 'DATE': ['Jan', 'may'], 'TIME': ['y7', 'y6', '7:00', '9 oclock', '6 oclock', 'oclock', 'y7', 'y6'], 'GPE': ['2', 'homs', '9'], 'ORG': ['2', '1', 'Google', 'HCI', 'IBM', 'HCI', 'Google'], 'FAC': ['AI'], 'PERSON': ['Mohammad', 'Sharaf3']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmptrbi1ahq\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmptrbi1ahq\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmptrbi1ahq model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-22 16:34:55,779] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-22 16:34:58,181] INFO in spacy_utils: Trying to load spacy model with name 'en_sm'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43    435.8 MiB    435.8 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45    435.8 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31    435.8 MiB    435.8 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36    435.8 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
59/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47    438.3 MiB    438.3 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56    438.3 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57    438.3 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58    438.3 MiB      0.0 MiB           print(self.gazetteer_path )
    59    438.3 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60    438.3 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64    438.3 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65    438.3 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66    438.3 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179    438.4 MiB    438.4 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183    438.4 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184    438.4 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185    438.4 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187    438.4 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200422-163459.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200422-163459.tar.gz
training Status Code 200  ---------------------  59 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    434.1 MiB    434.1 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    434.1 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    434.1 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    434.1 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    434.1 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    434.1 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x00000258F2B3B708>
map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    446.5 MiB    446.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    446.5 MiB      0.0 MiB           entity = {"value": value,
    75    446.5 MiB      0.0 MiB                     "start": start,
    76    446.5 MiB      0.0 MiB                     "end": end,
    77    446.5 MiB      0.0 MiB                     "confidence": 1.0,
    78    446.5 MiB      0.0 MiB                     "entity": name,
    79    446.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    446.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    446.5 MiB    446.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    446.5 MiB      0.0 MiB           text = message.text
    88    446.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    446.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    446.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    446.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    446.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    446.5 MiB      0.0 MiB                   low_key = key.lower()
    96    446.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    446.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    446.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    446.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    446.5 MiB      0.0 MiB                   if( singular_key is False):
   103    446.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    446.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    446.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    446.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    446.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    446.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    446.5 MiB      0.0 MiB               entities = old_entities
   114    446.5 MiB      0.0 MiB               words = text.split(' ')
   115    446.5 MiB      0.0 MiB               for w in words:
   116    446.5 MiB      0.0 MiB                   word =w
   117    446.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    446.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    446.5 MiB      0.0 MiB                   if (word_singular is False):
   120    446.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    446.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    446.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    446.5 MiB      0.0 MiB                       start = text.find(w)
   128    446.5 MiB      0.0 MiB                       end = start + len(w)
   129    446.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    446.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    446.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    446.5 MiB      0.0 MiB                   low_key = key.lower()
   139    446.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    446.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    446.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    446.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    446.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    446.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    446.6 MiB    446.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    446.6 MiB      0.0 MiB           entity = {"value": value,
    75    446.6 MiB      0.0 MiB                     "start": start,
    76    446.6 MiB      0.0 MiB                     "end": end,
    77    446.6 MiB      0.0 MiB                     "confidence": 1.0,
    78    446.6 MiB      0.0 MiB                     "entity": name,
    79    446.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    446.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    446.6 MiB    446.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    446.6 MiB      0.0 MiB           text = message.text
    88    446.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    446.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    446.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    446.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    446.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    446.6 MiB      0.0 MiB                   low_key = key.lower()
    96    446.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    446.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    446.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    446.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    446.6 MiB      0.0 MiB                   if( singular_key is False):
   103    446.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    446.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    446.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109    446.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    446.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    446.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    446.6 MiB      0.0 MiB               entities = old_entities
   114    446.6 MiB      0.0 MiB               words = text.split(' ')
   115    446.6 MiB      0.0 MiB               for w in words:
   116    446.6 MiB      0.0 MiB                   word =w
   117    446.6 MiB      0.0 MiB                   word_lower =word.lower()
   118    446.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    446.6 MiB      0.0 MiB                   if (word_singular is False):
   120    446.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    446.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    446.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    446.6 MiB      0.0 MiB                       start = text.find(w)
   128    446.6 MiB      0.0 MiB                       end = start + len(w)
   129    446.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    446.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    446.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    446.6 MiB      0.0 MiB                   low_key = key.lower()
   139    446.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    446.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    446.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    446.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    446.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    446.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 2776 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}], 'followup_action': None, 'latest_action_name': 'action_session_start', 'latest_event_time': 1587562502.8253005, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}], 'followup_action': None, 'latest_action_name': 'action_session_start', 'latest_event_time': 1587562502.8253005, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-22 16:35:15,211] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:35:15] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-22 16:35:15,221] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2637, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': None, 'name': 'action_listen'}, {'confidence': None, 'name': 'action_session_start'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
4
5
Content-Type: multipart/mixed; boundary="===============4895963046036533227=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============4895963046036533227==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 38.9 percent

- RAM Usage : 56.7 percent

- Count Of Training Request During Last 12 Hours: 5

- Count Of Conversations During Last 12 Hours: 4
--===============4895963046036533227==--

Email sent!
2020-04-22 16:36:08.695253 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/logout [OPTIONS]
2020-04-22 16:36:08.695253%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.1
2020-04-22 16:36:08.695253%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5539143680, percent=56.5, used=7198568448, free=5539143680)
2020-04-22 16:36:08.696465%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:36:08,699] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:36:08] "[37mOPTIONS /logout HTTP/1.1[0m" 200 -
2020-04-22 16:36:08.953544 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/logout [POST]
2020-04-22 16:36:08.953544%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-22 16:36:08.954541%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5539065856, percent=56.5, used=7198646272, free=5539065856)
2020-04-22 16:36:08.954541%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:36:08.990447%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:36:08,997] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:36:08] "[37mPOST /logout HTTP/1.1[0m" 200 -
2020-04-22 16:37:35.812292 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-22 16:37:35.812292%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.8
2020-04-22 16:37:35.812292%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5549506560, percent=56.4, used=7188205568, free=5549506560)
2020-04-22 16:37:35.812292%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:35,815] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:35] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.063087 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-22 16:37:36.063087%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.9
2020-04-22 16:37:36.063087%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5549506560, percent=56.4, used=7188205568, free=5549506560)
2020-04-22 16:37:36.063087%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    447.2 MiB    447.2 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    447.2 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    447.2 MiB      0.0 MiB       auth = data
  1482    447.2 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    447.2 MiB      0.0 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    447.2 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    447.3 MiB      0.0 MiB       if verify_password(auth["password"], _user.password):
  1491    447.3 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    447.3 MiB      0.0 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    447.3 MiB      0.0 MiB           agent_obj = {}
  1495    447.3 MiB      0.0 MiB           for agent in _user.agents:
  1496    447.3 MiB      0.0 MiB               if agent.isDefault == True:
  1497    447.3 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    447.3 MiB      0.0 MiB                                "name": agent.name}
  1499    447.3 MiB      0.0 MiB                   break
  1500    447.3 MiB      0.0 MiB           return jsonify(
  1501    447.3 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    447.3 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-22 16:37:36,231] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.310388 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-22 16:37:36.310388%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.5
2020-04-22 16:37:36.310892%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5550317568, percent=56.4, used=7187394560, free=5550317568)
2020-04-22 16:37:36.310892%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.310892%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:36,312] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mOPTIONS /intentReport/1/15/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.614735 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-22 16:37:36.614735%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.2
2020-04-22 16:37:36.615071%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535432704, percent=56.5, used=7202279424, free=5535432704)
2020-04-22 16:37:36.615071%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.615737%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:36,618] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mOPTIONS /intentReport/1/100000000/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.627703 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-22 16:37:36.627703%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:37:36.628121%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535432704, percent=56.5, used=7202279424, free=5535432704)
2020-04-22 16:37:36.628121%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:36,630] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=24 HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.632725 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-22 16:37:36.632725%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-22 16:37:36.633721%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535428608, percent=56.5, used=7202283520, free=5535428608)
2020-04-22 16:37:36.633721%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:36,636] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.646653 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-22 16:37:36.646653%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-22 16:37:36.646653%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5536952320, percent=56.5, used=7200759808, free=5536952320)
2020-04-22 16:37:36.646653%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.646653%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.655820%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.661611 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [OPTIONS]
2020-04-22 16:37:36.661611%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-22 16:37:36.661611%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5536952320, percent=56.5, used=7200759808, free=5536952320)
2020-04-22 16:37:36.661611%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:36,663] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mOPTIONS /agent/59 HTTP/1.1[0m" 200 -
[2020-04-22 16:37:36,680] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mGET /intentReport/1/15/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:36.940005 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-22 16:37:36.940005%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.6
2020-04-22 16:37:36.940853%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5537644544, percent=56.5, used=7200067584, free=5537644544)
2020-04-22 16:37:36.941258%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.941258%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.953816%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.963792 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-22 16:37:36.963792%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.6
2020-04-22 16:37:36.963792%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5537595392, percent=56.5, used=7200116736, free=5537595392)
2020-04-22 16:37:36.964788%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:36.980775 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-22 16:37:36.980775%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-22 16:37:36.981430%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5537595392, percent=56.5, used=7200116736, free=5537595392)
2020-04-22 16:37:36.981736%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:36,990] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:36] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-22 16:37:37.001302 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [GET]
2020-04-22 16:37:37.001302%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
[2020-04-22 16:37:37,011] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:37] "[37mGET /intentReport/1/100000000/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:37.001688%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5537632256, percent=56.5, used=7200079872, free=5537632256)
2020-04-22 16:37:37.016716%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:37.027620%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:37.047573%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:37,063] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:37] "[37mGET /agent?page_num=1&item_per_page=10000&userId=24 HTTP/1.1[0m" 200 -
[2020-04-22 16:37:37,064] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:37] "[37mGET /agent/59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:39.915622 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-22 16:37:39.915683%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.8
2020-04-22 16:37:39.919673%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528834048, percent=56.6, used=7208878080, free=5528834048)
2020-04-22 16:37:39.920611%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:39.920611%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:39,928] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:39] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:39.941558 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-22 16:37:39.941558%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-22 16:37:39.942557%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528895488, percent=56.6, used=7208816640, free=5528895488)
2020-04-22 16:37:39.942557%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:39.942557%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:39,948] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:39] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:39.956512 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-22 16:37:39.956512%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-22 16:37:39.956512%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528834048, percent=56.6, used=7208878080, free=5528834048)
2020-04-22 16:37:39.956512%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:39.956512%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:39,960] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:39] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:39.962497 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/407 [OPTIONS]
2020-04-22 16:37:39.963495%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:37:39.963495%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528834048, percent=56.6, used=7208878080, free=5528834048)
2020-04-22 16:37:39.963495%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:39,965] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:39] "[37mOPTIONS /getintent/407 HTTP/1.1[0m" 200 -
2020-04-22 16:37:39.975559 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-22 16:37:39.976461%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-22 16:37:39.976461%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528834048, percent=56.6, used=7208878080, free=5528834048)
2020-04-22 16:37:39.976461%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:39.976461%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:39,978] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:39] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:39.982441 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-22 16:37:39.982441%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-22 16:37:39.984437%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528834048, percent=56.6, used=7208878080, free=5528834048)
2020-04-22 16:37:39.985517%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:39,987] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:39] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-22 16:37:40.244285 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [GET]
2020-04-22 16:37:40.244285%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.4
2020-04-22 16:37:40.244285%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528850432, percent=56.6, used=7208861696, free=5528850432)
2020-04-22 16:37:40.245312%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.252691%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.260393 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-22 16:37:40.260393%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-22 16:37:40.260393%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528850432, percent=56.6, used=7208861696, free=5528850432)
2020-04-22 16:37:40.260393%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.260393%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:40,269] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /agent/59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:40.273926%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.283176 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-22 16:37:40.283176%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-22 16:37:40.283176%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528838144, percent=56.6, used=7208873984, free=5528838144)
2020-04-22 16:37:40.284175%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.284175%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.302200 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/407 [GET]
2020-04-22 16:37:40.302200%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:37:40.302200%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528756224, percent=56.6, used=7208955904, free=5528756224)
2020-04-22 16:37:40.303122%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.314092%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.319079%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.325067 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-22 16:37:40.325067%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:87.5
2020-04-22 16:37:40.325067%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528739840, percent=56.6, used=7208972288, free=5528739840)
2020-04-22 16:37:40.325067%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.325067%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.341056 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-22 16:37:40.341056%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-22 16:37:40.341056%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528727552, percent=56.6, used=7208984576, free=5528727552)
2020-04-22 16:37:40.342025%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.342025%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.344087%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:40,351] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=59 HTTP/1.1[0m" 200 -
[2020-04-22 16:37:40,369] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:40.380914%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:40,396] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=59 HTTP/1.1[0m" 200 -
[2020-04-22 16:37:40,396] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=59 HTTP/1.1[0m" 200 -
[2020-04-22 16:37:40,446] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /getintent/407 HTTP/1.1[0m" 200 -
2020-04-22 16:37:40.581084 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-22 16:37:40.581084%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.5
2020-04-22 16:37:40.581084%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528735744, percent=56.6, used=7208976384, free=5528735744)
2020-04-22 16:37:40.581084%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:40.597193%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:40,611] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:40] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-22 16:37:42.672200 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-22 16:37:42.672200%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.2
2020-04-22 16:37:42.673255%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528588288, percent=56.6, used=7209123840, free=5528588288)
2020-04-22 16:37:42.673255%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:42.673255%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:42,677] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:42] "[37mOPTIONS /intentReport/1/100000000/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:42.693145 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-22 16:37:42.693145%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:87.5
2020-04-22 16:37:42.694225%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528588288, percent=56.6, used=7209123840, free=5528588288)
2020-04-22 16:37:42.694225%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:42.694225%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:42,705] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:42] "[37mOPTIONS /intentReport/1/15/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:42.723063 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [OPTIONS]
2020-04-22 16:37:42.723063%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-22 16:37:42.723063%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5531586560, percent=56.6, used=7206125568, free=5531586560)
2020-04-22 16:37:42.724058%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:42,727] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:42] "[37mOPTIONS /agent/59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:42.919056 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-22 16:37:42.919056%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.6
2020-04-22 16:37:42.920053%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528563712, percent=56.6, used=7209148416, free=5528563712)
2020-04-22 16:37:42.920053%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:42.920053%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:42.925075%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:42,939] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:42] "[37mGET /intentReport/1/100000000/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:42.997538 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-22 16:37:42.997538%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-22 16:37:42.997538%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528571904, percent=56.6, used=7209140224, free=5528571904)
2020-04-22 16:37:42.997538%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:42.997538%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:43.004518%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:43,017] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:43] "[37mGET /intentReport/1/15/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:43.029452 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [GET]
2020-04-22 16:37:43.029452%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-22 16:37:43.029452%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5528567808, percent=56.6, used=7209144320, free=5528567808)
2020-04-22 16:37:43.030450%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:43.039426%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:43,047] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:43] "[37mGET /agent/59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:44.105757 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-22 16:37:44.105757%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.0
2020-04-22 16:37:44.105757%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5527277568, percent=56.6, used=7210434560, free=5527277568)
2020-04-22 16:37:44.105757%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.105757%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.111743%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:44,119] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:44.422293 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-22 16:37:44.422293%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.1
2020-04-22 16:37:44.422293%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5526355968, percent=56.6, used=7211356160, free=5526355968)
2020-04-22 16:37:44.423397%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.423397%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.450208 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/408 [OPTIONS]
2020-04-22 16:37:44.458544%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.452206%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:37:44.463174%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5526364160, percent=56.6, used=7211347968, free=5526364160)
2020-04-22 16:37:44.464399%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.474371 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-22 16:37:44.474371%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-22 16:37:44.475140%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5526364160, percent=56.6, used=7211347968, free=5526364160)
2020-04-22 16:37:44.475140%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.475140%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:44,478] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mOPTIONS /getintent/408 HTTP/1.1[0m" 200 -
2020-04-22 16:37:44.520025%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.526063 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-22 16:37:44.526063%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-22 16:37:44.526063%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5526355968, percent=56.6, used=7211356160, free=5526355968)
2020-04-22 16:37:44.526063%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.558119 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [GET]
2020-04-22 16:37:44.558119%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-22 16:37:44.568184%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5526376448, percent=56.6, used=7211335680, free=5526376448)
2020-04-22 16:37:44.568898%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:44,583] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=59 HTTP/1.1[0m" 200 -
[2020-04-22 16:37:44,590] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:44.599812%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.610780%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:44,620] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-22 16:37:44,633] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mGET /agent/59 HTTP/1.1[0m" 200 -
2020-04-22 16:37:44.791691 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/408 [GET]
2020-04-22 16:37:44.791691%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.2
2020-04-22 16:37:44.791691%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5526384640, percent=56.6, used=7211327488, free=5526384640)
2020-04-22 16:37:44.791691%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22 16:37:44.797737%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:44,827] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:44] "[37mGET /getintent/408 HTTP/1.1[0m" 200 -
2020-04-22 16:37:45.165364 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/417 [OPTIONS]
2020-04-22 16:37:45.165364%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:47.0
2020-04-22 16:37:45.167367%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5523881984, percent=56.6, used=7213830144, free=5523881984)
2020-04-22 16:37:45.168197%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:45,176] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:45] "[37mOPTIONS /entity/417 HTTP/1.1[0m" 200 -
2020-04-22 16:37:45.404029 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/417 [GET]
2020-04-22 16:37:45.404029%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.6
2020-04-22 16:37:45.404612%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5517766656, percent=56.7, used=7219945472, free=5517766656)
2020-04-22 16:37:45.405026%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-22 16:37:45,440] INFO in _internal: 127.0.0.1 - - [22/Apr/2020 16:37:45] "[37mGET /entity/417 HTTP/1.1[0m" 200 -
[2020-04-23 09:26:52,341] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 09:27:51.032717 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:27:51.032717%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.4
2020-04-23 09:27:51.032717%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5600956416, percent=56.0, used=7136755712, free=5600956416)
2020-04-23 09:27:51.032717%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:51.032717%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:51,034] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[37mOPTIONS /intentReport/1/15/en?agentId=59 HTTP/1.1[0m" 200 -
2020-04-23 09:27:51.034710 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:27:51.034710%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:51.034710%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5600956416, percent=56.0, used=7136755712, free=5600956416)
2020-04-23 09:27:51.034710%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:51.034710%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:51.035737 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:27:51.035737%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:51.035737%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5600956416, percent=56.0, used=7136755712, free=5600956416)
2020-04-23 09:27:51.035737%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:51.037703 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [OPTIONS]
2020-04-23 09:27:51.037703%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:27:51.037703%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5600956416, percent=56.0, used=7136755712, free=5600956416)
2020-04-23 09:27:51.037703%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:51,035] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[37mOPTIONS /intentReport/1/100000000/en?agentId=59 HTTP/1.1[0m" 200 -
[2020-04-23 09:27:51,036] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=24 HTTP/1.1[0m" 200 -
[2020-04-23 09:27:51,037] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[37mOPTIONS /agent/59 HTTP/1.1[0m" 200 -
2020-04-23 09:27:51.229195 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:27:51.229195%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.0
2020-04-23 09:27:51.229195%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5600395264, percent=56.0, used=7137316864, free=5600395264)
2020-04-23 09:27:51.229195%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:51,231] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[31m[1mGET /agent?page_num=1&item_per_page=10000&userId=24 HTTP/1.1[0m" 401 -
[2020-04-23 09:27:51,346] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 09:27:51.345882
2020-04-23 09:27:51.349874 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:27:51.349874%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.3
2020-04-23 09:27:51.349874%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5591445504, percent=56.1, used=7146266624, free=5591445504)
2020-04-23 09:27:51.349874%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:51.349874%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:51,350] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[31m[1mGET /intentReport/1/15/en?agentId=59 HTTP/1.1[0m" 401 -
2020-04-23 09:27:51.352864 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:27:51.352864%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:51.352864%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5591437312, percent=56.1, used=7146274816, free=5591437312)
2020-04-23 09:27:51.352864%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:51.352864%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:51,353] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[31m[1mGET /intentReport/1/100000000/en?agentId=59 HTTP/1.1[0m" 401 -
2020-04-23 09:27:51.367826 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/59 [GET]
2020-04-23 09:27:51.367826%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:27:51.367826%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5591396352, percent=56.1, used=7146315776, free=5591396352)
2020-04-23 09:27:51.367826%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:51,368] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:51] "[31m[1mGET /agent/59 HTTP/1.1[0m" 401 -
2020-04-23 09:27:53.402809 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:27:53.402809%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.7
2020-04-23 09:27:53.403808%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5602873344, percent=56.0, used=7134838784, free=5602873344)
2020-04-23 09:27:53.403808%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:53.403808%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:53.431683%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2638 2638
 2- default platform is not  Null 
2020-04-23 09:27:54.440126 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-23 09:27:54.440126%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.1
2020-04-23 09:27:54.440126%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5573844992, percent=56.2, used=7163867136, free=5573844992)
2020-04-23 09:27:54.440126%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:54,441] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:54] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-23 09:27:54.840543 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-23 09:27:54.840543%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.0
2020-04-23 09:27:54.840543%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5572182016, percent=56.3, used=7165530112, free=5572182016)
2020-04-23 09:27:54.840543%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    165.4 MiB    165.4 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    165.4 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    165.4 MiB      0.0 MiB       auth = data
  1482    165.4 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    165.5 MiB      0.1 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    165.5 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    166.8 MiB      1.3 MiB       if verify_password(auth["password"], _user.password):
  1491    166.8 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    166.8 MiB      0.0 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    166.8 MiB      0.0 MiB           agent_obj = {}
  1495    166.9 MiB      0.1 MiB           for agent in _user.agents:
  1496    166.9 MiB      0.0 MiB               if agent.isDefault == True:
  1497    166.9 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    166.9 MiB      0.0 MiB                                "name": agent.name}
  1499    166.9 MiB      0.0 MiB                   break
  1500    166.9 MiB      0.0 MiB           return jsonify(
  1501    166.9 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    166.9 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-23 09:27:55,098] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.134226 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:27:55.134226%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.0
2020-04-23 09:27:55.135225%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5567803392, percent=56.3, used=7169908736, free=5567803392)
2020-04-23 09:27:55.135225%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.135225%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,136] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mOPTIONS /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.433953 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:27:55.433953%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.8
2020-04-23 09:27:55.433953%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5559926784, percent=56.4, used=7177785344, free=5559926784)
2020-04-23 09:27:55.433953%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.433953%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,434] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mOPTIONS /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.439938 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:27:55.439938%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:55.439938%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5557432320, percent=56.4, used=7180279808, free=5557432320)
2020-04-23 09:27:55.440935%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,441] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.442929 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 09:27:55.442929%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:55.442929%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5557432320, percent=56.4, used=7180279808, free=5557432320)
2020-04-23 09:27:55.442929%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,443] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.447917 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:27:55.447917%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:27:55.447917%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5557456896, percent=56.4, used=7180255232, free=5557456896)
2020-04-23 09:27:55.447917%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.447917%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.451906 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:27:55.451906%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:55.451906%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5557436416, percent=56.4, used=7180275712, free=5557436416)
2020-04-23 09:27:55.451906%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,452] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.453900%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,466] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mGET /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.742886 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:27:55.742886%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.7
2020-04-23 09:27:55.742886%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535899648, percent=56.5, used=7201812480, free=5535899648)
2020-04-23 09:27:55.742886%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.742886%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.745851%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.754827 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:27:55.754827%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:55.754827%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535899648, percent=56.5, used=7201812480, free=5535899648)
2020-04-23 09:27:55.754827%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:27:55.760812 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 09:27:55.760812%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:27:55.760812%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535911936, percent=56.5, used=7201800192, free=5535911936)
2020-04-23 09:27:55.760812%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,761] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.766796 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:27:55.766796%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:27:55.766796%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5535875072, percent=56.5, used=7201837056, free=5535875072)
2020-04-23 09:27:55.766796%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,833] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mGET /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.835611%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,844] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:27:55.848577%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:27:55,853] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:27:55] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:28:02.940066 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [OPTIONS]
2020-04-23 09:28:02.940066%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:66.4
2020-04-23 09:28:02.940066%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5172547584, percent=59.4, used=7565164544, free=5172547584)
2020-04-23 09:28:02.940066%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:28:02,942] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:02] "[37mOPTIONS /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:28:02.945053 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:28:02.945053%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:28:02.945053%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5172559872, percent=59.4, used=7565152256, free=5172559872)
2020-04-23 09:28:02.945053%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:28:02,947] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:02] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:28:02.952034 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:28:02.952034%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:28:02.952034%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5172559872, percent=59.4, used=7565152256, free=5172559872)
2020-04-23 09:28:02.952034%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:28:02,953] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:02] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:28:03.172882 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [GET]
2020-04-23 09:28:03.172882%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.2
2020-04-23 09:28:03.172882%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5171974144, percent=59.4, used=7565737984, free=5171974144)
2020-04-23 09:28:03.172882%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:28:03,186] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:03] "[37mGET /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:28:03.287385 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:28:03.287385%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.4
2020-04-23 09:28:03.287385%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5174194176, percent=59.4, used=7563517952, free=5174194176)
2020-04-23 09:28:03.287385%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:28:03.287385%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:28:03.310205 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:28:03.310205%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:28:03.310205%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5178220544, percent=59.3, used=7559491584, free=5178220544)
2020-04-23 09:28:03.310205%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:28:03.314193%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:28:03.337781%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:28:03,342] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:03] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
[2020-04-23 09:28:03,343] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:03] "[31m[1mPOST /searchConversationHistory HTTP/1.1[0m" 400 -
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    385.2 MiB    385.2 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    385.2 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    385.2 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    385.2 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    385.2 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    385.2 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    420.5 MiB    420.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    420.5 MiB      0.0 MiB           entity = {"value": value,
    75    420.5 MiB      0.0 MiB                     "start": start,
    76    420.5 MiB      0.0 MiB                     "end": end,
    77    420.5 MiB      0.0 MiB                     "confidence": 1.0,
    78    420.5 MiB      0.0 MiB                     "entity": name,
    79    420.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    420.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    420.5 MiB    420.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    420.5 MiB      0.0 MiB           text = message.text
    88    420.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    420.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    420.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    420.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    420.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    420.5 MiB      0.0 MiB                   low_key = key.lower()
    96    420.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    420.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    420.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    420.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    420.5 MiB      0.0 MiB                   if( singular_key is False):
   103    420.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    420.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    420.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    420.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    420.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    420.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    420.5 MiB      0.0 MiB               entities = old_entities
   114    420.5 MiB      0.0 MiB               words = text.split(' ')
   115    420.5 MiB      0.0 MiB               for w in words:
   116    420.5 MiB      0.0 MiB                   word =w
   117    420.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    420.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    420.5 MiB      0.0 MiB                   if (word_singular is False):
   120    420.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    420.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    420.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    420.5 MiB      0.0 MiB                       start = text.find(w)
   128    420.5 MiB      0.0 MiB                       end = start + len(w)
   129    420.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    420.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    420.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    420.5 MiB      0.0 MiB                   low_key = key.lower()
   139    420.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    420.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    420.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    420.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    420.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    420.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    420.5 MiB    420.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    420.5 MiB      0.0 MiB           entity = {"value": value,
    75    420.5 MiB      0.0 MiB                     "start": start,
    76    420.5 MiB      0.0 MiB                     "end": end,
    77    420.5 MiB      0.0 MiB                     "confidence": 1.0,
    78    420.5 MiB      0.0 MiB                     "entity": name,
    79    420.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    420.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    420.5 MiB    420.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    420.5 MiB      0.0 MiB           text = message.text
    88    420.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    420.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    420.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    420.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    420.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    420.5 MiB      0.0 MiB                   low_key = key.lower()
    96    420.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    420.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    420.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    420.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    420.5 MiB      0.0 MiB                   if( singular_key is False):
   103    420.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    420.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    420.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    420.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    420.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    420.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    420.5 MiB      0.0 MiB               entities = old_entities
   114    420.5 MiB      0.0 MiB               words = text.split(' ')
   115    420.5 MiB      0.0 MiB               for w in words:
   116    420.5 MiB      0.0 MiB                   word =w
   117    420.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    420.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    420.5 MiB      0.0 MiB                   if (word_singular is False):
   120    420.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    420.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    420.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    420.5 MiB      0.0 MiB                       start = text.find(w)
   128    420.5 MiB      0.0 MiB                       end = start + len(w)
   129    420.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    420.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    420.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    420.5 MiB      0.0 MiB                   low_key = key.lower()
   139    420.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    420.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    420.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    420.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    420.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    420.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 4469 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587623290.4887953, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587623290.4887953, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 09:28:10,606] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:28:10] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 09:28:10,610] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2638, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': None, 'name': 'action_session_start'}, {'confidence': 0.7098808288574219, 'name': 'action_listen'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
1
0
Content-Type: multipart/mixed; boundary="===============8875522477050808093=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============8875522477050808093==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 35.1 percent

- RAM Usage : 60.2 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 1
--===============8875522477050808093==--

Email sent!
[2020-04-23 09:29:29,135] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 09:29:40.602744 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [OPTIONS]
2020-04-23 09:29:40.602744%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.3
2020-04-23 09:29:40.602744%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122265088, percent=59.8, used=7615447040, free=5122265088)
2020-04-23 09:29:40.602744%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:40,605] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:40] "[37mOPTIONS /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:29:40.605729 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:29:40.605729%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:29:40.605729%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122260992, percent=59.8, used=7615451136, free=5122260992)
2020-04-23 09:29:40.605729%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:40.608721 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:29:40.608721%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:29:40.608721%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122260992, percent=59.8, used=7615451136, free=5122260992)
2020-04-23 09:29:40.608721%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:40.609718 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:29:40.609718%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:29:40.609718%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122260992, percent=59.8, used=7615451136, free=5122260992)
2020-04-23 09:29:40.609718%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:40,607] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:40] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
[2020-04-23 09:29:40,609] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:40] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 09:29:40,610] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:40] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:29:40.795221 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:29:40.795221%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:91.7
2020-04-23 09:29:40.796219%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5120786432, percent=59.8, used=7616925696, free=5120786432)
2020-04-23 09:29:40.796219%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:40.796219%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:40.830143%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:40,839] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:40] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:29:41.138303 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:29:41.138303%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:94.3
2020-04-23 09:29:41.138303%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5112303616, percent=59.9, used=7625408512, free=5112303616)
2020-04-23 09:29:41.138303%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:41.190163%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:41,203] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:41] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
[2020-04-23 09:29:41,215] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 09:29:41.215097
2020-04-23 09:29:41.255990 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:29:41.255990%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:29:41.255990%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5116186624, percent=59.8, used=7621525504, free=5116186624)
2020-04-23 09:29:41.255990%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:41.269951%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:41,288] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:41] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:29:41.331785 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [GET]
2020-04-23 09:29:41.331785%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:29:41.332781%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122228224, percent=59.8, used=7615483904, free=5122228224)
2020-04-23 09:29:41.332781%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:41,348] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:41] "[37mGET /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:29:43.299157 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:29:43.299157%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.6
2020-04-23 09:29:43.299157%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5163855872, percent=59.5, used=7573856256, free=5163855872)
2020-04-23 09:29:43.299157%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:43.300166%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:43.312373%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2639 2639
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    385.7 MiB    385.7 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    385.7 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    385.7 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    385.7 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    385.7 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    385.7 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.2 MiB    419.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.2 MiB      0.0 MiB           entity = {"value": value,
    75    419.2 MiB      0.0 MiB                     "start": start,
    76    419.2 MiB      0.0 MiB                     "end": end,
    77    419.2 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.2 MiB      0.0 MiB                     "entity": name,
    79    419.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.2 MiB    419.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.2 MiB      0.0 MiB           text = message.text
    88    419.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.2 MiB      0.0 MiB                   low_key = key.lower()
    96    419.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.2 MiB      0.0 MiB                   if( singular_key is False):
   103    419.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.2 MiB      0.0 MiB               entities = old_entities
   114    419.2 MiB      0.0 MiB               words = text.split(' ')
   115    419.2 MiB      0.0 MiB               for w in words:
   116    419.2 MiB      0.0 MiB                   word =w
   117    419.2 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.2 MiB      0.0 MiB                   if (word_singular is False):
   120    419.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.2 MiB      0.0 MiB                       start = text.find(w)
   128    419.2 MiB      0.0 MiB                       end = start + len(w)
   129    419.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.2 MiB      0.0 MiB                   low_key = key.lower()
   139    419.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


2020-04-23 09:29:55.367753 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:29:55.368753%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.5
2020-04-23 09:29:55.368753%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4885946368, percent=61.6, used=7851765760, free=4885946368)
2020-04-23 09:29:55.368753%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:55,369] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:55] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:29:55.621291 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:29:55.621291%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.7
2020-04-23 09:29:55.622290%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4886036480, percent=61.6, used=7851675648, free=4886036480)
2020-04-23 09:29:55.622290%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:55.622290%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:29:55.631265%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:29:55,636] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:29:55] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:30:01.295774 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:30:01.295774%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.4
2020-04-23 09:30:01.295774%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4955033600, percent=61.1, used=7782678528, free=4955033600)
2020-04-23 09:30:01.296764%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:30:01,301] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:30:01] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:30:01.613619 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:30:01.613619%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.2
2020-04-23 09:30:01.613619%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4955148288, percent=61.1, used=7782563840, free=4955148288)
2020-04-23 09:30:01.613619%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:30:01.613619%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:30:01.626584%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:30:01,669] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:30:01] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.3 MiB    419.3 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.3 MiB      0.0 MiB           entity = {"value": value,
    75    419.3 MiB      0.0 MiB                     "start": start,
    76    419.3 MiB      0.0 MiB                     "end": end,
    77    419.3 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.3 MiB      0.0 MiB                     "entity": name,
    79    419.3 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.3 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.3 MiB    419.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.3 MiB      0.0 MiB           text = message.text
    88    419.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.3 MiB      0.0 MiB                   low_key = key.lower()
    96    419.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.3 MiB      0.0 MiB                   if( singular_key is False):
   103    419.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.3 MiB      0.0 MiB               entities = old_entities
   114    419.3 MiB      0.0 MiB               words = text.split(' ')
   115    419.3 MiB      0.0 MiB               for w in words:
   116    419.3 MiB      0.0 MiB                   word =w
   117    419.3 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.3 MiB      0.0 MiB                   if (word_singular is False):
   120    419.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.3 MiB      0.0 MiB                       start = text.find(w)
   128    419.3 MiB      0.0 MiB                       end = start + len(w)
   129    419.3 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.3 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.3 MiB      0.0 MiB                   low_key = key.lower()
   139    419.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 6289 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587623392.785128, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587623392.785128, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 09:30:04,983] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:30:04] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 09:30:04,987] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2639, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9790626168251038, 'name': 'hci_form'}, {'confidence': 0.9805377721786499, 'name': 'action_setIntent_id'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
2
0
Content-Type: multipart/mixed; boundary="===============5111343805235023980=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============5111343805235023980==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 8.1 percent

- RAM Usage : 61.1 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 2
--===============5111343805235023980==--

Email sent!
[2020-04-23 09:30:58,410] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 09:31:07.602596 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [OPTIONS]
2020-04-23 09:31:07.602596%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:51.8
2020-04-23 09:31:07.602596%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5332213760, percent=58.1, used=7405498368, free=5332213760)
2020-04-23 09:31:07.603584%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:07,604] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:07] "[37mOPTIONS /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:31:07.604583 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:31:07.604583%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:31:07.604583%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5332213760, percent=58.1, used=7405498368, free=5332213760)
2020-04-23 09:31:07.605579%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:07.606578 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:31:07.606578%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:31:07.606578%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5332148224, percent=58.1, used=7405563904, free=5332148224)
2020-04-23 09:31:07.606578%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:07,606] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:07] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:31:07.613571 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:31:07.613571%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:31:07.613571%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5332078592, percent=58.1, used=7405633536, free=5332078592)
2020-04-23 09:31:07.614561%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:07,608] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:07] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 09:31:07,620] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:07] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:31:07.760164 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [GET]
2020-04-23 09:31:07.760164%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.3
2020-04-23 09:31:07.760164%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5331505152, percent=58.1, used=7406206976, free=5331505152)
2020-04-23 09:31:07.760164%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:07,806] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:07] "[37mGET /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:31:07.937690 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:31:07.937690%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-23 09:31:07.937690%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5330984960, percent=58.1, used=7406727168, free=5330984960)
2020-04-23 09:31:07.937690%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:07.937690%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:07.939685 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:31:07.939685%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:31:07.940681%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5330984960, percent=58.1, used=7406727168, free=5330984960)
2020-04-23 09:31:07.940681%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:07.969604 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:31:07.969604%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:31:07.969604%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5330903040, percent=58.1, used=7406809088, free=5330903040)
2020-04-23 09:31:07.970601%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:07,982] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 09:31:07.982570
2020-04-23 09:31:07.985561%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:07,995] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:07] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:31:08.021466%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:08.024458%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:08,035] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:08] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 09:31:08,036] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:08] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:31:10.032027 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:31:10.032027%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.2
2020-04-23 09:31:10.032383%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5220401152, percent=59.0, used=7517310976, free=5220401152)
2020-04-23 09:31:10.032383%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:10.032383%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:10.039404%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2640 2640
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    385.5 MiB    385.5 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    385.5 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    385.5 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    385.5 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    385.5 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    385.5 MiB      0.0 MiB                   return pickle.load(f)


2020-04-23 09:31:18.724931 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:31:18.724931%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.4
2020-04-23 09:31:18.724931%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4910764032, percent=61.4, used=7826948096, free=4910764032)
2020-04-23 09:31:18.724931%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:18,725] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:18] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:31:19.077016 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:31:19.077016%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-23 09:31:19.077016%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4910747648, percent=61.4, used=7826964480, free=4910747648)
2020-04-23 09:31:19.077016%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:19.077016%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:19.108903%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:19,139] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:19] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.0 MiB    419.0 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.0 MiB      0.0 MiB           entity = {"value": value,
    75    419.0 MiB      0.0 MiB                     "start": start,
    76    419.0 MiB      0.0 MiB                     "end": end,
    77    419.0 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.0 MiB      0.0 MiB                     "entity": name,
    79    419.0 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.0 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.0 MiB    419.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.0 MiB      0.0 MiB           text = message.text
    88    419.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.0 MiB      0.0 MiB                   low_key = key.lower()
    96    419.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.0 MiB      0.0 MiB                   if( singular_key is False):
   103    419.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.0 MiB      0.0 MiB               entities = old_entities
   114    419.0 MiB      0.0 MiB               words = text.split(' ')
   115    419.0 MiB      0.0 MiB               for w in words:
   116    419.0 MiB      0.0 MiB                   word =w
   117    419.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.0 MiB      0.0 MiB                   if (word_singular is False):
   120    419.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.0 MiB      0.0 MiB                       start = text.find(w)
   128    419.0 MiB      0.0 MiB                       end = start + len(w)
   129    419.0 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.0 MiB      0.0 MiB                   low_key = key.lower()
   139    419.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


2020-04-23 09:31:26.869479 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:31:26.869479%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.0
2020-04-23 09:31:26.869479%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4993228800, percent=60.8, used=7744483328, free=4993228800)
2020-04-23 09:31:26.870477%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:26,873] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:26] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:31:27.180404 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:31:27.180404%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.7
2020-04-23 09:31:27.180404%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4989181952, percent=60.8, used=7748530176, free=4989181952)
2020-04-23 09:31:27.180404%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:27.180404%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:31:27.183410%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:31:27,195] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:27] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.1 MiB    419.1 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.1 MiB      0.0 MiB           entity = {"value": value,
    75    419.1 MiB      0.0 MiB                     "start": start,
    76    419.1 MiB      0.0 MiB                     "end": end,
    77    419.1 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.1 MiB      0.0 MiB                     "entity": name,
    79    419.1 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.1 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.1 MiB    419.1 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.1 MiB      0.0 MiB           text = message.text
    88    419.1 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.1 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.1 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.1 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.1 MiB      0.0 MiB                   low_key = key.lower()
    96    419.1 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.1 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.1 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.1 MiB      0.0 MiB                   if( singular_key is False):
   103    419.1 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.1 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.1 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.1 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.1 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.1 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.1 MiB      0.0 MiB               entities = old_entities
   114    419.1 MiB      0.0 MiB               words = text.split(' ')
   115    419.1 MiB      0.0 MiB               for w in words:
   116    419.1 MiB      0.0 MiB                   word =w
   117    419.1 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.1 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.1 MiB      0.0 MiB                   if (word_singular is False):
   120    419.1 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.1 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.1 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.1 MiB      0.0 MiB                       start = text.find(w)
   128    419.1 MiB      0.0 MiB                       end = start + len(w)
   129    419.1 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.1 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.1 MiB      0.0 MiB                   low_key = key.lower()
   139    419.1 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.1 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.1 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.1 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.1 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.1 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 7910 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587623392.785128, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587623392.785128, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 09:31:27,732] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:31:27] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 09:31:27,736] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2640, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9790626168251038, 'name': 'hci_form'}, {'confidence': 0.9805377721786499, 'name': 'action_setIntent_id'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
3
0
Content-Type: multipart/mixed; boundary="===============0903138072495707899=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============0903138072495707899==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 19.4 percent

- RAM Usage : 60.8 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 3
--===============0903138072495707899==--

[2020-04-23 09:33:24,299] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 09:33:32.962026 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 09:33:32.962026%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.2
2020-04-23 09:33:32.962026%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5524758528, percent=56.6, used=7212953600, free=5524758528)
2020-04-23 09:33:32.962026%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:33:32.962026%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:33:32,963] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:33:32] "[37mOPTIONS /trainAgent?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:33:33.112648 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 09:33:33.112648%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:33:33.112648%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5523750912, percent=56.6, used=7213961216, free=5523750912)
2020-04-23 09:33:33.112648%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:33:33.112648%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:33:33.176032%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:33:33,186] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 09:33:33.186024
[2020-04-23 09:33:33,315] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:33:33] "[31m[1mPOST /trainAgent?agentId=48 HTTP/1.1[0m" 400 -
2020-04-23 09:33:35.219690 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:33:35.219690%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.3
2020-04-23 09:33:35.219690%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5515321344, percent=56.7, used=7222390784, free=5515321344)
2020-04-23 09:33:35.220686%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:33:35.220686%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:33:35.228711%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2641 2641
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    384.5 MiB    384.5 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    384.5 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    384.5 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    384.5 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    384.5 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    384.5 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.6 MiB    419.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.6 MiB      0.0 MiB           entity = {"value": value,
    75    419.6 MiB      0.0 MiB                     "start": start,
    76    419.6 MiB      0.0 MiB                     "end": end,
    77    419.6 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.6 MiB      0.0 MiB                     "entity": name,
    79    419.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.6 MiB    419.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.6 MiB      0.0 MiB           text = message.text
    88    419.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.6 MiB      0.0 MiB                   low_key = key.lower()
    96    419.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.6 MiB      0.0 MiB                   if( singular_key is False):
   103    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.6 MiB      0.0 MiB               entities = old_entities
   114    419.6 MiB      0.0 MiB               words = text.split(' ')
   115    419.6 MiB      0.0 MiB               for w in words:
   116    419.6 MiB      0.0 MiB                   word =w
   117    419.6 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.6 MiB      0.0 MiB                   if (word_singular is False):
   120    419.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.6 MiB      0.0 MiB                       start = text.find(w)
   128    419.6 MiB      0.0 MiB                       end = start + len(w)
   129    419.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.6 MiB      0.0 MiB                   low_key = key.lower()
   139    419.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.7 MiB    419.7 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.7 MiB      0.0 MiB           entity = {"value": value,
    75    419.7 MiB      0.0 MiB                     "start": start,
    76    419.7 MiB      0.0 MiB                     "end": end,
    77    419.7 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.7 MiB      0.0 MiB                     "entity": name,
    79    419.7 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.7 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.7 MiB    419.7 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.7 MiB      0.0 MiB           text = message.text
    88    419.7 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.7 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.7 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.7 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.7 MiB      0.0 MiB                   low_key = key.lower()
    96    419.7 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.7 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.7 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.7 MiB      0.0 MiB                   if( singular_key is False):
   103    419.7 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.7 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.7 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.7 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.7 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.7 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.7 MiB      0.0 MiB               entities = old_entities
   114    419.7 MiB      0.0 MiB               words = text.split(' ')
   115    419.7 MiB      0.0 MiB               for w in words:
   116    419.7 MiB      0.0 MiB                   word =w
   117    419.7 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.7 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.7 MiB      0.0 MiB                   if (word_singular is False):
   120    419.7 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.7 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.7 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.7 MiB      0.0 MiB                       start = text.find(w)
   128    419.7 MiB      0.0 MiB                       end = start + len(w)
   129    419.7 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.7 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.7 MiB      0.0 MiB                   low_key = key.lower()
   139    419.7 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.7 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.7 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.7 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.7 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.7 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 9520 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587623624.0397265, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587623624.0397265, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 09:33:52,214] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:33:52] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 09:33:52,218] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2641, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9507420659065247, 'name': 'action_listen'}, {'confidence': 0.9738123416900635, 'name': 'hci_form'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
4
0
Content-Type: multipart/mixed; boundary="===============7829937620780858931=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============7829937620780858931==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 26.9 percent

- RAM Usage : 59.0 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 4
--===============7829937620780858931==--

Email sent!
2020-04-23 09:34:38.562479 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:34:38.562479%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.9
2020-04-23 09:34:38.562479%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999569408, percent=60.7, used=7738142720, free=4999569408)
2020-04-23 09:34:38.563478%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.563478%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:38,565] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:38] "[37mOPTIONS /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:38.568465 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:34:38.568465%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:34:38.568465%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999352320, percent=60.8, used=7738359808, free=4999352320)
2020-04-23 09:34:38.569461%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.569461%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:38,571] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:38] "[37mOPTIONS /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:38.581431 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:34:38.581431%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:34:38.581431%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999286784, percent=60.8, used=7738425344, free=4999286784)
2020-04-23 09:34:38.582433%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:38,582] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:38] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:38.811352 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:34:38.811352%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.7
2020-04-23 09:34:38.811352%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999274496, percent=60.8, used=7738437632, free=4999274496)
2020-04-23 09:34:38.811352%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.811352%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.814344%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:38,824] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:38] "[37mGET /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:38.870605 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:34:38.870605%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:34:38.870605%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999172096, percent=60.8, used=7738540032, free=4999172096)
2020-04-23 09:34:38.870605%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.870605%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.876588%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:38.880580 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:34:38.880580%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:34:38.880580%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999172096, percent=60.8, used=7738540032, free=4999172096)
2020-04-23 09:34:38.880580%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:38,889] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:38] "[37mGET /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:38.894540%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:38,900] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:38] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:45.859400 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exportIntents [OPTIONS]
2020-04-23 09:34:45.859400%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.6
2020-04-23 09:34:45.860397%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5013729280, percent=60.6, used=7723982848, free=5013729280)
2020-04-23 09:34:45.860397%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:45.860397%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:34:45,863] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:45] "[37mOPTIONS /exportIntents?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:34:46.175801 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exportIntents [GET]
2020-04-23 09:34:46.175801%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.5
2020-04-23 09:34:46.175801%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5013893120, percent=60.6, used=7723819008, free=5013893120)
2020-04-23 09:34:46.175801%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:46.175801%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:46.187775%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:34:46.187775 current_import_export_operation =  1
2020-04-23 09:34:46.213708%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
the response object is{'IntentSlotParameter': [], 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}], 'agent_id': 48, 'endOfConversation': False, 'id': 398, 'inputContext': '', 'intentAPI': {'id': 327, 'isActive': False, 'params': '', 'url': ''}, 'intentApi_id': 327, 'language': 'en', 'name': 'Default welcome intent', 'outputContext': '', 'parentIntentId': None, 'trainingexample': [{'example_entitiy': [], 'id': 2226, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'just going to say hi'}, {'example_entitiy': [], 'id': 2227, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'heya'}, {'example_entitiy': [], 'id': 2228, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hello hi'}, {'example_entitiy': [], 'id': 2229, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'howdy'}, {'example_entitiy': [], 'id': 2230, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hey there'}, {'example_entitiy': [], 'id': 2231, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hi there'}, {'example_entitiy': [], 'id': 2232, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'greetings'}, {'example_entitiy': [], 'id': 2233, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hey'}, {'example_entitiy': [], 'id': 2234, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'long time no see'}, {'example_entitiy': [], 'id': 2235, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hello'}, {'example_entitiy': [], 'id': 2236, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': "lovely day isn't it"}, {'example_entitiy': [], 'id': 2237, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'I greet you'}, {'example_entitiy': [], 'id': 2238, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hello again'}, {'example_entitiy': [], 'id': 2239, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hi'}, {'example_entitiy': [], 'id': 2240, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'hello there'}, {'example_entitiy': [], 'id': 2241, 'intentid': 398, 'isTestingExample': None, 'language': 'en', 'txt': 'a good day'}]}
2020-04-23 09:34:46.278175%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
the response object is{'IntentSlotParameter': [{'entityid': 320, 'id': 674, 'intentid': 399, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc'}, {'entityid': 406, 'id': 675, 'intentid': 399, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'Hotels', 'prompts': [{'id': 331, 'intentSlotParameterId': 675, 'text': 'hotel name?'}], 'type': 'text', 'value': '$Hotels'}, {'entityid': 407, 'id': 676, 'intentid': 399, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_ar', 'prompts': [], 'type': 'text', 'value': '$Name_ar'}, {'entityid': 408, 'id': 677, 'intentid': 399, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_en', 'prompts': [], 'type': 'text', 'value': '$Name_en'}], 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a greet hotel in $System.loc with  $Name_ar and $Name_en  $Hotels ::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://0.0.0.0./testcardset', 'type': 'CardSet'}, {'Buttons': [{'payloadText': 'option A', 'title': 'option A'}, {'payloadText': 'option B', 'title': 'option B'}], '_order': 3, 'image': '', 'txt': 'Options', 'type': 'quick'}], 'agent_id': 48, 'endOfConversation': False, 'id': 399, 'inputContext': '', 'intentAPI': {'id': 328, 'isActive': True, 'params': '', 'url': 'http://testing.hci-soft.com/sample.php'}, 'intentApi_id': 328, 'language': 'en', 'name': 'Ask_hotel', 'outputContext': '', 'parentIntentId': None, 'trainingexample': [{'example_entitiy': [], 'id': 2242, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': 'ask hotel'}, {'example_entitiy': [], 'id': 2243, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': 'I need hotel'}, {'example_entitiy': [], 'id': 2244, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': 'hotel please'}, {'example_entitiy': [], 'id': 2245, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': 'hotel'}, {'example_entitiy': [], 'id': 2246, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': 'hotel guy'}, {'example_entitiy': [{'endPosition': 8, 'entityInstance': {'entityid': 406, 'id': 1207, 'language': 'en', 'txt': 'season'}, 'id': 1705, 'parameters': {'entityid': 406, 'id': 675, 'intentid': 399, 'language': 'en', 'name': 'Hotels', 'type': 'text', 'value': '$Hotels'}, 'startPosition': 3, 'trainingExampleid': 2266}], 'id': 2266, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': '4 season'}, {'example_entitiy': [{'endPosition': 9, 'entityInstance': {'entityid': 406, 'id': 1208, 'language': 'en', 'txt': 'rose'}, 'id': 1706, 'parameters': {'entityid': 406, 'id': 675, 'intentid': 399, 'language': 'en', 'name': 'Hotels', 'type': 'text', 'value': '$Hotels'}, 'startPosition': 6, 'trainingExampleid': 2267}], 'id': 2267, 'intentid': 399, 'isTestingExample': None, 'language': 'en', 'txt': 'dama rose'}]}
{'entityid': 320, 'id': 674, 'intentid': 399, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc', 'meta': 'System.loc'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc', 'meta': 'System.loc'}
{'entityid': 406, 'id': 675, 'intentid': 399, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'Hotels', 'prompts': [{'id': 331, 'intentSlotParameterId': 675, 'text': 'hotel name?'}], 'type': 'text', 'value': '$Hotels'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'Hotels', 'prompts': [{'id': 331, 'intentSlotParameterId': 675, 'text': 'hotel name?'}], 'type': 'text', 'value': '$Hotels', 'meta': 'Hotels'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'Hotels', 'prompts': [{'text': 'hotel name?'}], 'type': 'text', 'value': '$Hotels', 'meta': 'Hotels'}
{'entityid': 407, 'id': 676, 'intentid': 399, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_ar', 'prompts': [], 'type': 'text', 'value': '$Name_ar'}
[2020-04-23 09:34:46,322] ERROR in ExportIntents: 'NoneType' object has no attribute 'name'
2020-04-23 09:34:46.323193 current_import_export_operation =  0
[2020-04-23 09:34:46,324] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:34:46] "[31m[1mGET /exportIntents?agentId=48 HTTP/1.1[0m" 400 -
2020-04-23 09:36:24.570545 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 09:36:24.570545%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.5
2020-04-23 09:36:24.570545%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5150515200, percent=59.6, used=7587196928, free=5150515200)
2020-04-23 09:36:24.570545%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.570545%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,571] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.578526 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 09:36:24.578526%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:24.578526%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5150515200, percent=59.6, used=7587196928, free=5150515200)
2020-04-23 09:36:24.578526%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.578526%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,580] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.582516 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 09:36:24.583517%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:24.583517%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5150498816, percent=59.6, used=7587213312, free=5150498816)
2020-04-23 09:36:24.583517%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.583517%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,588] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.593505 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/400 [OPTIONS]
2020-04-23 09:36:24.593505%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:36:24.593505%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5150494720, percent=59.6, used=7587217408, free=5150494720)
2020-04-23 09:36:24.593505%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,595] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /getintent/400 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.597478 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 09:36:24.597478%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:24.597478%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5150756864, percent=59.6, used=7586955264, free=5150756864)
2020-04-23 09:36:24.598471%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.598471%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,599] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.605452 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 09:36:24.605452%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:36:24.605452%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5150744576, percent=59.6, used=7586967552, free=5150744576)
2020-04-23 09:36:24.605452%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,607] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.876887 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:36:24.876887%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.6
2020-04-23 09:36:24.876887%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152509952, percent=59.5, used=7585202176, free=5152509952)
2020-04-23 09:36:24.876887%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,877] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.886864 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 09:36:24.886864%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:24.886864%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152501760, percent=59.5, used=7585210368, free=5152501760)
2020-04-23 09:36:24.886864%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.886864%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.890850%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.894842 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 09:36:24.894842%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:24.894842%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152485376, percent=59.5, used=7585226752, free=5152485376)
2020-04-23 09:36:24.894842%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.894842%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.900826%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.910798 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 09:36:24.910798%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:36:24.910798%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152481280, percent=59.5, used=7585230848, free=5152481280)
2020-04-23 09:36:24.910798%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.910798%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,912] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.914786 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/400 [GET]
2020-04-23 09:36:24.914786%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:36:24.914786%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152481280, percent=59.5, used=7585230848, free=5152481280)
2020-04-23 09:36:24.914786%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,919] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:24.922765%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.928750 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 09:36:24.928750%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:36:24.928750%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152374784, percent=59.6, used=7585337344, free=5152374784)
2020-04-23 09:36:24.928750%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.928750%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.934733%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:24.938722%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:24,949] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
[2020-04-23 09:36:24,959] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
[2020-04-23 09:36:24,992] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:24] "[37mGET /getintent/400 HTTP/1.1[0m" 200 -
2020-04-23 09:36:25.182468 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 09:36:25.182468%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.9
2020-04-23 09:36:25.182468%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152641024, percent=59.5, used=7585071104, free=5152641024)
2020-04-23 09:36:25.182468%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:25.187423%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:25,190] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:25] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 09:36:25.222330 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:36:25.222330%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-23 09:36:25.222330%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5152645120, percent=59.5, used=7585067008, free=5152645120)
2020-04-23 09:36:25.223327%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:25.227316%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:25,232] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:25] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:33.831607 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:36:33.831607%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.9
2020-04-23 09:36:33.831607%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5132537856, percent=59.7, used=7605174272, free=5132537856)
2020-04-23 09:36:33.831607%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:33.832603%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:33,833] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:33] "[37mOPTIONS /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:34.138771 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:36:34.138771%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.6
2020-04-23 09:36:34.138771%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122064384, percent=59.8, used=7615647744, free=5122064384)
2020-04-23 09:36:34.138771%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.138771%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:34,139] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:34] "[37mOPTIONS /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:34.142723 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:36:34.142723%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:34.142723%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122052096, percent=59.8, used=7615660032, free=5122052096)
2020-04-23 09:36:34.142723%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.142723%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.147738%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.153727 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:36:34.153727%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:36:34.153727%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122052096, percent=59.8, used=7615660032, free=5122052096)
2020-04-23 09:36:34.153727%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:34,154] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:34] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
[2020-04-23 09:36:34,159] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:34] "[37mGET /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:34.389353 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:36:34.389353%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.4
2020-04-23 09:36:34.389353%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122248704, percent=59.8, used=7615463424, free=5122248704)
2020-04-23 09:36:34.389353%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.389353%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.391347%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:34,402] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:34] "[37mGET /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:34.448257 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:36:34.448257%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.8
2020-04-23 09:36:34.448257%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5122256896, percent=59.8, used=7615455232, free=5122256896)
2020-04-23 09:36:34.448257%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:34.451248%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:34,454] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:34] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:35.723511 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 09:36:35.723511%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.3
2020-04-23 09:36:35.723511%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5118607360, percent=59.8, used=7619104768, free=5118607360)
2020-04-23 09:36:35.723511%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:35.723511%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:35,725] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:35] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.031311 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 09:36:36.031311%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.0
2020-04-23 09:36:36.031311%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5108269056, percent=59.9, used=7629443072, free=5108269056)
2020-04-23 09:36:36.031311%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.031311%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.035302 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 09:36:36.035302%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:36.035302%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5108269056, percent=59.9, used=7629443072, free=5108269056)
2020-04-23 09:36:36.035302%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.035302%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,036] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.037295%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.043279 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/399 [OPTIONS]
2020-04-23 09:36:36.043279%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:36:36.043279%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5108264960, percent=59.9, used=7629447168, free=5108264960)
2020-04-23 09:36:36.043279%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,045] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /getintent/399 HTTP/1.1[0m" 200 -
[2020-04-23 09:36:36,046] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.048268 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 09:36:36.048268%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:36.048268%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5108252672, percent=59.9, used=7629459456, free=5108252672)
2020-04-23 09:36:36.048268%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.048268%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,050] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.053253 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 09:36:36.053253%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:36:36.053253%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5108178944, percent=59.9, used=7629533184, free=5108178944)
2020-04-23 09:36:36.053253%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,055] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.060234 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:36:36.060234%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:36.060234%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5108113408, percent=59.9, used=7629598720, free=5108113408)
2020-04-23 09:36:36.061234%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,062] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.350136 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 09:36:36.350136%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.6
2020-04-23 09:36:36.351125%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5110181888, percent=59.9, used=7627530240, free=5110181888)
2020-04-23 09:36:36.351125%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.351125%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.362102%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.367083 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/399 [GET]
2020-04-23 09:36:36.367083%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:36:36.367083%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5110181888, percent=59.9, used=7627530240, free=5110181888)
2020-04-23 09:36:36.367083%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.380049%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.384038 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 09:36:36.384038%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:36:36.384038%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5110169600, percent=59.9, used=7627542528, free=5110169600)
2020-04-23 09:36:36.384038%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.384038%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.388058 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 09:36:36.388058%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:36.388058%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5110169600, percent=59.9, used=7627542528, free=5110169600)
2020-04-23 09:36:36.388058%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,391] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.392015%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,400] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.402984 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:36:36.402984%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:36:36.402984%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5109538816, percent=59.9, used=7628173312, free=5109538816)
2020-04-23 09:36:36.402984%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.412960%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,425] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.427918%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,451] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-23 09:36:36,495] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /getintent/399 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.533877 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/320 [OPTIONS]
2020-04-23 09:36:36.533877%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.8
2020-04-23 09:36:36.533877%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5109026816, percent=59.9, used=7628685312, free=5109026816)
2020-04-23 09:36:36.533877%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,535] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /entity/320 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.810768 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/406 [OPTIONS]
2020-04-23 09:36:36.810768%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.3
2020-04-23 09:36:36.810768%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5103595520, percent=59.9, used=7634116608, free=5103595520)
2020-04-23 09:36:36.810768%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,811] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /entity/406 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.817408 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/407 [OPTIONS]
2020-04-23 09:36:36.817408%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:36.817408%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5103583232, percent=59.9, used=7634128896, free=5103583232)
2020-04-23 09:36:36.817408%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,818] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /entity/407 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.822361 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/408 [OPTIONS]
2020-04-23 09:36:36.822361%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:36:36.822361%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5103583232, percent=59.9, used=7634128896, free=5103583232)
2020-04-23 09:36:36.822361%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,823] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mOPTIONS /entity/408 HTTP/1.1[0m" 200 -
2020-04-23 09:36:36.828383 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/320 [GET]
2020-04-23 09:36:36.828383%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:36.828383%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5103583232, percent=59.9, used=7634128896, free=5103583232)
2020-04-23 09:36:36.829344%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:36.846326 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/406 [GET]
2020-04-23 09:36:36.846326%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:36:36.846326%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5103509504, percent=59.9, used=7634202624, free=5103509504)
2020-04-23 09:36:36.847329%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:36,854] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /entity/320 HTTP/1.1[0m" 200 -
[2020-04-23 09:36:36,864] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:36] "[37mGET /entity/406 HTTP/1.1[0m" 200 -
2020-04-23 09:36:37.119367 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/407 [GET]
2020-04-23 09:36:37.119367%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.7
2020-04-23 09:36:37.119367%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5104480256, percent=59.9, used=7633231872, free=5104480256)
2020-04-23 09:36:37.119367%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:37.129345 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/408 [GET]
2020-04-23 09:36:37.129345%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:37.130338%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5104472064, percent=59.9, used=7633240064, free=5104472064)
2020-04-23 09:36:37.130338%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:37,133] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:37] "[33mGET /entity/407 HTTP/1.1[0m" 404 -
[2020-04-23 09:36:37,152] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:37] "[37mGET /entity/408 HTTP/1.1[0m" 200 -
2020-04-23 09:36:50.026649 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:36:50.026649%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.9
2020-04-23 09:36:50.027645%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5121372160, percent=59.8, used=7616339968, free=5121372160)
2020-04-23 09:36:50.027645%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.027645%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:50,032] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:50] "[37mOPTIONS /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:50.035622 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:36:50.035622%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:36:50.036621%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5121351680, percent=59.8, used=7616360448, free=5121351680)
2020-04-23 09:36:50.036621%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.036621%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:50,043] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:50] "[37mOPTIONS /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:50.046593 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [OPTIONS]
2020-04-23 09:36:50.046593%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:36:50.046593%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5121368064, percent=59.8, used=7616344064, free=5121368064)
2020-04-23 09:36:50.046593%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:50,049] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:50] "[37mOPTIONS /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:50.260997 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:36:50.260997%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.1
2020-04-23 09:36:50.260997%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5121478656, percent=59.8, used=7616233472, free=5121478656)
2020-04-23 09:36:50.260997%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.260997%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.264987%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:50,274] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:50] "[37mGET /intentReport/1/15/en?agentId=48 HTTP/1.1[0m" 200 -
2020-04-23 09:36:50.337960 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:36:50.337960%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.6
2020-04-23 09:36:50.337960%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5121478656, percent=59.8, used=7616233472, free=5121478656)
2020-04-23 09:36:50.337960%%%%%%%%%%%%%%%%%%  Agent ID 48 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.337960%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.340945%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.350947 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/48 [GET]
2020-04-23 09:36:50.350947%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:36:50.350947%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5121478656, percent=59.8, used=7616233472, free=5121478656)
2020-04-23 09:36:50.350947%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:36:50.353911%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:36:50,357] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:50] "[37mGET /intentReport/1/100000000/en?agentId=48 HTTP/1.1[0m" 200 -
[2020-04-23 09:36:50,360] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:36:50] "[37mGET /agent/48 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.169475 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:37:09.169475%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.1
2020-04-23 09:37:09.169475%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141196800, percent=59.6, used=7596515328, free=5141196800)
2020-04-23 09:37:09.170474%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,171] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.240300 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:37:09.240300%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:6.2
2020-04-23 09:37:09.240300%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141217280, percent=59.6, used=7596494848, free=5141217280)
2020-04-23 09:37:09.240300%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.240300%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,242] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.250274 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:37:09.250274%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:37:09.251271%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141983232, percent=59.6, used=7595728896, free=5141983232)
2020-04-23 09:37:09.251271%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.251271%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,253] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.262272 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 09:37:09.262272%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:37:09.262272%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141450752, percent=59.6, used=7596261376, free=5141450752)
2020-04-23 09:37:09.262272%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,263] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.273243 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 09:37:09.273243%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:37:09.273243%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141442560, percent=59.6, used=7596269568, free=5141442560)
2020-04-23 09:37:09.273243%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,274] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.420929 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:37:09.420929%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.4
2020-04-23 09:37:09.420929%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141430272, percent=59.6, used=7596281856, free=5141430272)
2020-04-23 09:37:09.420929%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.423921%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,429] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.475781 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:37:09.475781%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-23 09:37:09.475781%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141422080, percent=59.6, used=7596290048, free=5141422080)
2020-04-23 09:37:09.475781%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.475781%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.479805%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,501] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.553369 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:37:09.553369%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.0
2020-04-23 09:37:09.553369%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141422080, percent=59.6, used=7596290048, free=5141422080)
2020-04-23 09:37:09.553369%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.553369%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.556360%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.559352 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 09:37:09.559352%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:37:09.559352%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141450752, percent=59.6, used=7596261376, free=5141450752)
2020-04-23 09:37:09.559352%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,560] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 09:37:09.571319 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 09:37:09.571319%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:37:09.571319%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5141385216, percent=59.6, used=7596326912, free=5141385216)
2020-04-23 09:37:09.571319%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:09.576307%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:09,583] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 09:37:09,591] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:09] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:37:12.064722 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exportIntents [OPTIONS]
2020-04-23 09:37:12.064722%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.8
2020-04-23 09:37:12.064722%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5127847936, percent=59.7, used=7609864192, free=5127847936)
2020-04-23 09:37:12.065720%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:12.065720%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:37:12,068] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:12] "[37mOPTIONS /exportIntents?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:37:12.382628 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exportIntents [GET]
2020-04-23 09:37:12.382628%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.1
2020-04-23 09:37:12.382628%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5127852032, percent=59.7, used=7609860096, free=5127852032)
2020-04-23 09:37:12.382628%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:12.382628%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:12.391607%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:37:12.391607 current_import_export_operation =  1
2020-04-23 09:37:12.413531%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
the response object is{'IntentSlotParameter': [{'entityid': 365, 'id': 588, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4'}, {'entityid': 365, 'id': 589, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5'}, {'entityid': 365, 'id': 587, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3'}, {'entityid': 365, 'id': 584, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates'}], 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': '$rr::', 'type': 'text'}], 'agent_id': 36, 'endOfConversation': True, 'id': 343, 'inputContext': '', 'intentAPI': {'id': 272, 'isActive': False, 'params': '', 'url': ''}, 'intentApi_id': 272, 'language': 'en', 'name': 'Food_request', 'outputContext': '', 'parentIntentId': None, 'trainingexample': [{'example_entitiy': [{'endPosition': 19, 'entityInstance': {'entityid': 365, 'id': 1077, 'language': 'en', 'txt': 'tacos'}, 'id': 1594, 'parameters': {'entityid': 365, 'id': 589, 'intentid': 343, 'language': 'en', 'name': 'Plates_5', 'type': 'text', 'value': '$Plates_5'}, 'startPosition': 15, 'trainingExampleid': 1800}, {'endPosition': 33, 'entityInstance': {'entityid': 365, 'id': 1079, 'language': 'en', 'txt': 'burrito'}, 'id': 1593, 'parameters': {'entityid': 365, 'id': 588, 'intentid': 343, 'language': 'en', 'name': 'Plates_4', 'type': 'text', 'value': '$Plates_4'}, 'startPosition': 27, 'trainingExampleid': 1800}], 'id': 1800, 'intentid': 343, 'isTestingExample': None, 'language': 'en', 'txt': "I'd like beef tacos and a burrito"}, {'example_entitiy': [{'endPosition': 24, 'entityInstance': {'entityid': 365, 'id': 1078, 'language': 'en', 'txt': 'mapo tofu'}, 'id': 1588, 'parameters': {'entityid': 365, 'id': 584, 'intentid': 343, 'language': 'en', 'name': 'Plates', 'type': 'text', 'value': '$Plates'}, 'startPosition': 16, 'trainingExampleid': 1799}], 'id': 1799, 'intentid': 343, 'isTestingExample': None, 'language': 'en', 'txt': 'How about some mapo tofu'}]}
{'entityid': 365, 'id': 588, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4', 'meta': 'Plates'}
{'entityid': 365, 'id': 589, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5', 'meta': 'Plates'}
{'entityid': 365, 'id': 587, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3', 'meta': 'Plates'}
{'entityid': 365, 'id': 584, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates', 'meta': 'Plates'}
2020-04-23 09:37:12.463618%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
the response object is{'IntentSlotParameter': [{'entityid': 320, 'id': 582, 'intentid': 338, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc'}, {'entityid': 401, 'id': 669, 'intentid': 338, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_ar', 'prompts': [], 'type': 'text', 'value': '$Name_ar'}, {'entityid': 402, 'id': 670, 'intentid': 338, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_en', 'prompts': [], 'type': 'text', 'value': '$Name_en'}], 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'it is $Name_ar::', 'type': 'text'}], 'agent_id': 36, 'endOfConversation': True, 'id': 338, 'inputContext': '', 'intentAPI': {'id': 267, 'isActive': True, 'params': '', 'url': 'http://testing.hci-soft.com/sample.php'}, 'intentApi_id': 267, 'language': 'en', 'name': 'Ask_intent', 'outputContext': '', 'parentIntentId': None, 'trainingexample': [{'example_entitiy': [{'endPosition': 8, 'entityInstance': {'entityid': 320, 'id': 1073, 'language': 'en', 'txt': 'Damascus'}, 'id': 1584, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 1, 'trainingExampleid': 1756}], 'id': 1756, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'Damascus'}, {'example_entitiy': [{'endPosition': 5, 'entityInstance': {'entityid': 320, 'id': 1074, 'language': 'en', 'txt': 'Daraa'}, 'id': 1583, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 1, 'trainingExampleid': 1755}], 'id': 1755, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'Daraa'}, {'example_entitiy': [{'endPosition': 14, 'entityInstance': {'entityid': 320, 'id': 1074, 'language': 'en', 'txt': 'Daraa'}, 'id': 1582, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 10, 'trainingExampleid': 1754}], 'id': 1754, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'where is Daraa ?'}, {'example_entitiy': [{'endPosition': 17, 'entityInstance': {'entityid': 320, 'id': 1073, 'language': 'en', 'txt': 'Damascus'}, 'id': 1581, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 10, 'trainingExampleid': 1753}], 'id': 1753, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'where is Damascus ?'}]}
{'entityid': 320, 'id': 582, 'intentid': 338, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc', 'meta': 'System.loc'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc', 'meta': 'System.loc'}
{'entityid': 401, 'id': 669, 'intentid': 338, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_ar', 'prompts': [], 'type': 'text', 'value': '$Name_ar'}
[2020-04-23 09:37:12,489] ERROR in ExportIntents: 'NoneType' object has no attribute 'name'
2020-04-23 09:37:12.489548 current_import_export_operation =  0
[2020-04-23 09:37:12,491] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:37:12] "[31m[1mGET /exportIntents?agentId=36 HTTP/1.1[0m" 400 -
[2020-04-23 09:39:28,434] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 09:39:55.488837 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exportIntents [OPTIONS]
2020-04-23 09:39:55.488837%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.0
2020-04-23 09:39:55.488837%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5437173760, percent=57.3, used=7300538368, free=5437173760)
2020-04-23 09:39:55.488837%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:39:55.488837%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:39:55,490] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:39:55] "[37mOPTIONS /exportIntents?agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 09:39:55,712] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 09:39:55.712244
2020-04-23 09:39:55.715261 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exportIntents [GET]
2020-04-23 09:39:55.715261%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.5
2020-04-23 09:39:55.715261%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5434724352, percent=57.3, used=7302987776, free=5434724352)
2020-04-23 09:39:55.715261%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:39:55.715261%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:39:55.735181%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:39:55.735181 current_import_export_operation =  1
2020-04-23 09:39:55.743187%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
the response object is{'IntentSlotParameter': [{'entityid': 365, 'id': 588, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4'}, {'entityid': 365, 'id': 589, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5'}, {'entityid': 365, 'id': 587, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3'}, {'entityid': 365, 'id': 584, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates'}], 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': '$rr::', 'type': 'text'}], 'agent_id': 36, 'endOfConversation': True, 'id': 343, 'inputContext': '', 'intentAPI': {'id': 272, 'isActive': False, 'params': '', 'url': ''}, 'intentApi_id': 272, 'language': 'en', 'name': 'Food_request', 'outputContext': '', 'parentIntentId': None, 'trainingexample': [{'example_entitiy': [{'endPosition': 19, 'entityInstance': {'entityid': 365, 'id': 1077, 'language': 'en', 'txt': 'tacos'}, 'id': 1594, 'parameters': {'entityid': 365, 'id': 589, 'intentid': 343, 'language': 'en', 'name': 'Plates_5', 'type': 'text', 'value': '$Plates_5'}, 'startPosition': 15, 'trainingExampleid': 1800}, {'endPosition': 33, 'entityInstance': {'entityid': 365, 'id': 1079, 'language': 'en', 'txt': 'burrito'}, 'id': 1593, 'parameters': {'entityid': 365, 'id': 588, 'intentid': 343, 'language': 'en', 'name': 'Plates_4', 'type': 'text', 'value': '$Plates_4'}, 'startPosition': 27, 'trainingExampleid': 1800}], 'id': 1800, 'intentid': 343, 'isTestingExample': None, 'language': 'en', 'txt': "I'd like beef tacos and a burrito"}, {'example_entitiy': [{'endPosition': 24, 'entityInstance': {'entityid': 365, 'id': 1078, 'language': 'en', 'txt': 'mapo tofu'}, 'id': 1588, 'parameters': {'entityid': 365, 'id': 584, 'intentid': 343, 'language': 'en', 'name': 'Plates', 'type': 'text', 'value': '$Plates'}, 'startPosition': 16, 'trainingExampleid': 1799}], 'id': 1799, 'intentid': 343, 'isTestingExample': None, 'language': 'en', 'txt': 'How about some mapo tofu'}]}
{'entityid': 365, 'id': 588, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_4', 'prompts': [], 'type': 'text', 'value': '$Plates_4', 'meta': 'Plates'}
{'entityid': 365, 'id': 589, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_5', 'prompts': [], 'type': 'text', 'value': '$Plates_5', 'meta': 'Plates'}
{'entityid': 365, 'id': 587, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates_3', 'prompts': [], 'type': 'text', 'value': '$Plates_3', 'meta': 'Plates'}
{'entityid': 365, 'id': 584, 'intentid': 343, 'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates', 'meta': 'Plates'}
{'isIntentApiParameter': False, 'isRequired': False, 'language': 'en', 'name': 'Plates', 'prompts': [], 'type': 'text', 'value': '$Plates', 'meta': 'Plates'}
2020-04-23 09:39:55.796021%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
the response object is{'IntentSlotParameter': [{'entityid': 320, 'id': 582, 'intentid': 338, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc'}, {'entityid': 401, 'id': 669, 'intentid': 338, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_ar', 'prompts': [], 'type': 'text', 'value': '$Name_ar'}, {'entityid': 402, 'id': 670, 'intentid': 338, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_en', 'prompts': [], 'type': 'text', 'value': '$Name_en'}], 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'it is $Name_ar::', 'type': 'text'}], 'agent_id': 36, 'endOfConversation': True, 'id': 338, 'inputContext': '', 'intentAPI': {'id': 267, 'isActive': True, 'params': '', 'url': 'http://testing.hci-soft.com/sample.php'}, 'intentApi_id': 267, 'language': 'en', 'name': 'Ask_intent', 'outputContext': '', 'parentIntentId': None, 'trainingexample': [{'example_entitiy': [{'endPosition': 8, 'entityInstance': {'entityid': 320, 'id': 1073, 'language': 'en', 'txt': 'Damascus'}, 'id': 1584, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 1, 'trainingExampleid': 1756}], 'id': 1756, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'Damascus'}, {'example_entitiy': [{'endPosition': 5, 'entityInstance': {'entityid': 320, 'id': 1074, 'language': 'en', 'txt': 'Daraa'}, 'id': 1583, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 1, 'trainingExampleid': 1755}], 'id': 1755, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'Daraa'}, {'example_entitiy': [{'endPosition': 14, 'entityInstance': {'entityid': 320, 'id': 1074, 'language': 'en', 'txt': 'Daraa'}, 'id': 1582, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 10, 'trainingExampleid': 1754}], 'id': 1754, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'where is Daraa ?'}, {'example_entitiy': [{'endPosition': 17, 'entityInstance': {'entityid': 320, 'id': 1073, 'language': 'en', 'txt': 'Damascus'}, 'id': 1581, 'parameters': {'entityid': 320, 'id': 582, 'intentid': 338, 'language': 'en', 'name': 'System.loc', 'type': 'text', 'value': '$System.loc'}, 'startPosition': 10, 'trainingExampleid': 1753}], 'id': 1753, 'intentid': 338, 'isTestingExample': None, 'language': 'en', 'txt': 'where is Damascus ?'}]}
{'entityid': 320, 'id': 582, 'intentid': 338, 'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc', 'meta': 'System.loc'}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'name': 'System.loc', 'prompts': [], 'type': 'text', 'value': '$System.loc', 'meta': 'System.loc'}
{'entityid': 401, 'id': 669, 'intentid': 338, 'isIntentApiParameter': True, 'isRequired': False, 'language': 'en', 'name': 'Name_ar', 'prompts': [], 'type': 'text', 'value': '$Name_ar'}
[2020-04-23 09:39:55,818] ERROR in ExportIntents: 'NoneType' object has no attribute 'name'
2020-04-23 09:39:55.818958 current_import_export_operation =  0
[2020-04-23 09:39:55,819] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:39:55] "[31m[1mGET /exportIntents?agentId=36 HTTP/1.1[0m" 400 -
2020-04-23 09:39:57.739181 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:39:57.739181%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.8
2020-04-23 09:39:57.739181%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5375160320, percent=57.8, used=7362551808, free=5375160320)
2020-04-23 09:39:57.739181%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:39:57.739181%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:39:57.742202%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2642 2642
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    385.2 MiB    385.2 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    385.2 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    385.2 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    385.2 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    385.2 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    385.2 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.6 MiB    419.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.6 MiB      0.0 MiB           entity = {"value": value,
    75    419.6 MiB      0.0 MiB                     "start": start,
    76    419.6 MiB      0.0 MiB                     "end": end,
    77    419.6 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.6 MiB      0.0 MiB                     "entity": name,
    79    419.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.6 MiB    419.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.6 MiB      0.0 MiB           text = message.text
    88    419.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.6 MiB      0.0 MiB                   low_key = key.lower()
    96    419.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.6 MiB      0.0 MiB                   if( singular_key is False):
   103    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.6 MiB      0.0 MiB               entities = old_entities
   114    419.6 MiB      0.0 MiB               words = text.split(' ')
   115    419.6 MiB      0.0 MiB               for w in words:
   116    419.6 MiB      0.0 MiB                   word =w
   117    419.6 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.6 MiB      0.0 MiB                   if (word_singular is False):
   120    419.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.6 MiB      0.0 MiB                       start = text.find(w)
   128    419.6 MiB      0.0 MiB                       end = start + len(w)
   129    419.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.6 MiB      0.0 MiB                   low_key = key.lower()
   139    419.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.6 MiB    419.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.6 MiB      0.0 MiB           entity = {"value": value,
    75    419.6 MiB      0.0 MiB                     "start": start,
    76    419.6 MiB      0.0 MiB                     "end": end,
    77    419.6 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.6 MiB      0.0 MiB                     "entity": name,
    79    419.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.6 MiB    419.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.6 MiB      0.0 MiB           text = message.text
    88    419.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.6 MiB      0.0 MiB                   low_key = key.lower()
    96    419.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.6 MiB      0.0 MiB                   if( singular_key is False):
   103    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.6 MiB      0.0 MiB               entities = old_entities
   114    419.6 MiB      0.0 MiB               words = text.split(' ')
   115    419.6 MiB      0.0 MiB               for w in words:
   116    419.6 MiB      0.0 MiB                   word =w
   117    419.6 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.6 MiB      0.0 MiB                   if (word_singular is False):
   120    419.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.6 MiB      0.0 MiB                       start = text.find(w)
   128    419.6 MiB      0.0 MiB                       end = start + len(w)
   129    419.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.6 MiB      0.0 MiB                   low_key = key.lower()
   139    419.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 10961 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587624007.6902475, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587624007.6902475, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 09:40:11,839] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:40:11] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 09:40:11,843] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2642, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9593486189842224, 'name': 'action_SetContextSlots'}, {'confidence': 0.9566529989242554, 'name': 'action_listen'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
5
0
Content-Type: multipart/mixed; boundary="===============0643188572265224128=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============0643188572265224128==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 32.4 percent

- RAM Usage : 60.0 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 5
--===============0643188572265224128==--

Email sent!
2020-04-23 09:43:54.366107 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 09:43:54.366107%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.2
2020-04-23 09:43:54.366107%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5038440448, percent=60.4, used=7699271680, free=5038440448)
2020-04-23 09:43:54.366107%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:43:54,369] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:43:54] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 09:43:54.613210 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 09:43:54.613210%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.3
2020-04-23 09:43:54.613210%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5040189440, percent=60.4, used=7697522688, free=5040189440)
2020-04-23 09:43:54.613210%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:43:54.619193%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:43:54,623] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:43:54] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 09:43:55.346127 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 09:43:55.346127%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.6
2020-04-23 09:43:55.346127%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5040451584, percent=60.4, used=7697260544, free=5040451584)
2020-04-23 09:43:55.346127%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:43:55.347124%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:43:55,349] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:43:55] "[37mOPTIONS /trainAgent?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:43:55.657629 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 09:43:55.657629%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.8
2020-04-23 09:43:55.657629%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5038682112, percent=60.4, used=7699030016, free=5038682112)
2020-04-23 09:43:55.657629%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:43:55.657629%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:43:55.664574%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:43:55,804] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:43:55] "[31m[1mPOST /trainAgent?agentId=36 HTTP/1.1[0m" 400 -
2020-04-23 09:44:15.738786 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:44:15.738786%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.4
2020-04-23 09:44:15.738786%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999532544, percent=60.8, used=7738179584, free=4999532544)
2020-04-23 09:44:15.738786%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:15.738786%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:15,742] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:15] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:15.748770 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:44:15.748770%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:44:15.748770%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999462912, percent=60.8, used=7738249216, free=4999462912)
2020-04-23 09:44:15.748770%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:15.748770%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:15,750] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:15] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:15.761726 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 09:44:15.761726%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:44:15.761726%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4999462912, percent=60.8, used=7738249216, free=4999462912)
2020-04-23 09:44:15.761726%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:15,762] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:15] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:15.991111 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:44:15.991111%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.3
2020-04-23 09:44:15.991111%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4998901760, percent=60.8, used=7738810368, free=4998901760)
2020-04-23 09:44:15.991111%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:15.991111%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:15.994102%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:16,020] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:16] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:16.051964 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:44:16.051964%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:44:16.051964%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4998832128, percent=60.8, used=7738880000, free=4998832128)
2020-04-23 09:44:16.051964%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:16.051964%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:16.054942%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:16.060923 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 09:44:16.060923%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:44:16.060923%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4998737920, percent=60.8, used=7738974208, free=4998737920)
2020-04-23 09:44:16.060923%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:16.074886%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:16,083] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:16] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 09:44:16,090] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:16] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:45.045418 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 09:44:45.045418%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:10.0
2020-04-23 09:44:45.045418%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5277151232, percent=58.6, used=7460560896, free=5277151232)
2020-04-23 09:44:45.045418%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:45,046] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:45] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:45.294126 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 09:44:45.294126%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-23 09:44:45.294126%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5280333824, percent=58.5, used=7457378304, free=5280333824)
2020-04-23 09:44:45.294126%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:45.297119%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:45,301] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:45] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:46.270157 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 09:44:46.270157%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.4
2020-04-23 09:44:46.270157%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5281566720, percent=58.5, used=7456145408, free=5281566720)
2020-04-23 09:44:46.271153%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:46.271153%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:46,276] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:46] "[37mOPTIONS /trainAgent?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 09:44:46.584421 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 09:44:46.584421%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.6
2020-04-23 09:44:46.584421%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5280493568, percent=58.5, used=7457218560, free=5280493568)
2020-04-23 09:44:46.584421%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:46.584421%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:46.587412%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:46,703] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:46] "[31m[1mPOST /trainAgent?agentId=36 HTTP/1.1[0m" 400 -
2020-04-23 09:44:53.207187 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:44:53.207187%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.0
2020-04-23 09:44:53.208194%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5287956480, percent=58.5, used=7449755648, free=5287956480)
2020-04-23 09:44:53.208194%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,211] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.519363 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:44:53.519363%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.5
2020-04-23 09:44:53.520387%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5285388288, percent=58.5, used=7452323840, free=5285388288)
2020-04-23 09:44:53.520387%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.523384%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,527] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.573333 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:44:53.573333%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.2
2020-04-23 09:44:53.573333%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5282676736, percent=58.5, used=7455035392, free=5282676736)
2020-04-23 09:44:53.573333%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.573333%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,574] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mOPTIONS /intentReport/1/15/en?agentId=37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.577350 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:44:53.577350%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:44:53.577350%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5282668544, percent=58.5, used=7455043584, free=5282668544)
2020-04-23 09:44:53.577350%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.577350%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,578] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mOPTIONS /intentReport/1/100000000/en?agentId=37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.587298 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 09:44:53.587298%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:44:53.587298%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5282930688, percent=58.5, used=7454781440, free=5282930688)
2020-04-23 09:44:53.587298%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,588] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.598299 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [OPTIONS]
2020-04-23 09:44:53.598299%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:44:53.598299%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5284065280, percent=58.5, used=7453646848, free=5284065280)
2020-04-23 09:44:53.598299%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,600] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mOPTIONS /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.772090 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:44:53.772090%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.8
2020-04-23 09:44:53.772090%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5284069376, percent=58.5, used=7453642752, free=5284069376)
2020-04-23 09:44:53.772090%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.772090%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.775055%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,788] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mGET /intentReport/1/15/en?agentId=37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.879074 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:44:53.879074%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.0
2020-04-23 09:44:53.879074%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5288415232, percent=58.5, used=7449296896, free=5288415232)
2020-04-23 09:44:53.879074%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.879074%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.882063%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.888048 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 09:44:53.888048%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:44:53.888048%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5288398848, percent=58.5, used=7449313280, free=5288398848)
2020-04-23 09:44:53.888048%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,889] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 09:44:53.895029 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [GET]
2020-04-23 09:44:53.895029%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:44:53.896029%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5288402944, percent=58.5, used=7449309184, free=5288402944)
2020-04-23 09:44:53.896029%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:53.903008%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:53,912] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mGET /intentReport/1/100000000/en?agentId=37 HTTP/1.1[0m" 200 -
[2020-04-23 09:44:53,912] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:53] "[37mGET /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:54.785157 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [OPTIONS]
2020-04-23 09:44:54.785157%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.9
2020-04-23 09:44:54.785157%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5283041280, percent=58.5, used=7454670848, free=5283041280)
2020-04-23 09:44:54.785157%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:54,786] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:54] "[37mOPTIONS /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:44:55.092356 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [GET]
2020-04-23 09:44:55.092356%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.5
2020-04-23 09:44:55.092356%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5279571968, percent=58.6, used=7458140160, free=5279571968)
2020-04-23 09:44:55.092356%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:55.102334 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [OPTIONS]
2020-04-23 09:44:55.102334%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:44:55.102334%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5279420416, percent=58.6, used=7458291712, free=5279420416)
2020-04-23 09:44:55.102334%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:55,104] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:55] "[37mOPTIONS /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:44:55.108313 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [OPTIONS]
2020-04-23 09:44:55.108313%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:44:55.108313%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5279350784, percent=58.6, used=7458361344, free=5279350784)
2020-04-23 09:44:55.108313%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:55,109] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:55] "[37mOPTIONS /agent/37 HTTP/1.1[0m" 200 -
[2020-04-23 09:44:55,110] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:55] "[37mGET /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 09:44:55.342414 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/searchConversationHistory [POST]
2020-04-23 09:44:55.342414%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.7
2020-04-23 09:44:55.342414%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5280903168, percent=58.5, used=7456808960, free=5280903168)
2020-04-23 09:44:55.342414%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:55.342414%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:55.344376%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:55,349] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:55] "[37mPOST /searchConversationHistory HTTP/1.1[0m" 200 -
2020-04-23 09:44:55.409602 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [GET]
2020-04-23 09:44:55.409602%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.7
2020-04-23 09:44:55.409602%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5280919552, percent=58.5, used=7456792576, free=5280919552)
2020-04-23 09:44:55.409602%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:55.411565%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:55,416] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:55] "[37mGET /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:56.239128 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [OPTIONS]
2020-04-23 09:44:56.239128%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.2
2020-04-23 09:44:56.239128%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5281099776, percent=58.5, used=7456612352, free=5281099776)
2020-04-23 09:44:56.239128%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:56,241] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:56] "[37mOPTIONS /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:56.547827 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [GET]
2020-04-23 09:44:56.547827%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.5
2020-04-23 09:44:56.548823%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5278818304, percent=58.6, used=7458893824, free=5278818304)
2020-04-23 09:44:56.548823%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:56.553839%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:56,557] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:56] "[37mGET /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:58.024085 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 09:44:58.024085%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.9
2020-04-23 09:44:58.024085%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5279080448, percent=58.6, used=7458631680, free=5279080448)
2020-04-23 09:44:58.025083%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:58.025083%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:58,029] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:58] "[37mOPTIONS /trainAgent?agentId=37 HTTP/1.1[0m" 200 -
2020-04-23 09:44:58.339595 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 09:44:58.339595%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.6
2020-04-23 09:44:58.339595%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5278691328, percent=58.6, used=7459020800, free=5278691328)
2020-04-23 09:44:58.339595%%%%%%%%%%%%%%%%%%  Agent ID 37 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:58.339595%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:44:58.343592%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:44:58,571] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:44:58] "[31m[1mPOST /trainAgent?agentId=37 HTTP/1.1[0m" 400 -
2020-04-23 09:45:46.059290 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [OPTIONS]
2020-04-23 09:45:46.059290%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-23 09:45:46.059290%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5239336960, percent=58.9, used=7498375168, free=5239336960)
2020-04-23 09:45:46.059290%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:46,061] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:46] "[37mOPTIONS /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:45:46.310618 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [GET]
2020-04-23 09:45:46.310618%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-23 09:45:46.310618%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5237821440, percent=58.9, used=7499890688, free=5237821440)
2020-04-23 09:45:46.310618%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:46.313609%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:46,317] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:46] "[37mGET /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:45:51.483778 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:45:51.483778%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.5
2020-04-23 09:45:51.483778%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5243121664, percent=58.8, used=7494590464, free=5243121664)
2020-04-23 09:45:51.483778%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:51,485] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:51] "[37mOPTIONS /agent HTTP/1.1[0m" 200 -
2020-04-23 09:45:51.790953 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [POST]
2020-04-23 09:45:51.790953%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.7
2020-04-23 09:45:51.790953%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5239738368, percent=58.9, used=7497973760, free=5239738368)
2020-04-23 09:45:51.790953%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:51.796937 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:45:51.796937%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:45:51.796937%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5239730176, percent=58.9, used=7497981952, free=5239730176)
2020-04-23 09:45:51.796937%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:51,797] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:51] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:45:52.042284 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:45:52.042284%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.5
2020-04-23 09:45:52.042284%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5239709696, percent=58.9, used=7498002432, free=5239709696)
2020-04-23 09:45:52.042284%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:52.045275%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:52,049] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:52] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:45:53.855430 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 09:45:53.855430%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:51.7
2020-04-23 09:45:53.855430%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5149900800, percent=59.6, used=7587811328, free=5149900800)
2020-04-23 09:45:53.855430%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:53.855430%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:53.859420%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:55.870040 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 09:45:55.870040%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.5
2020-04-23 09:45:55.870040%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5151842304, percent=59.6, used=7585869824, free=5151842304)
2020-04-23 09:45:55.870040%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:45:55.870040%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:55,908] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:55] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 09:45:57.916597 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:45:57.916597%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.2
2020-04-23 09:45:57.916597%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5155737600, percent=59.5, used=7581974528, free=5155737600)
2020-04-23 09:45:57.916597%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:57,938] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:57] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:45:59.947132 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:45:59.947132%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.5
2020-04-23 09:45:59.947132%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5158903808, percent=59.5, used=7578808320, free=5158903808)
2020-04-23 09:45:59.947132%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:45:59,967] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:45:59] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:01.974707 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:01.974707%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.4
2020-04-23 09:46:01.974707%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5144772608, percent=59.6, used=7592939520, free=5144772608)
2020-04-23 09:46:01.974707%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:02,000] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:01] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:04.011257 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:04.011257%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.2
2020-04-23 09:46:04.011257%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5144653824, percent=59.6, used=7593058304, free=5144653824)
2020-04-23 09:46:04.011257%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:04,028] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:04] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:06.036838 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:06.036838%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.3
2020-04-23 09:46:06.037835%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5167869952, percent=59.4, used=7569842176, free=5167869952)
2020-04-23 09:46:06.037835%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:06,053] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:06] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:08.073391 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:08.073391%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.4
2020-04-23 09:46:08.073391%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5174099968, percent=59.4, used=7563612160, free=5174099968)
2020-04-23 09:46:08.073391%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:08,092] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:08] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:10.100964 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:10.100964%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.8
2020-04-23 09:46:10.100964%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5161381888, percent=59.5, used=7576330240, free=5161381888)
2020-04-23 09:46:10.100964%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:10,125] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:10] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:12.142503 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:12.143500%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.4
2020-04-23 09:46:12.143500%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5157425152, percent=59.5, used=7580286976, free=5157425152)
2020-04-23 09:46:12.143500%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:12,164] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:12] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:14.184438 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:14.184438%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.8
2020-04-23 09:46:14.185442%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5173456896, percent=59.4, used=7564255232, free=5173456896)
2020-04-23 09:46:14.185442%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:14,222] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:14] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:16.240094 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:16.240094%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.5
2020-04-23 09:46:16.241079%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5177307136, percent=59.4, used=7560404992, free=5177307136)
2020-04-23 09:46:16.241079%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:16,287] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:16] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:18.298181 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:18.298181%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.7
2020-04-23 09:46:18.298181%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5194657792, percent=59.2, used=7543054336, free=5194657792)
2020-04-23 09:46:18.298181%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:18,316] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:18] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:20.326649 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:20.326649%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.8
2020-04-23 09:46:20.327643%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5194752000, percent=59.2, used=7542960128, free=5194752000)
2020-04-23 09:46:20.327643%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:20,363] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:20] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:22.379367 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:22.379367%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.5
2020-04-23 09:46:22.380379%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5250621440, percent=58.8, used=7487090688, free=5250621440)
2020-04-23 09:46:22.380379%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:22,434] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:22] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:24.450106 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:24.450106%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.4
2020-04-23 09:46:24.451106%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5256310784, percent=58.7, used=7481401344, free=5256310784)
2020-04-23 09:46:24.451106%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:24,500] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:24] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:26.512425 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:26.512425%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.5
2020-04-23 09:46:26.512425%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5249347584, percent=58.8, used=7488364544, free=5249347584)
2020-04-23 09:46:26.512425%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:26,563] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:26] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:46:28.576266 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:46:28.576266%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.2
2020-04-23 09:46:28.576266%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5241466880, percent=58.9, used=7496245248, free=5241466880)
2020-04-23 09:46:28.576266%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:28,606] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:28] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-23 09:46:28,614] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:28] "[37mPOST /addintent HTTP/1.1[0m" 200 -
[2020-04-23 09:46:28,619] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:28] "[37mPOST /agent HTTP/1.1[0m" 201 -
2020-04-23 09:46:28.933904 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:46:28.933904%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.4
2020-04-23 09:46:28.933904%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5221130240, percent=59.0, used=7516581888, free=5221130240)
2020-04-23 09:46:28.933904%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:28,934] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:28] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:46:29.186113 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:46:29.186113%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.9
2020-04-23 09:46:29.186113%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5221130240, percent=59.0, used=7516581888, free=5221130240)
2020-04-23 09:46:29.186113%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:46:29.190099%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:29,195] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:46:29.256932 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:46:29.256932%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.9
2020-04-23 09:46:29.256932%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5220802560, percent=59.0, used=7516909568, free=5220802560)
2020-04-23 09:46:29.256932%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:29,258] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mOPTIONS /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:46:29.565027 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:46:29.565027%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.5
2020-04-23 09:46:29.565027%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5192114176, percent=59.2, used=7545597952, free=5192114176)
2020-04-23 09:46:29.565027%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:46:29.572012%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:46:29.576032 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:46:29.577023%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:46:29.577023%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5193400320, percent=59.2, used=7544311808, free=5193400320)
2020-04-23 09:46:29.577023%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:29,577] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mOPTIONS /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:46:29.589957 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [OPTIONS]
2020-04-23 09:46:29.590954%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:46:29.590954%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5193433088, percent=59.2, used=7544279040, free=5193433088)
2020-04-23 09:46:29.590954%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:29,591] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mOPTIONS /agent/37 HTTP/1.1[0m" 200 -
[2020-04-23 09:46:29,591] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mGET /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:46:29.815647 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:46:29.815647%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.6
2020-04-23 09:46:29.815647%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5193986048, percent=59.2, used=7543726080, free=5193986048)
2020-04-23 09:46:29.815647%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:46:29.818640%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:29,825] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mGET /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:46:29.890421 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/37 [GET]
2020-04-23 09:46:29.890421%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:57.1
2020-04-23 09:46:29.890421%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5194084352, percent=59.2, used=7543627776, free=5194084352)
2020-04-23 09:46:29.890421%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:46:29.893416%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:46:29,898] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:46:29] "[37mGET /agent/37 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.118925 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/enable/agent/60 [OPTIONS]
2020-04-23 09:48:05.118925%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.1
2020-04-23 09:48:05.118925%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5267402752, percent=58.6, used=7470309376, free=5267402752)
2020-04-23 09:48:05.118925%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:05,120] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:05] "[37mOPTIONS /enable/agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.374116 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/enable/agent/60 [PUT]
2020-04-23 09:48:05.374116%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.6
2020-04-23 09:48:05.375164%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5267390464, percent=58.6, used=7470321664, free=5267390464)
2020-04-23 09:48:05.375164%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:05.390132%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:05,421] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:05] "[37mPUT /enable/agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.434041 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:48:05.434041%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:48:05.434041%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5267386368, percent=58.6, used=7470325760, free=5267386368)
2020-04-23 09:48:05.434041%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:05,436] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:05] "[37mOPTIONS /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.744452 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:48:05.744452%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.5
2020-04-23 09:48:05.744452%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5267714048, percent=58.6, used=7469998080, free=5267714048)
2020-04-23 09:48:05.744452%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:05,748] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:05] "[37mOPTIONS /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.751435 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:48:05.751435%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:48:05.751435%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5267714048, percent=58.6, used=7469998080, free=5267714048)
2020-04-23 09:48:05.752432%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:05.761408 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 09:48:05.761408%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 09:48:05.761408%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5267718144, percent=58.6, used=7469993984, free=5267718144)
2020-04-23 09:48:05.762442%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:05,765] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:05] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.766430%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:05,779] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:05] "[37mGET /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:48:05.995404 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:48:05.995404%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.7
2020-04-23 09:48:05.995404%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5268127744, percent=58.6, used=7469584384, free=5268127744)
2020-04-23 09:48:05.995404%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:06.001383%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:06,014] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:06] "[37mGET /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:48:06.065215 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 09:48:06.065215%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-23 09:48:06.065215%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5268312064, percent=58.6, used=7469400064, free=5268312064)
2020-04-23 09:48:06.065215%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:06.069201%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:06,079] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:06] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 09:48:10.312990 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:48:10.312990%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.5
2020-04-23 09:48:10.312990%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5273157632, percent=58.6, used=7464554496, free=5273157632)
2020-04-23 09:48:10.312990%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.312990%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:10,313] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:10] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:10.621170 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:48:10.621170%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.0
2020-04-23 09:48:10.621170%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5272535040, percent=58.6, used=7465177088, free=5272535040)
2020-04-23 09:48:10.622161%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.622161%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.625154 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:48:10.625154%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:48:10.626151%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5272514560, percent=58.6, used=7465197568, free=5272514560)
2020-04-23 09:48:10.626151%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.626151%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:10,627] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:10] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:10.628145%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:10,635] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:10] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:10.639117 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 09:48:10.639117%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:48:10.639117%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5272510464, percent=58.6, used=7465201664, free=5272510464)
2020-04-23 09:48:10.639117%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:10,641] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:10] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:10.872903 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:48:10.872903%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.8
2020-04-23 09:48:10.873898%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5273903104, percent=58.6, used=7463809024, free=5273903104)
2020-04-23 09:48:10.873898%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.873898%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.876890%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:10,882] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:10] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:10.936730 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 09:48:10.936730%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-23 09:48:10.936730%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5274034176, percent=58.6, used=7463677952, free=5274034176)
2020-04-23 09:48:10.936730%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:10.941718%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:10,944] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:10] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:12.411742 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 09:48:12.411742%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.6
2020-04-23 09:48:12.411742%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5329248256, percent=58.2, used=7408463872, free=5329248256)
2020-04-23 09:48:12.411742%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.412742%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:12,412] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:12.721008 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 09:48:12.721008%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.2
2020-04-23 09:48:12.721008%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5331423232, percent=58.1, used=7406288896, free=5331423232)
2020-04-23 09:48:12.721008%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.721008%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.724000 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 09:48:12.724000%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:48:12.724000%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5331423232, percent=58.1, used=7406288896, free=5331423232)
2020-04-23 09:48:12.724000%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.724000%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:12,725] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:12.726991%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.731013 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 09:48:12.731013%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:48:12.731013%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5331415040, percent=58.1, used=7406297088, free=5331415040)
2020-04-23 09:48:12.731013%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.731013%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:12,732] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 09:48:12,732] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:12.733975 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 09:48:12.733975%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:48:12.733975%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5331410944, percent=58.1, used=7406301184, free=5331410944)
2020-04-23 09:48:12.735968%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:12,738] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 09:48:12.742948 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 09:48:12.742948%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:48:12.742948%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5331406848, percent=58.1, used=7406305280, free=5331406848)
2020-04-23 09:48:12.742948%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:12,743] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:12.970807 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 09:48:12.970807%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.6
2020-04-23 09:48:12.970807%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5335306240, percent=58.1, used=7402405888, free=5335306240)
2020-04-23 09:48:12.970807%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.970807%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:12.973799%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:12,980] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:12] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:13.032643 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 09:48:13.032643%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 09:48:13.032643%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5335318528, percent=58.1, used=7402393600, free=5335318528)
2020-04-23 09:48:13.032643%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:13.032643%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:13.036636%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:13.039623 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 09:48:13.039623%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 09:48:13.040646%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5335318528, percent=58.1, used=7402393600, free=5335318528)
2020-04-23 09:48:13.040646%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:13,043] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:13] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:13.044610%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:13.047605 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 09:48:13.047605%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:48:13.047605%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5335314432, percent=58.1, used=7402397696, free=5335314432)
2020-04-23 09:48:13.047605%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:13,054] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:13] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 09:48:13.055584%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:13,060] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:13] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:25.779197 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 09:48:25.779197%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.5
2020-04-23 09:48:25.780192%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5377855488, percent=57.8, used=7359856640, free=5377855488)
2020-04-23 09:48:25.780192%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:25.780192%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:25,783] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:25] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:26.030335 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 09:48:26.030335%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.7
2020-04-23 09:48:26.031326%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5377961984, percent=57.8, used=7359750144, free=5377961984)
2020-04-23 09:48:26.031326%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:26.031326%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:26.037312%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:26,050] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:26] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:31.732167 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 09:48:31.732167%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.1
2020-04-23 09:48:31.732167%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5379108864, percent=57.8, used=7358603264, free=5379108864)
2020-04-23 09:48:31.732167%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:31.732167%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:31,734] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:31] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:32.042559 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 09:48:32.042559%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.8
2020-04-23 09:48:32.042559%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5379657728, percent=57.8, used=7358054400, free=5379657728)
2020-04-23 09:48:32.042559%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:32.042559%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:32.050550%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:32,065] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:32] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:33.618171 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance/check [OPTIONS]
2020-04-23 09:48:33.618171%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.7
2020-04-23 09:48:33.618171%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5383426048, percent=57.7, used=7354286080, free=5383426048)
2020-04-23 09:48:33.618171%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:33.618171%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:33,619] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:33] "[37mOPTIONS /entityinstance/check?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:33.926975 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance/check [POST]
2020-04-23 09:48:33.926975%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.3
2020-04-23 09:48:33.926975%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5383393280, percent=57.7, used=7354318848, free=5383393280)
2020-04-23 09:48:33.926975%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:33.926975%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:33.934957%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
------------------active_pipeline Spacy
sys_exists Daraa 1180 System.loc
sys_exists Daraa 1169 System.loc
sys_exists Daraa 1143 Loc
sys_exists Daraa 1140 Location
sys_exists Daraa 395 Location_daraa
sys_exists Daraa 1074 System.loc
[2020-04-23 09:48:33,971] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:33] "[37mPOST /entityinstance/check?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:37.264734 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance/check [OPTIONS]
2020-04-23 09:48:37.264734%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.4
2020-04-23 09:48:37.264734%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5388967936, percent=57.7, used=7348744192, free=5388967936)
2020-04-23 09:48:37.265731%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:37.265731%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:37,268] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:37] "[37mOPTIONS /entityinstance/check?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:37.576180 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance/check [POST]
2020-04-23 09:48:37.576180%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.2
2020-04-23 09:48:37.576180%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5390360576, percent=57.7, used=7347351552, free=5390360576)
2020-04-23 09:48:37.576180%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:37.576180%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:37.579171%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
------------------active_pipeline Spacy
sys_exists Damascus 1179 System.loc
sys_exists Damascus 1168 Loc
sys_exists Damascus 1154 Address
sys_exists Damascus 1142 Loc
sys_exists Damascus 1141 Location
sys_exists Damascus 396 Location_daraa
sys_exists Damascus 1073 System.loc
[2020-04-23 09:48:37,596] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:37] "[37mPOST /entityinstance/check?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:45.062570 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [OPTIONS]
2020-04-23 09:48:45.062570%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.6
2020-04-23 09:48:45.063532%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5385789440, percent=57.7, used=7351922688, free=5385789440)
2020-04-23 09:48:45.063532%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:45,066] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:45] "[37mOPTIONS /addintent HTTP/1.1[0m" 200 -
2020-04-23 09:48:45.376796 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 09:48:45.376796%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.9
2020-04-23 09:48:45.376796%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5366517760, percent=57.9, used=7371194368, free=5366517760)
2020-04-23 09:48:45.376796%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:45.376796%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:45.379667%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:47.390845 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 09:48:47.390845%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.9
2020-04-23 09:48:47.390845%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5367693312, percent=57.9, used=7370018816, free=5367693312)
2020-04-23 09:48:47.391842%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:47.391842%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:47,425] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:47] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 09:48:49.443013 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-23 09:48:49.443013%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.9
2020-04-23 09:48:49.443013%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5366276096, percent=57.9, used=7371436032, free=5366276096)
2020-04-23 09:48:49.444009%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
System.loc
[2020-04-23 09:48:49,496] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:49] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-23 09:48:51.506987 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:48:51.506987%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.9
2020-04-23 09:48:51.507983%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5345648640, percent=58.0, used=7392063488, free=5345648640)
2020-04-23 09:48:51.507983%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:51,539] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:51] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:48:53.557128 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-23 09:48:53.557128%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.2
2020-04-23 09:48:53.557128%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5334044672, percent=58.1, used=7403667456, free=5334044672)
2020-04-23 09:48:53.558124%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:53,588] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:53] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-23 09:48:55.602969 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 09:48:55.602969%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.0
2020-04-23 09:48:55.602969%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5329285120, percent=58.2, used=7408427008, free=5329285120)
2020-04-23 09:48:55.602969%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:55,640] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:55] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 09:48:57.678932 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-23 09:48:57.678932%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.1
2020-04-23 09:48:57.685914%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5345333248, percent=58.0, used=7392378880, free=5345333248)
2020-04-23 09:48:57.685914%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:57,717] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:57] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
[2020-04-23 09:48:57,723] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:57] "[37mPOST /addintent HTTP/1.1[0m" 200 -
2020-04-23 09:48:58.094820 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 09:48:58.094820%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:88.6
2020-04-23 09:48:58.094820%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5310709760, percent=58.3, used=7427002368, free=5310709760)
2020-04-23 09:48:58.094820%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.094820%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:58,095] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:58] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:58.109782 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 09:48:58.109782%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:48:58.109782%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5310742528, percent=58.3, used=7426969600, free=5310742528)
2020-04-23 09:48:58.109782%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.109782%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:58,111] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:58] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:58.125738 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 09:48:58.125738%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 09:48:58.125738%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5309747200, percent=58.3, used=7427964928, free=5309747200)
2020-04-23 09:48:58.125738%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:58,127] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:58] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:58.333913 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 09:48:58.333913%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:63.5
2020-04-23 09:48:58.334908%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5297586176, percent=58.4, used=7440125952, free=5297586176)
2020-04-23 09:48:58.334908%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.334908%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.339896%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:58,347] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:58] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:58.413699 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 09:48:58.413699%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:70.8
2020-04-23 09:48:58.414703%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5296271360, percent=58.4, used=7441440768, free=5296271360)
2020-04-23 09:48:58.415709%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.415709%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.420681%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 09:48:58.427662 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 09:48:58.427662%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 09:48:58.427662%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5296328704, percent=58.4, used=7441383424, free=5296328704)
2020-04-23 09:48:58.427662%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:58,432] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:58] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:48:58.433645%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:48:58,438] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:48:58] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:49:54.047453 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 09:49:54.047453%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.5
2020-04-23 09:49:54.048451%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5059563520, percent=60.3, used=7678148608, free=5059563520)
2020-04-23 09:49:54.048451%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:49:54,049] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:49:54] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:49:54.298554 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 09:49:54.298554%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.8
2020-04-23 09:49:54.298554%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5059756032, percent=60.3, used=7677956096, free=5059756032)
2020-04-23 09:49:54.298554%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:49:54.302543%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:49:54,306] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:49:54] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 09:49:59.100612 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 09:49:59.100612%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.4
2020-04-23 09:49:59.100612%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5070827520, percent=60.2, used=7666884608, free=5070827520)
2020-04-23 09:49:59.100612%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:49:59.101610%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:49:59,106] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:49:59] "[37mOPTIONS /trainAgent?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:49:59.421017 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 09:49:59.421017%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.6
2020-04-23 09:49:59.422048%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5070802944, percent=60.2, used=7666909184, free=5070802944)
2020-04-23 09:49:59.422048%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:49:59.422048%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:49:59.430983%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:49:59,643] ERROR in GenericChatbotController: opening the pipeline config for agent  60
keys ['model']
keys ['case_sensitive']
keys ['features']
keys ['case_sensitive']
keys ['max_history']
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en_sm"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "60/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'CARDINAL': ['r2', 'r1', '3', 'r2', 'r1'], 'LOC': ['2', 'Tea', 'Daraa', 'Damascus', 'Syria', 'Daraa', 'dodo', 'Damascus?', 'Syria', 'Damascus', 'Daraa'], 'LAW': ['t5', 't4', 't5', 't4'], 'DATE': ['Jan', 'may'], 'TIME': ['y7', 'y6', '7:00', '9 oclock', '6 oclock', 'oclock', 'y7', 'y6'], 'GPE': ['2', 'homs', '9'], 'ORG': ['2', '1', 'Google', 'HCI', 'IBM', 'HCI', 'Google'], 'FAC': ['AI'], 'PERSON': ['Mohammad', 'Sharaf3']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpotxy2v4v\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpotxy2v4v\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpotxy2v4v model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-23 09:50:16,747] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-23 09:50:16,906] INFO in spacy_utils: Trying to load spacy model with name 'en_sm'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43    503.1 MiB    503.1 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45    503.1 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31    503.1 MiB    503.1 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36    503.1 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
60/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47    504.5 MiB    504.5 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56    504.5 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57    504.5 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58    504.5 MiB      0.0 MiB           print(self.gazetteer_path )
    59    504.5 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60    504.5 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64    504.5 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65    504.5 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66    504.5 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179    504.5 MiB    504.5 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183    504.5 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184    504.5 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185    504.5 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187    504.5 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200423-095017.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200423-095017.tar.gz
training Status Code 200  ---------------------  60 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    487.8 MiB    487.8 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    487.8 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    487.8 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    487.8 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    487.8 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    487.8 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x000001EB1536C548>
[2020-04-23 09:50:20,065] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:50:20] "[37mPOST /trainAgent?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 09:50:36.651998 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-23 09:50:36.651998%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.3
2020-04-23 09:50:36.653002%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4969205760, percent=61.0, used=7768506368, free=4969205760)
2020-04-23 09:50:36.653002%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:50:36,654] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:50:36] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-23 09:50:36.903360 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:50:36.903360%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.1
2020-04-23 09:50:36.903360%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4969201664, percent=61.0, used=7768510464, free=4969201664)
2020-04-23 09:50:36.903360%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:50:36.903360%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:50:36.913339%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= null
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2643 2643
 2- default platform is not  Null 
map_key in loadedAgentsMap == True
text :  is it Daraa
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  [{'start': 6, 'end': 11, 'value': 'Daraa', 'entity': 'LOC', 'confidence': 0.8908896892406412, 'extractor': 'CRFEntityExtractor'}]
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
daraa
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    495.8 MiB    495.8 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    495.8 MiB      0.0 MiB           entity = {"value": value,
    75    495.8 MiB      0.0 MiB                     "start": start,
    76    495.8 MiB      0.0 MiB                     "end": end,
    77    495.8 MiB      0.0 MiB                     "confidence": 1.0,
    78    495.8 MiB      0.0 MiB                     "entity": name,
    79    495.8 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    495.8 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'start': 6, 'end': 11, 'value': 'Daraa', 'entity': 'LOC', 'confidence': 0.8908896892406412, 'extractor': 'CRFEntityExtractor'}, {'value': 'Daraa', 'start': 6, 'end': 11, 'confidence': 1.0, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    495.8 MiB    495.8 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    495.8 MiB      0.0 MiB           text = message.text
    88    495.8 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    495.8 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    495.8 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    495.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    495.8 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    495.8 MiB      0.0 MiB                   low_key = key.lower()
    96    495.8 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    495.8 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    495.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    495.8 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    495.8 MiB      0.0 MiB                   if( singular_key is False):
   103    495.8 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    495.8 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    495.8 MiB      0.0 MiB               old_entities = message.get("entities")
   109    495.8 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    495.8 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    495.8 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    495.8 MiB      0.0 MiB               entities = old_entities
   114    495.8 MiB      0.0 MiB               words = text.split(' ')
   115    495.8 MiB      0.0 MiB               for w in words:
   116    495.8 MiB      0.0 MiB                   word =w
   117    495.8 MiB      0.0 MiB                   word_lower =word.lower()
   118    495.8 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    495.8 MiB      0.0 MiB                   if (word_singular is False):
   120    495.8 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    495.8 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    495.8 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    495.8 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    495.8 MiB      0.0 MiB                       start = text.find(w)
   128    495.8 MiB      0.0 MiB                       end = start + len(w)
   129    495.8 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    495.8 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    495.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    495.8 MiB      0.0 MiB                   low_key = key.lower()
   139    495.8 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    495.8 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    495.8 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    495.8 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    495.8 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    495.8 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  is it Daraa
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  [{'start': 6, 'end': 11, 'value': 'Daraa', 'entity': 'LOC', 'confidence': 0.8908896892406412, 'extractor': 'CRFEntityExtractor'}]
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
daraa
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    496.0 MiB    496.0 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    496.0 MiB      0.0 MiB           entity = {"value": value,
    75    496.0 MiB      0.0 MiB                     "start": start,
    76    496.0 MiB      0.0 MiB                     "end": end,
    77    496.0 MiB      0.0 MiB                     "confidence": 1.0,
    78    496.0 MiB      0.0 MiB                     "entity": name,
    79    496.0 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    496.0 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'start': 6, 'end': 11, 'value': 'Daraa', 'entity': 'LOC', 'confidence': 0.8908896892406412, 'extractor': 'CRFEntityExtractor'}, {'value': 'Daraa', 'start': 6, 'end': 11, 'confidence': 1.0, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    496.0 MiB    496.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    496.0 MiB      0.0 MiB           text = message.text
    88    496.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    496.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    496.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    496.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    496.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    496.0 MiB      0.0 MiB                   low_key = key.lower()
    96    496.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    496.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    496.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    496.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    496.0 MiB      0.0 MiB                   if( singular_key is False):
   103    496.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    496.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    496.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    496.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    496.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    496.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    496.0 MiB      0.0 MiB               entities = old_entities
   114    496.0 MiB      0.0 MiB               words = text.split(' ')
   115    496.0 MiB      0.0 MiB               for w in words:
   116    496.0 MiB      0.0 MiB                   word =w
   117    496.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    496.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    496.0 MiB      0.0 MiB                   if (word_singular is False):
   120    496.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    496.0 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    496.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    496.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    496.0 MiB      0.0 MiB                       start = text.find(w)
   128    496.0 MiB      0.0 MiB                       end = start + len(w)
   129    496.0 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    496.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    496.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    496.0 MiB      0.0 MiB                   low_key = key.lower()
   139    496.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    496.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    496.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    496.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    496.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    496.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 4017 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'validate': True}, 'events': [{'event': 'slot', 'name': 'LOC', 'timestamp': 1587624637.0515172, 'value': 'Daraa'}, {'confidence': 0.9883970022201538, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624639.3645892}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587624639.3645892, 'value': 'Ask_intent$$0.797674617151211'}, {'event': 'user', 'input_channel': None, 'message_id': '366a8b356e8c497fb33ddc195aa7654c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 0.8908896892406412, 'end': 11, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Daraa'}, {'confidence': 1.0, 'end': 11, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Daraa'}], 'intent': {'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, {'confidence': 0.20232538284878826, 'name': 'Default welcome intent'}], 'text': 'is it Daraa'}, 'text': 'is it Daraa', 'timestamp': 1587624637.0515172}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587624636.982527}, {'event': 'session_started', 'timestamp': 1587624636.982527}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587624636.982527}, {'confidence': 0.9719210863113403, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.549525}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'hello, How can I assist you?', 'timestamp': 1587624643.545536}, {'confidence': 0.9694039821624756, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.545536}, {'event': 'form', 'name': None, 'timestamp': 1587624641.5036025}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587624641.5036025, 'value': None}, {'confidence': 0.9751605987548828, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624641.5036025}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587624641.5036025}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587624641.5036025, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::adaaae8b43', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'LOC': None, 'requested_slot': None}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'validate': True}, 'events': [{'event': 'slot', 'name': 'LOC', 'timestamp': 1587624637.0515172, 'value': 'Daraa'}, {'confidence': 0.9883970022201538, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624639.3645892}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587624639.3645892, 'value': 'Ask_intent$$0.797674617151211'}, {'event': 'user', 'input_channel': None, 'message_id': '366a8b356e8c497fb33ddc195aa7654c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 0.8908896892406412, 'end': 11, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Daraa'}, {'confidence': 1.0, 'end': 11, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Daraa'}], 'intent': {'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, {'confidence': 0.20232538284878826, 'name': 'Default welcome intent'}], 'text': 'is it Daraa'}, 'text': 'is it Daraa', 'timestamp': 1587624637.0515172}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587624636.982527}, {'event': 'session_started', 'timestamp': 1587624636.982527}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587624636.982527}, {'confidence': 0.9719210863113403, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.549525}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'hello, How can I assist you?', 'timestamp': 1587624643.545536}, {'confidence': 0.9694039821624756, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.545536}, {'event': 'form', 'name': None, 'timestamp': 1587624641.5036025}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587624641.5036025, 'value': None}, {'confidence': 0.9751605987548828, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624641.5036025}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587624641.5036025}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587624641.5036025, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::adaaae8b43', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'LOC': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Ask_intent$$0.797674617151211']
++++++++++++++++++++++++++++++++++++++++ Ask_intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Ask_intent
getFormatedEntity -------------------------  [{'start': 6, 'end': 11, 'value': 'Daraa', 'entity': 'LOC', 'confidence': 0.8908896892406412, 'extractor': 'CRFEntityExtractor'}, {'value': 'Daraa', 'start': 6, 'end': 11, 'confidence': 1.0, 'entity': 'System.loc', 'extractor': 'CustomGazetteerEntity'}]
{'start': 6, 'end': 11, 'value': 'Daraa', 'entity': 'LOC', 'confidence': 0.8908896892406412, 'extractor': 'CRFEntityExtractor'} ---------- {'value': 'Daraa', 'start': 6, 'end': 11, 'confidence': 1.0, 'entity': 'System.loc', 'extractor': 'CustomGazetteerEntity'}
spacyentity[entity] System.loc
updated_entities ---------------------------------------- [{'confidence': 0.8908896892406412, 'end': 11, 'start': 6, 'extractor': 'CRFEntityExtractor', 'entity': 'System.loc', 'value': 'Daraa'}]
[2020-04-23 09:50:43,669] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:50:43] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-23 09:50:57.933546 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-23 09:50:57.933546%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.3
2020-04-23 09:50:57.933546%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4855988224, percent=61.9, used=7881723904, free=4855988224)
2020-04-23 09:50:57.933546%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 09:50:57,934] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:50:57] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-23 09:50:58.187048 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 09:50:58.187048%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.1
2020-04-23 09:50:58.188076%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4856623104, percent=61.9, used=7881089024, free=4856623104)
2020-04-23 09:50:58.188076%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:50:58.188076%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 09:50:58.195056%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2643
map_key in loadedAgentsMap == True
text :  is it Damascus
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Damascus', 'start': 6, 'confidence': None, 'end': 14, 'extractor': 'SpacyEntityExtractor'}, {'start': 6, 'end': 14, 'value': 'Damascus', 'entity': 'LOC', 'confidence': 0.9074055777743237, 'extractor': 'CRFEntityExtractor'}]
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
damascu
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    495.9 MiB    495.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    495.9 MiB      0.0 MiB           entity = {"value": value,
    75    495.9 MiB      0.0 MiB                     "start": start,
    76    495.9 MiB      0.0 MiB                     "end": end,
    77    495.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    495.9 MiB      0.0 MiB                     "entity": name,
    79    495.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    495.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Damascus', 'start': 6, 'confidence': None, 'end': 14, 'extractor': 'SpacyEntityExtractor'}, {'start': 6, 'end': 14, 'value': 'Damascus', 'entity': 'LOC', 'confidence': 0.9074055777743237, 'extractor': 'CRFEntityExtractor'}, {'value': 'Damascus', 'start': 6, 'end': 14, 'confidence': 1.0, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    495.9 MiB    495.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    495.9 MiB      0.0 MiB           text = message.text
    88    495.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    495.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    495.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    495.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    495.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    495.9 MiB      0.0 MiB                   low_key = key.lower()
    96    495.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    495.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    495.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    495.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    495.9 MiB      0.0 MiB                   if( singular_key is False):
   103    495.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    495.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    495.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    495.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    495.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    495.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    495.9 MiB      0.0 MiB               entities = old_entities
   114    495.9 MiB      0.0 MiB               words = text.split(' ')
   115    495.9 MiB      0.0 MiB               for w in words:
   116    495.9 MiB      0.0 MiB                   word =w
   117    495.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    495.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    495.9 MiB      0.0 MiB                   if (word_singular is False):
   120    495.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    495.9 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    495.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    495.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    495.9 MiB      0.0 MiB                       start = text.find(w)
   128    495.9 MiB      0.0 MiB                       end = start + len(w)
   129    495.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    495.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    495.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    495.9 MiB      0.0 MiB                   low_key = key.lower()
   139    495.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    495.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    495.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    495.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    495.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    495.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  is it Damascus
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Damascus', 'start': 6, 'confidence': None, 'end': 14, 'extractor': 'SpacyEntityExtractor'}, {'start': 6, 'end': 14, 'value': 'Damascus', 'entity': 'LOC', 'confidence': 0.9074055777743237, 'extractor': 'CRFEntityExtractor'}]
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
damascu
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    495.9 MiB    495.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    495.9 MiB      0.0 MiB           entity = {"value": value,
    75    495.9 MiB      0.0 MiB                     "start": start,
    76    495.9 MiB      0.0 MiB                     "end": end,
    77    495.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    495.9 MiB      0.0 MiB                     "entity": name,
    79    495.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    495.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Damascus', 'start': 6, 'confidence': None, 'end': 14, 'extractor': 'SpacyEntityExtractor'}, {'start': 6, 'end': 14, 'value': 'Damascus', 'entity': 'LOC', 'confidence': 0.9074055777743237, 'extractor': 'CRFEntityExtractor'}, {'value': 'Damascus', 'start': 6, 'end': 14, 'confidence': 1.0, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    495.9 MiB    495.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    495.9 MiB      0.0 MiB           text = message.text
    88    495.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    495.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    495.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    495.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    495.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    495.9 MiB      0.0 MiB                   low_key = key.lower()
    96    495.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    495.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    495.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    495.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    495.9 MiB      0.0 MiB                   if( singular_key is False):
   103    495.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    495.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    495.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    495.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    495.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    495.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    495.9 MiB      0.0 MiB               entities = old_entities
   114    495.9 MiB      0.0 MiB               words = text.split(' ')
   115    495.9 MiB      0.0 MiB               for w in words:
   116    495.9 MiB      0.0 MiB                   word =w
   117    495.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    495.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    495.9 MiB      0.0 MiB                   if (word_singular is False):
   120    495.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    495.9 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    495.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    495.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    495.9 MiB      0.0 MiB                       start = text.find(w)
   128    495.9 MiB      0.0 MiB                       end = start + len(w)
   129    495.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    495.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    495.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    495.9 MiB      0.0 MiB                   low_key = key.lower()
   139    495.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    495.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    495.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    495.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    495.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    495.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 7438 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [{'confidence': None, 'end': 14, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 0.9074055777743237, 'end': 14, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 1.0, 'end': 14, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Damascus'}], 'intent': {'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, {'confidence': 0.20237608924221287, 'name': 'Default welcome intent'}], 'text': 'is it Damascus'}, 'validate': True}, 'events': [{'event': 'slot', 'name': 'LOC', 'timestamp': 1587624637.0515172, 'value': 'Daraa'}, {'confidence': 0.9883970022201538, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624639.3645892}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587624639.3645892, 'value': 'Ask_intent$$0.797674617151211'}, {'event': 'user', 'input_channel': None, 'message_id': '366a8b356e8c497fb33ddc195aa7654c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 0.8908896892406412, 'end': 11, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Daraa'}, {'confidence': 1.0, 'end': 11, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Daraa'}], 'intent': {'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, {'confidence': 0.20232538284878826, 'name': 'Default welcome intent'}], 'text': 'is it Daraa'}, 'text': 'is it Daraa', 'timestamp': 1587624637.0515172}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587624636.982527}, {'event': 'session_started', 'timestamp': 1587624636.982527}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587624636.982527}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1587624658.3017359}, {'event': 'slot', 'name': 'LOC', 'timestamp': 1587624658.2987413, 'value': 'Damascus'}, {'confidence': 0.9719210863113403, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.549525}, {'event': 'user', 'input_channel': None, 'message_id': '0dacfc20c7f4446f9d119cadb11aeccb', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 14, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 0.9074055777743237, 'end': 14, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 1.0, 'end': 14, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Damascus'}], 'intent': {'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, {'confidence': 0.20237608924221287, 'name': 'Default welcome intent'}], 'text': 'is it Damascus'}, 'text': 'is it Damascus', 'timestamp': 1587624658.2987413}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'hello, How can I assist you?', 'timestamp': 1587624643.545536}, {'confidence': 0.9694039821624756, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.545536}, {'event': 'form', 'name': None, 'timestamp': 1587624641.5036025}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587624641.5036025, 'value': None}, {'confidence': 0.9751605987548828, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624641.5036025}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587624641.5036025}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587624641.5036025, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 14, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 0.9074055777743237, 'end': 14, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 1.0, 'end': 14, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Damascus'}], 'intent': {'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, {'confidence': 0.20237608924221287, 'name': 'Default welcome intent'}], 'text': 'is it Damascus'}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::adaaae8b43', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'LOC': 'Damascus', 'requested_slot': None}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [{'confidence': None, 'end': 14, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 0.9074055777743237, 'end': 14, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 1.0, 'end': 14, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Damascus'}], 'intent': {'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, {'confidence': 0.20237608924221287, 'name': 'Default welcome intent'}], 'text': 'is it Damascus'}, 'validate': True}, 'events': [{'event': 'slot', 'name': 'LOC', 'timestamp': 1587624637.0515172, 'value': 'Daraa'}, {'confidence': 0.9883970022201538, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624639.3645892}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587624639.3645892, 'value': 'Ask_intent$$0.797674617151211'}, {'event': 'user', 'input_channel': None, 'message_id': '366a8b356e8c497fb33ddc195aa7654c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 0.8908896892406412, 'end': 11, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Daraa'}, {'confidence': 1.0, 'end': 11, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Daraa'}], 'intent': {'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976746171512118, 'name': 'Ask_intent'}, {'confidence': 0.20232538284878826, 'name': 'Default welcome intent'}], 'text': 'is it Daraa'}, 'text': 'is it Daraa', 'timestamp': 1587624637.0515172}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587624636.982527}, {'event': 'session_started', 'timestamp': 1587624636.982527}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587624636.982527}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1587624658.3017359}, {'event': 'slot', 'name': 'LOC', 'timestamp': 1587624658.2987413, 'value': 'Damascus'}, {'confidence': 0.9719210863113403, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.549525}, {'event': 'user', 'input_channel': None, 'message_id': '0dacfc20c7f4446f9d119cadb11aeccb', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 14, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 0.9074055777743237, 'end': 14, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 1.0, 'end': 14, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Damascus'}], 'intent': {'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, {'confidence': 0.20237608924221287, 'name': 'Default welcome intent'}], 'text': 'is it Damascus'}, 'text': 'is it Damascus', 'timestamp': 1587624658.2987413}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'hello, How can I assist you?', 'timestamp': 1587624643.545536}, {'confidence': 0.9694039821624756, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624643.545536}, {'event': 'form', 'name': None, 'timestamp': 1587624641.5036025}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587624641.5036025, 'value': None}, {'confidence': 0.9751605987548828, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624641.5036025}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587624641.5036025}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587624641.5036025, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 14, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 0.9074055777743237, 'end': 14, 'entity': 'LOC', 'extractor': 'CRFEntityExtractor', 'start': 6, 'value': 'Damascus'}, {'confidence': 1.0, 'end': 14, 'entity': 'LOC', 'extractor': 'CustomGazetteerEntity', 'start': 6, 'value': 'Damascus'}], 'intent': {'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7976239107577872, 'name': 'Ask_intent'}, {'confidence': 0.20237608924221287, 'name': 'Default welcome intent'}], 'text': 'is it Damascus'}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::adaaae8b43', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'LOC': 'Damascus', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Ask_intent$$0.797674617151211']
++++++++++++++++++++++++++++++++++++++++ Ask_intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Ask_intent
[2020-04-23 09:50:58,387] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 09:50:58] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
[2020-04-23 10:01:12,235] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 10:01:47.045083 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:01:47.045083%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.5
2020-04-23 10:01:47.045083%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4926140416, percent=61.3, used=7811571712, free=4926140416)
2020-04-23 10:01:47.045083%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:47,047] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:47] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:01:47.048071 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:01:47.048071%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:01:47.048071%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4926009344, percent=61.3, used=7811702784, free=4926009344)
2020-04-23 10:01:47.049070%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:47,051] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:47] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:01:47.246541 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:01:47.246541%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.4
2020-04-23 10:01:47.246541%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4925902848, percent=61.3, used=7811809280, free=4925902848)
2020-04-23 10:01:47.246541%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:47.322337%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:47,334] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 10:01:47.334307
[2020-04-23 10:01:47,338] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:47] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:01:47.369213 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:01:47.369213%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.8
2020-04-23 10:01:47.369213%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4926173184, percent=61.3, used=7811538944, free=4926173184)
2020-04-23 10:01:47.369213%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:47.372205%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:47,377] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:47] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:01:48.334676 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:01:48.334676%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.3
2020-04-23 10:01:48.334676%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4927143936, percent=61.3, used=7810568192, free=4927143936)
2020-04-23 10:01:48.335673%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:48,336] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:48] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:01:48.645566 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/GenerateChatToken [OPTIONS]
2020-04-23 10:01:48.645566%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.8
2020-04-23 10:01:48.645566%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4925788160, percent=61.3, used=7811923968, free=4925788160)
2020-04-23 10:01:48.645566%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:48,647] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:48] "[37mOPTIONS /GenerateChatToken HTTP/1.1[0m" 200 -
2020-04-23 10:01:48.649557 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [PUT]
2020-04-23 10:01:48.649557%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 10:01:48.649557%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4925788160, percent=61.3, used=7811923968, free=4925788160)
2020-04-23 10:01:48.649557%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:48.652548%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:48.896288 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/GenerateChatToken [POST]
2020-04-23 10:01:48.896288%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.3
2020-04-23 10:01:48.896288%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4925788160, percent=61.3, used=7811923968, free=4925788160)
2020-04-23 10:01:48.896288%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:48.896288%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:48.902270%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:48,906] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:48] "[37mPOST /GenerateChatToken HTTP/1.1[0m" 200 -
2020-04-23 10:01:49.373919 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 10:01:49.373919%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.0
2020-04-23 10:01:49.373919%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4931104768, percent=61.3, used=7806607360, free=4931104768)
2020-04-23 10:01:49.373919%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:49.373919%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:49.377909%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2644 2644
 2- default platform is not  Null 
2020-04-23 10:01:50.665338 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/api/agent/60 [PUT]
2020-04-23 10:01:50.665338%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.3
2020-04-23 10:01:50.665338%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4869246976, percent=61.8, used=7868465152, free=4869246976)
2020-04-23 10:01:50.665338%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:50,715] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:50] "[37mPUT /api/agent/60 HTTP/1.1[0m" 200 -
11111111111111 <Response [200]>
2020-04-23 10:01:52.842803 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 10:01:52.842803%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.2
2020-04-23 10:01:52.842803%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4800524288, percent=62.3, used=7937187840, free=4800524288)
2020-04-23 10:01:52.842803%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:52.842803%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:52.869765%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    386.0 MiB    386.0 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    386.0 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    386.0 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    386.0 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    386.0 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    386.0 MiB      0.0 MiB                   return pickle.load(f)


2020-04-23 10:01:54.896105 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 10:01:54.896105%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.0
2020-04-23 10:01:54.896105%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4734926848, percent=62.8, used=8002785280, free=4734926848)
2020-04-23 10:01:54.896105%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:01:54.896105%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:54,961] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:54] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 10:01:57.049757 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:01:57.049757%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:65.1
2020-04-23 10:01:57.049757%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4713918464, percent=63.0, used=8023793664, free=4713918464)
2020-04-23 10:01:57.049757%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:57,106] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:57] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:01:59.178314 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:01:59.179336%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.7
2020-04-23 10:01:59.179336%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4725448704, percent=62.9, used=8012263424, free=4725448704)
2020-04-23 10:01:59.179336%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:01:59,339] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:01:59] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    420.9 MiB    420.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    420.9 MiB      0.0 MiB           entity = {"value": value,
    75    420.9 MiB      0.0 MiB                     "start": start,
    76    420.9 MiB      0.0 MiB                     "end": end,
    77    420.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    420.9 MiB      0.0 MiB                     "entity": name,
    79    420.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    420.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    420.9 MiB    420.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    420.9 MiB      0.0 MiB           text = message.text
    88    420.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    420.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    420.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    420.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    420.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    420.9 MiB      0.0 MiB                   low_key = key.lower()
    96    420.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    420.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    420.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    420.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    420.9 MiB      0.0 MiB                   if( singular_key is False):
   103    420.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    420.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    420.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    420.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    420.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    420.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    420.9 MiB      0.0 MiB               entities = old_entities
   114    420.9 MiB      0.0 MiB               words = text.split(' ')
   115    420.9 MiB      0.0 MiB               for w in words:
   116    420.9 MiB      0.0 MiB                   word =w
   117    420.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    420.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    420.9 MiB      0.0 MiB                   if (word_singular is False):
   120    420.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    420.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    420.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    420.9 MiB      0.0 MiB                       start = text.find(w)
   128    420.9 MiB      0.0 MiB                       end = start + len(w)
   129    420.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    420.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    420.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    420.9 MiB      0.0 MiB                   low_key = key.lower()
   139    420.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    420.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    420.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    420.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    420.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    420.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


2020-04-23 10:02:01.349691 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:01.349691%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.7
2020-04-23 10:02:01.349691%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4746379264, percent=62.7, used=7991332864, free=4746379264)
2020-04-23 10:02:01.349691%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:01,370] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:01] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:03.382479 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:03.382479%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 10:02:03.383475%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4945752064, percent=61.2, used=7791960064, free=4945752064)
2020-04-23 10:02:03.383475%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:03,430] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:03] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:05.443995 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:05.443995%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.8
2020-04-23 10:02:05.443995%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4945838080, percent=61.2, used=7791874048, free=4945838080)
2020-04-23 10:02:05.443995%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:05,489] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:05] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:07.506776 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:07.506776%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.1
2020-04-23 10:02:07.506776%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4962594816, percent=61.0, used=7775117312, free=4962594816)
2020-04-23 10:02:07.506776%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:07,524] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:07] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:09.534085 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:09.534085%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.7
2020-04-23 10:02:09.534085%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4893224960, percent=61.6, used=7844487168, free=4893224960)
2020-04-23 10:02:09.534085%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:09,565] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:09] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    420.9 MiB    420.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    420.9 MiB      0.0 MiB           entity = {"value": value,
    75    420.9 MiB      0.0 MiB                     "start": start,
    76    420.9 MiB      0.0 MiB                     "end": end,
    77    420.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    420.9 MiB      0.0 MiB                     "entity": name,
    79    420.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    420.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    420.9 MiB    420.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    420.9 MiB      0.0 MiB           text = message.text
    88    420.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    420.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    420.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    420.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    420.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    420.9 MiB      0.0 MiB                   low_key = key.lower()
    96    420.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    420.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    420.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    420.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    420.9 MiB      0.0 MiB                   if( singular_key is False):
   103    420.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    420.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    420.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    420.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    420.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    420.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    420.9 MiB      0.0 MiB               entities = old_entities
   114    420.9 MiB      0.0 MiB               words = text.split(' ')
   115    420.9 MiB      0.0 MiB               for w in words:
   116    420.9 MiB      0.0 MiB                   word =w
   117    420.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    420.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    420.9 MiB      0.0 MiB                   if (word_singular is False):
   120    420.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    420.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    420.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    420.9 MiB      0.0 MiB                       start = text.find(w)
   128    420.9 MiB      0.0 MiB                       end = start + len(w)
   129    420.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    420.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    420.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    420.9 MiB      0.0 MiB                   low_key = key.lower()
   139    420.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    420.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    420.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    420.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    420.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    420.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 12778 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587625320.364976, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587625320.364976, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 10:02:10,647] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:10] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 10:02:10,655] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2644, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9743969440460205, 'name': 'hci_form'}, {'confidence': 0.9798845052719116, 'name': 'action_setIntent_id'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
7
1
Content-Type: multipart/mixed; boundary="===============4777671113164464411=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============4777671113164464411==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 75.7 percent

- RAM Usage : 62.2 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 7
--===============4777671113164464411==--

2020-04-23 10:02:11.576618 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:11.576618%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.4
2020-04-23 10:02:11.576618%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4777357312, percent=62.5, used=7960354816, free=4777357312)
2020-04-23 10:02:11.576618%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:11,601] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:11] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:13.268092 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:02:13.268092%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.3
2020-04-23 10:02:13.268092%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4744007680, percent=62.8, used=7993704448, free=4744007680)
2020-04-23 10:02:13.268092%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,269] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:02:13.278066 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 10:02:13.278066%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 10:02:13.278066%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4743901184, percent=62.8, used=7993810944, free=4743901184)
2020-04-23 10:02:13.279064%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,281] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:02:13.302003 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:02:13.302003%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 10:02:13.302999%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4744454144, percent=62.8, used=7993257984, free=4744454144)
2020-04-23 10:02:13.302999%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,303] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:02:13.521415 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:02:13.521415%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:84.7
2020-04-23 10:02:13.521415%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4743823360, percent=62.8, used=7993888768, free=4743823360)
2020-04-23 10:02:13.521415%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:02:13.530392%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,537] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:02:13.617159 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 10:02:13.617159%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:02:13.618157%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4748812288, percent=62.7, used=7988899840, free=4748812288)
2020-04-23 10:02:13.618157%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:02:13.623142%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,634] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:02:13.687969 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:02:13.687969%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:02:13.687969%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4751187968, percent=62.7, used=7986524160, free=4751187968)
2020-04-23 10:02:13.687969%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:02:13.695948%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,700] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:02:13.728861 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:13.728861%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:02:13.729858%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4757454848, percent=62.7, used=7980257280, free=4757454848)
2020-04-23 10:02:13.729858%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:13,764] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:13] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:15.734573 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/GenerateChatToken [OPTIONS]
2020-04-23 10:02:15.734573%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.8
2020-04-23 10:02:15.734573%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4793524224, percent=62.4, used=7944187904, free=4793524224)
2020-04-23 10:02:15.734573%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:15,736] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:15] "[37mOPTIONS /GenerateChatToken HTTP/1.1[0m" 200 -
2020-04-23 10:02:15.778454 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:15.778454%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.3
2020-04-23 10:02:15.779450%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4794601472, percent=62.4, used=7943110656, free=4794601472)
2020-04-23 10:02:15.779450%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:15,800] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:15] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:16.042835 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/GenerateChatToken [POST]
2020-04-23 10:02:16.042835%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:5.8
2020-04-23 10:02:16.042835%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4796760064, percent=62.3, used=7940952064, free=4796760064)
2020-04-23 10:02:16.042835%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:02:16.042835%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:02:16.045825%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:16,049] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:16] "[37mPOST /GenerateChatToken HTTP/1.1[0m" 200 -
Email sent!
2020-04-23 10:02:17.809620 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:17.809620%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.9
2020-04-23 10:02:17.809620%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4779606016, percent=62.5, used=7958106112, free=4779606016)
2020-04-23 10:02:17.809620%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:17,829] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:17] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:19.845172 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:19.845172%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:53.2
2020-04-23 10:02:19.845172%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4751458304, percent=62.7, used=7986253824, free=4751458304)
2020-04-23 10:02:19.845172%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:19,875] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:19] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:20.393703 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getAgentByToken [OPTIONS]
2020-04-23 10:02:20.393703%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:69.0
2020-04-23 10:02:20.393703%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4741718016, percent=62.8, used=7995994112, free=4741718016)
2020-04-23 10:02:20.393703%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:20,395] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:20] "[37mOPTIONS /getAgentByToken HTTP/1.1[0m" 200 -
2020-04-23 10:02:20.700882 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getAgentByToken [POST]
2020-04-23 10:02:20.700882%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-23 10:02:20.700882%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4714921984, percent=63.0, used=8022790144, free=4714921984)
2020-04-23 10:02:20.700882%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:20,707] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:20] "[37mPOST /getAgentByToken HTTP/1.1[0m" 200 -
2020-04-23 10:02:21.888704 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:21.888704%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:72.5
2020-04-23 10:02:21.888704%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4672487424, percent=63.3, used=8065224704, free=4672487424)
2020-04-23 10:02:21.888704%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:21,915] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:21] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:23.448531 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getAgentByToken [POST]
2020-04-23 10:02:23.448531%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:83.7
2020-04-23 10:02:23.448531%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4671381504, percent=63.3, used=8066330624, free=4671381504)
2020-04-23 10:02:23.448531%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:23,458] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:23] "[37mPOST /getAgentByToken HTTP/1.1[0m" 200 -
2020-04-23 10:02:23.754714 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 10:02:23.754714%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:67.1
2020-04-23 10:02:23.754714%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4673118208, percent=63.3, used=8064593920, free=4673118208)
2020-04-23 10:02:23.754714%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:23,756] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:23] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 10:02:23.932236 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:23.932236%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:54.2
2020-04-23 10:02:23.932236%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4673630208, percent=63.3, used=8064081920, free=4673630208)
2020-04-23 10:02:23.932236%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:23,951] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:23] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:24.060893 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 10:02:24.060893%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.8
2020-04-23 10:02:24.060893%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4673667072, percent=63.3, used=8064045056, free=4673667072)
2020-04-23 10:02:24.061889%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:24,062] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:24] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 10:02:25.962803 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:25.962803%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.2
2020-04-23 10:02:25.963800%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4640047104, percent=63.6, used=8097665024, free=4640047104)
2020-04-23 10:02:25.963800%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:25,995] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:25] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 10:02:28.012416 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 10:02:28.012416%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.1
2020-04-23 10:02:28.012416%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4485840896, percent=64.8, used=8251871232, free=4485840896)
2020-04-23 10:02:28.012416%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:28,031] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:28] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-23 10:02:28,035] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:28] "[37mPOST /addintent HTTP/1.1[0m" 200 -
[2020-04-23 10:02:28,037] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:28] "[37mPUT /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:02:47.338718 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [OPTIONS]
2020-04-23 10:02:47.338718%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.9
2020-04-23 10:02:47.338718%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4538413056, percent=64.4, used=8199299072, free=4538413056)
2020-04-23 10:02:47.338718%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:02:47,340] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:02:47] "[37mOPTIONS /ExternalChat HTTP/1.1[0m" 200 -
2020-04-23 10:02:47.592771 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [POST]
2020-04-23 10:02:47.592771%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.7
2020-04-23 10:02:47.592771%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4538949632, percent=64.4, used=8198762496, free=4538949632)
2020-04-23 10:02:47.592771%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    525.6 MiB    525.6 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    525.6 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    525.6 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    525.6 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    525.6 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    525.6 MiB      0.0 MiB                   return pickle.load(f)


text :  is it Dara
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
dara
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    536.2 MiB    536.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    536.2 MiB      0.0 MiB           text = message.text
    88    536.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    536.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    536.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    536.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    536.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    536.2 MiB      0.0 MiB                   low_key = key.lower()
    96    536.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    536.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    536.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    536.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    536.2 MiB      0.0 MiB                   if( singular_key is False):
   103    536.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    536.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    536.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109    536.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    536.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    536.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    536.2 MiB      0.0 MiB               entities = old_entities
   114    536.2 MiB      0.0 MiB               words = text.split(' ')
   115    536.2 MiB      0.0 MiB               for w in words:
   116    536.2 MiB      0.0 MiB                   word =w
   117    536.2 MiB      0.0 MiB                   word_lower =word.lower()
   118    536.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    536.2 MiB      0.0 MiB                   if (word_singular is False):
   120    536.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    536.2 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    536.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    536.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    536.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    536.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    536.2 MiB      0.0 MiB                   low_key = key.lower()
   139    536.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    536.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    536.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    536.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    536.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    536.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


text :  is it Dara
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
dara
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    536.3 MiB    536.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    536.3 MiB      0.0 MiB           text = message.text
    88    536.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    536.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    536.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    536.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    536.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    536.3 MiB      0.0 MiB                   low_key = key.lower()
    96    536.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    536.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    536.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    536.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    536.3 MiB      0.0 MiB                   if( singular_key is False):
   103    536.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    536.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    536.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109    536.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    536.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    536.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    536.3 MiB      0.0 MiB               entities = old_entities
   114    536.3 MiB      0.0 MiB               words = text.split(' ')
   115    536.3 MiB      0.0 MiB               for w in words:
   116    536.3 MiB      0.0 MiB                   word =w
   117    536.3 MiB      0.0 MiB                   word_lower =word.lower()
   118    536.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    536.3 MiB      0.0 MiB                   if (word_singular is False):
   120    536.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    536.3 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    536.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    536.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    536.3 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    536.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    536.3 MiB      0.0 MiB                   low_key = key.lower()
   139    536.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    536.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    536.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    536.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    536.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    536.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 2375 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625385.1835794}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625385.1506734}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625381.0958836}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625377.0473354}, {'event': 'user', 'input_channel': None, 'message_id': '0eb6a2a0a69c4d6e88afe2cb233b625a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'text': 'is it Dara', 'timestamp': 1587625373.0163822}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587625372.8747287}, {'event': 'session_started', 'timestamp': 1587625372.8747287}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587625372.8737493}], 'followup_action': None, 'latest_action_name': 'action_session_start', 'latest_event_time': 1587625372.8737493, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::7e3b73fc80', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'LOC': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
----------------------------------------- intent name when access getFormatedReply Ask_intent
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1625    422.4 MiB    422.4 MiB   @app.route('/ExternalChat', methods=['post'])
  1626                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1627                             @profile
  1628                             def external_chat():
  1629                                 global loadedAgentsMap
  1630    422.4 MiB      0.0 MiB       try:
  1631    422.4 MiB      0.0 MiB           args = request.args
  1632    422.4 MiB      0.0 MiB           if args is not None and "channel" in args:
  1633                                         if "channel" in args:
  1634                                             Channel = args["channel"].capitalize()
  1635                                         if "token" in args:
  1636                                             token = args["token"]
  1637                                         print(token)
  1638                                         print(Channel)
  1639                                         if Channel == "Telegram":
  1640                                             try :
  1641                             
  1642                                                 agent = Agent.query.filter_by(telegram_token=token).first()
  1643                                                 if(agent is None):
  1644                                                     raise ValueError("There is no agent has telegram_token =" + str(token))
  1645                                                 if agent.activate_telegram is False:
  1646                                                     raise ValueError("This agent is not active with telegram")
  1647                             
  1648                                                 agent_id = agent.id
  1649                             
  1650                                                 data = request.get_json('data')
  1651                             
  1652                                                 print("telegram response: " + str(data))
  1653                                                 # we can get chat id https://core.telegram.org/bots/api#chat
  1654                                                 #conversation_id = data['message']['chat']['id']
  1655                                                 conversation_id = None
  1656                                                 sission_id = data['message']["from"]['id']
  1657                                                 sender = str(Channel) + "_" + str(data['message']['chat']['first_name']) + "_" + str(data['message']['chat']['last_name']) + "_" + str(agent_id)
  1658                                                 userMsg = data['message']['text']
  1659                                                 chat_telegram_id = data['message']['chat']['id']
  1660                                                 # should merge with the orginal external chat with some changes
  1661                                                 chat_url = url + "/chatrestart"
  1662                             
  1663                                                 tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(
  1664                                                     sission_id)  # tracker_id + 1
  1665                             
  1666                                                 _agent = Agent.query.get(agent_id)
  1667                                                 if conversation_id is None:
  1668                                                     default_platform_object = Platform.query.filter_by(name=Channel).first()
  1669                                                     if default_platform_object is None:
  1670                                                         raise ValueError("Unfortunately, This channel/platform is not supported")
  1671                                                     else:
  1672                                                         new_conversation = ConversationHistory(startDateTime=date_time.now(),
  1673                                                                                                creationDate=date.today(),
  1674                                                                                                sessionId=sission_id, userId=sender,
  1675                                                                                                agent_id=agent_id,
  1676                                                                                                platform=Channel)
  1677                                                         new_conversation.sessionId = new_conversation.id
  1678                             
  1679                                                 else:
  1680                                                     new_conversation = ConversationHistory.query.get(conversation_id)
  1681                             
  1682                                                 if _agent is None:
  1683                                                     raise ValueError("there is no agent has id =" + str(agent_id))
  1684                             
  1685                                                 if _agent.enableWebDemo == False:
  1686                                                     raise ValueError(
  1687                                                         " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1688                                                 # asyncio.set_event_loop(asyncio.new_event_loop())
  1689                                                 sender_id = tracker_id
  1690                             
  1691                                                 language = _agent.language
  1692                             
  1693                             
  1694                                                 map_key = str(agent_id) + str(language)
  1695                                                 print("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL")
  1696                                                 load_agent_to_map(agent_id, language)
  1697                                                 print("2222222222222222222222")
  1698                             
  1699                                                 """
  1700                                                 # if map_key in loadedAgentsMap:
  1701                                                 if not map_key in loadedAgentsMap:
  1702                                                     respons = train_agent(agent_id, language)
  1703                                                     if not respons[0].status_code == 200:
  1704                                                         return respons
  1705                                                 """
  1706                                                 agent_obj = loadedAgentsMap[map_key]["agent"]
  1707                                                 print("ppppppppppppppppppppppppp")
  1708                             
  1709                                                 # loop1 = asyncio.get_event_loop()
  1710                                                 result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1711                                                 response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1712                                                 if "entities" in response:
  1713                             
  1714                                                     for entity in response["entities"]:
  1715                                                         if entity["extractor"] != "CRFEntityExtractor":
  1716                             
  1717                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1718                                                             if entity_obj is not None:
  1719                                                                 entity["entity"] = entity_obj.name
  1720                             
  1721                                                 state = retrieve_tracker(tracker_id, agent_id, language)
  1722                                                 print("state ------------------------------", state)
  1723                                                 state = state[0].json
  1724                             
  1725                                                 print("state ------------------------------", state)
  1726                             
  1727                                                 state_stroy = retrieve_story(tracker_id, agent_id, language)
  1728                                                 state_stroy = state_stroy.json
  1729                             
  1730                                                 final_res = []
  1731                                                 print("444444444")
  1732                             
  1733                                                 if "entities" in response:
  1734                                                     for entity in response["entities"]:
  1735                                                         if entity["extractor"] != "CRFEntityExtractor":
  1736                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1737                                                             if entity_obj is not None:
  1738                                                                 entity["entity"] = entity_obj.name
  1739                                                 print("5555555555")
  1740                             
  1741                                                 if "events" in state:
  1742                                                     for res in state["events"]:
  1743                                                         if res["event"] == "slot":
  1744                                                             final_res.append({res["name"]: res["value"]})
  1745                                                 print("666666666666")
  1746                             
  1747                                                 if "intent_ranking" in response:
  1748                                                     del response['intent_ranking']
  1749                                                 result = []
  1750                                                 if "name" in response["intent"]:
  1751                                                     try:
  1752                                                         all_intent_name = []
  1753                                                         for slot in final_res:
  1754                                                             if "Current_tracker_intent_name" in slot:
  1755                                                                 all_intent_name.append(slot["Current_tracker_intent_name"])
  1756                                                                 slot["Current_tracker_intent_name"] = \
  1757                                                                 slot["Current_tracker_intent_name"].split('$$')[0]
  1758                                                         print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  1759                                                         intent_name = all_intent_name[-1].split('$$')[0]
  1760                                                         intent_confidence = float(all_intent_name[-1].split('$$')[1])
  1761                             
  1762                                                         # response["intent"]["name"] = intent_name
  1763                                                     except Exception as e:
  1764                                                         intent_name = response["intent"]["name"]
  1765                                                         intent_confidence = float(response["intent"]["confidence"])
  1766                             
  1767                                                     result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1,
  1768                                                                                                                                final_res,
  1769                                                                                                                                agent_id,
  1770                                                                                                                                intent_name,
  1771                                                                                                                                response["entities"])
  1772                                                 if (new_conversation.chattexts is None):
  1773                                                     new_conversation.chattexts = []
  1774                             
  1775                                                 new_conversation.chattexts.append(
  1776                                                     ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  1777                                                              ExtractedEntities=[
  1778                                                                  ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  1779                                                                  for ent in response["entities"]]))
  1780                                                 if response["intent"]["name"] == "out_of_scope":
  1781                                                     """ Get confirmed fallback case"""
  1782                             
  1783                                                     new_conversation.isFallback = True
  1784                                                     new_conversation.endDateTime = date_time.now()
  1785                                                     duration = new_conversation.endDateTime - new_conversation.startDateTime
  1786                                                     duration_in_s = duration.total_seconds()
  1787                                                     minutes = int(divmod(duration_in_s, 60)[0])
  1788                                                     if (minutes < 1):
  1789                                                         new_conversation.duration = str(int(duration_in_s)) + " sec"
  1790                                                     else:
  1791                                                         new_conversation.duration = str(minutes) + " min"
  1792                             
  1793                                                     chattexts = new_conversation.chattexts
  1794                                                     chattexts.reverse()
  1795                                                     print("10000000000000")
  1796                             
  1797                                                     for chat in chattexts:
  1798                                                         print("111111111")
  1799                             
  1800                                                         if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  1801                                                             """Change the last chattext which has intentname to isFallbackIntent = True"""
  1802                                                             chat.isFallBackIntent = True
  1803                                                             break
  1804                             
  1805                                                     for res in result:
  1806                                                         """ Add Rasa response to the history when get confirmed fallback Case"""
  1807                                                         new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  1808                             
  1809                                                     db.session.commit()
  1810                             
  1811                                                     res = requests.post(chat_url,
  1812                                                                         json={"message": "/restart", "language": language, "agent_id": agent_id,
  1813                                                                               "identifier": sission_id, "Channel": Channel, "sender": sender},
  1814                                                                         verify=False)
  1815                                                     res.close()
  1816                                                     """
  1817                                                     deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  1818                                                     db.session.delete(deletet_events)
  1819                                                     db.session.commit()
  1820                                                     """
  1821                             
  1822                                                     telegram_res = send_message_telegram(token,chat_telegram_id,result)
  1823                             
  1824                                                     if telegram_res.status_code == 200:
  1825                                                         return ({}),200
  1826                                                     else:
  1827                                                         return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1828                             
  1829                             
  1830                                                 for res in result:
  1831                                                     new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  1832                             
  1833                                                 db.session.add(new_conversation)
  1834                                                 db.session.commit()
  1835                                                 for final_slot in final_slots_res:
  1836                                                     if "Conversation_finished" in final_slot:
  1837                                                         if final_slot["Conversation_finished"] == "yes":
  1838                                                             new_conversation.endDateTime = date_time.now()
  1839                                                             duration = new_conversation.endDateTime - new_conversation.startDateTime
  1840                                                             duration_in_s = duration.total_seconds()
  1841                                                             minutes = int(divmod(duration_in_s, 60)[0])
  1842                                                             if (minutes < 1):
  1843                                                                 new_conversation.duration = str(int(duration_in_s)) + " sec"
  1844                                                             else:
  1845                                                                 new_conversation.duration = str(minutes) + " min"
  1846                                                             db.session.commit()
  1847                                                             res = requests.post(chat_url,
  1848                                                                                 json={"message": "/restart", "language": language,
  1849                                                                                       "agent_id": agent_id,
  1850                                                                                       "identifier": sission_id, "Channel": Channel,
  1851                                                                                       "sender": sender}, verify=False)
  1852                                                             """
  1853                                                             deletet_events = events.query.filter_by(sender_id = sender_id).all()
  1854                             
  1855                                                             for item in deletet_events:
  1856                                                                 db.session.delete(item)
  1857                                                             db.session.commit()
  1858                                                             print("---------------------- Memory Report At the end of externalchat")
  1859                                                             h = hpy()
  1860                                                             print (h.heap())
  1861                                                             """
  1862                                                             res.close()
  1863                             
  1864                                                             telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1865                             
  1866                                                             if telegram_res.status_code == 200:
  1867                                                                 return ({}), 200
  1868                                                             else:
  1869                                                                 return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1870                             
  1871                             
  1872                                                 """
  1873                                                 print("---------------------- Memory Report At the end of externalchat")
  1874                                                 h = hpy()
  1875                                                 print (h.heap())
  1876                                                 """
  1877                             
  1878                                                 telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1879                             
  1880                                                 if telegram_res.status_code == 200:
  1881                                                     return ({}), 200
  1882                                                 else:
  1883                                                     return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1884                             
  1885                             
  1886                                             except Exception as e:
  1887                                                 return jsonify({"message": str(e)}), 400
  1888                                     else:
  1889                             
  1890    422.4 MiB      0.0 MiB               data = request.get_json('data')
  1891    422.4 MiB      0.0 MiB               token = data['token']
  1892                             
  1893    422.4 MiB      0.0 MiB               try:
  1894    422.4 MiB      0.0 MiB                   decripted_data = jwt.decode(token, app.config['SECRET_KEY'])
  1895                                         except:
  1896                                             return jsonify({'message': 'Token is invalid or expired!'}), 401
  1897                             
  1898    422.4 MiB      0.0 MiB               if not "conversation_id" in data:
  1899                                             conversation_id = None
  1900                                         else:
  1901    422.4 MiB      0.0 MiB                   conversation_id = data["conversation_id"]
  1902                             
  1903    422.4 MiB      0.0 MiB               if not "identifier" in data:
  1904                                             raise ValueError("identifier JSON element is required")
  1905    422.4 MiB      0.0 MiB               if not "Channel" in data:
  1906                                             raise ValueError("Channel JSON element is required")
  1907    422.4 MiB      0.0 MiB               if not "sender" in data:
  1908                                             raise ValueError("sender JSON element is required")
  1909                             
  1910    422.4 MiB      0.0 MiB               Channel = data["Channel"].capitalize()
  1911    422.4 MiB      0.0 MiB               sender = data["sender"]
  1912    422.4 MiB      0.0 MiB               sission_id = data["identifier"]
  1913                             
  1914    422.4 MiB      0.0 MiB               agent_id = decripted_data["agent_id"]
  1915                             
  1916                             
  1917    422.4 MiB      0.0 MiB           chat_url = url + "/chatrestart"
  1918                             
  1919    422.4 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
  1920                             
  1921                             
  1922    422.4 MiB      0.0 MiB           _agent = Agent.query.get(agent_id)
  1923    422.4 MiB      0.0 MiB           if conversation_id is None:
  1924    422.4 MiB      0.0 MiB               default_platform_object = Platform.query.filter_by(name=Channel).first()
  1925    422.4 MiB      0.0 MiB               if default_platform_object is None:
  1926                                             raise ValueError("Unfortunately, This channel/platform is not supported")
  1927                                         else:
  1928    422.4 MiB      0.0 MiB                   new_conversation = ConversationHistory(startDateTime=date_time.now(), creationDate=date.today(),
  1929    422.4 MiB      0.0 MiB                                                          sessionId=sission_id, userId=data["sender"], agent_id=agent_id,
  1930    422.4 MiB      0.0 MiB                                                          platform=Channel)
  1931    422.4 MiB      0.0 MiB                   new_conversation.sessionId = new_conversation.id
  1932                             
  1933                                     else:
  1934                                         new_conversation = ConversationHistory.query.get(conversation_id)
  1935                             
  1936    422.4 MiB      0.0 MiB           if _agent is None:
  1937                                         raise ValueError("there is no agent has id =" + str(agent_id))
  1938                             
  1939    422.4 MiB      0.0 MiB           if _agent.enableWebDemo == False:
  1940                                         raise ValueError(
  1941                                             " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1942                                     #asyncio.set_event_loop(asyncio.new_event_loop())
  1943    422.4 MiB      0.0 MiB           sender_id = tracker_id
  1944                             
  1945    422.4 MiB      0.0 MiB           language = _agent.language
  1946                             
  1947    422.4 MiB      0.0 MiB           userMsg = data['message']
  1948    422.4 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
  1949    536.1 MiB    113.7 MiB           load_agent_to_map(agent_id,language)
  1950                                     
  1951                                     """
  1952                                     # if map_key in loadedAgentsMap:
  1953                                     if not map_key in loadedAgentsMap:
  1954                                         respons = train_agent(agent_id, language)
  1955                                         if not respons[0].status_code == 200:
  1956                                             return respons
  1957                                     """
  1958    536.1 MiB      0.0 MiB           agent_obj = loadedAgentsMap[map_key]["agent"]
  1959                                     
  1960                                     #loop1 = asyncio.get_event_loop()
  1961    536.4 MiB      0.2 MiB           result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1962    536.3 MiB      0.0 MiB           response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1963    536.3 MiB      0.0 MiB           if "entities" in response:
  1964                             
  1965    536.3 MiB      0.0 MiB               for entity in response["entities"]:
  1966                                             if entity["extractor"] != "CRFEntityExtractor":
  1967                             
  1968                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1969                                                 if entity_obj is not None:
  1970                                                     entity["entity"] = entity_obj.name
  1971                             
  1972    536.3 MiB      0.0 MiB           state = retrieve_tracker(tracker_id, agent_id, language)
  1973    536.3 MiB      0.0 MiB           print("state ------------------------------", state)
  1974    536.3 MiB      0.0 MiB           state = state[0].json
  1975                                     
  1976    536.3 MiB      0.0 MiB           print("state ------------------------------", state)
  1977                             
  1978    536.3 MiB      0.0 MiB           state_stroy = retrieve_story(tracker_id, agent_id, language)
  1979    536.3 MiB      0.0 MiB           state_stroy = state_stroy.json
  1980                             
  1981    536.3 MiB      0.0 MiB           final_res = []
  1982                                     
  1983    536.3 MiB      0.0 MiB           if "entities" in response:
  1984    536.3 MiB      0.0 MiB               for entity in response["entities"]:
  1985                                             if entity["extractor"] != "CRFEntityExtractor":
  1986                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1987                                                 if entity_obj is not None:
  1988                                                     entity["entity"] = entity_obj.name
  1989                                     
  1990    536.3 MiB      0.0 MiB           if "events" in state:
  1991    536.3 MiB      0.0 MiB               for res in state["events"]:
  1992    536.3 MiB      0.0 MiB                   if res["event"] == "slot":
  1993                                                 final_res.append({res["name"]: res["value"]})
  1994                                     
  1995    536.3 MiB      0.0 MiB           if "intent_ranking" in response:
  1996    536.3 MiB      0.0 MiB               del response['intent_ranking']
  1997    536.3 MiB      0.0 MiB           result = []
  1998    536.3 MiB      0.0 MiB           if "name" in response["intent"]:
  1999    536.3 MiB      0.0 MiB               try:
  2000    536.3 MiB      0.0 MiB                   all_intent_name = []
  2001    536.3 MiB      0.0 MiB                   for slot in final_res:
  2002                                                 if "Current_tracker_intent_name" in slot:
  2003                                                     all_intent_name.append(slot["Current_tracker_intent_name"])
  2004                                                     slot["Current_tracker_intent_name"] = slot["Current_tracker_intent_name"].split('$$')[0]
  2005    536.3 MiB      0.0 MiB                   print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  2006    536.3 MiB      0.0 MiB                   intent_name = all_intent_name[-1].split('$$')[0]
  2007                                             intent_confidence = float(all_intent_name[-1].split('$$')[1])
  2008                             
  2009                                             # response["intent"]["name"] = intent_name
  2010    536.3 MiB      0.0 MiB               except Exception as e:
  2011    536.3 MiB      0.0 MiB                   intent_name = response["intent"]["name"]
  2012    536.3 MiB      0.0 MiB                   intent_confidence = float(response["intent"]["confidence"])
  2013                             
  2014    536.3 MiB      0.0 MiB               result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1, final_res,
  2015    536.3 MiB      0.0 MiB                                                                                          agent_id, intent_name,
  2016    536.3 MiB      0.0 MiB                                                                                          response["entities"])
  2017                                     if (new_conversation.chattexts is None):
  2018                                         new_conversation.chattexts = []
  2019                             
  2020                                     new_conversation.chattexts.append(ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  2021                                                                                ExtractedEntities=[
  2022                                                                                    ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  2023                                                                                    for ent in response["entities"]]))
  2024                                     if response["intent"]["name"] == "out_of_scope":
  2025                                         """ Get confirmed fallback case"""
  2026                             
  2027                                         new_conversation.isFallback = True
  2028                                         new_conversation.endDateTime = date_time.now()
  2029                                         duration = new_conversation.endDateTime - new_conversation.startDateTime
  2030                                         duration_in_s = duration.total_seconds()
  2031                                         minutes = int(divmod(duration_in_s, 60)[0])
  2032                                         if (minutes < 1):
  2033                                             new_conversation.duration = str(int(duration_in_s)) + " sec"
  2034                                         else:
  2035                                             new_conversation.duration = str(minutes) + " min"
  2036                             
  2037                                         chattexts = new_conversation.chattexts
  2038                                         chattexts.reverse()
  2039                                         
  2040                                         for chat in chattexts:
  2041                                             
  2042                                             if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  2043                                                 """Change the last chattext which has intentname to isFallbackIntent = True"""
  2044                                                 chat.isFallBackIntent = True
  2045                                                 break
  2046                             
  2047                                         for res in result:
  2048                                             """ Add Rasa response to the history when get confirmed fallback Case"""
  2049                                             new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  2050                             
  2051                                         db.session.commit()
  2052                                         
  2053                                         res = requests.post(chat_url, json={"message": "/restart", "language": language, "agent_id": agent_id,
  2054                                                                             "identifier": sission_id, "Channel": Channel, "sender": sender})
  2055                                         #res.close()
  2056                                         """
  2057                                         deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  2058                                         db.session.delete(deletet_events)
  2059                                         db.session.commit()
  2060                                         """
  2061                                         return jsonify(
  2062                                             {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2063                                              "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence} , "entities": final_entities_result,
  2064                                              "entities1": response["entities"], "text": response["text"]}), 200
  2065                             
  2066                                     for res in result:
  2067                                         new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  2068                             
  2069                                     db.session.add(new_conversation)
  2070                                     db.session.commit()
  2071                                     for final_slot in final_slots_res:
  2072                                         if "Conversation_finished" in final_slot:
  2073                                             if final_slot["Conversation_finished"] == "yes":
  2074                                                 new_conversation.endDateTime = date_time.now()
  2075                                                 duration = new_conversation.endDateTime - new_conversation.startDateTime
  2076                                                 duration_in_s = duration.total_seconds()
  2077                                                 minutes = int(divmod(duration_in_s, 60)[0])
  2078                                                 if (minutes < 1):
  2079                                                     new_conversation.duration = str(int(duration_in_s)) + " sec"
  2080                                                 else:
  2081                                                     new_conversation.duration = str(minutes) + " min"
  2082                                                 db.session.commit()
  2083                                                 res = requests.post(chat_url,
  2084                                                                     json={"message": "/restart", "language": language, "agent_id": agent_id,
  2085                                                                           "identifier": sission_id, "Channel": Channel, "sender": sender})
  2086                                                 """
  2087                                                 deletet_events = events.query.filter_by(sender_id = sender_id).all()
  2088                                                 
  2089                                                 for item in deletet_events:
  2090                                                     db.session.delete(item)
  2091                                                 db.session.commit()
  2092                                                 print("---------------------- Memory Report At the end of externalchat")
  2093                                                 h = hpy()
  2094                                                 print (h.heap())
  2095                                                 """
  2096                                                 #res.close()
  2097                                                 return jsonify(
  2098                                                     {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2099                                                      "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence},
  2100                                                      "entities": final_entities_result, "entities1": response["entities"],
  2101                                                      "text": response["text"]}), 200
  2102                                     """
  2103                                     print("---------------------- Memory Report At the end of externalchat")
  2104                                     h = hpy()
  2105                                     print (h.heap())
  2106                                     """
  2107                                     return jsonify({"story": state_stroy, "conversation_id": new_conversation.id, "reply": result, "slots1": final_res,
  2108                                                     "slots": final_slots_res, "intent": {'name':intent_name,'confidence':intent_confidence}, "entities": final_entities_result,
  2109                                                     "entities1": response["entities"], "text": response["text"]}), 200
  2110                             
  2111                             
  2112    536.3 MiB      0.0 MiB       except Exception as e:
  2113    536.3 MiB      0.0 MiB           db.session.rollback()
  2114    536.3 MiB      0.0 MiB           return jsonify({"message": str(e)}), 400


[2020-04-23 10:03:05,442] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:03:05] "[31m[1mPOST /ExternalChat HTTP/1.1[0m" 400 -
2020-04-23 10:03:33.753751 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [OPTIONS]
2020-04-23 10:03:33.753751%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.3
2020-04-23 10:03:33.753751%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4384768000, percent=65.6, used=8352944128, free=4384768000)
2020-04-23 10:03:33.754747%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:03:33,757] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:03:33] "[37mOPTIONS /ExternalChat HTTP/1.1[0m" 200 -
2020-04-23 10:03:34.004992 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [POST]
2020-04-23 10:03:34.004992%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.1
2020-04-23 10:03:34.005988%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4384882688, percent=65.6, used=8352829440, free=4384882688)
2020-04-23 10:03:34.005988%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
text :  is it Dara
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
dara
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    536.0 MiB    536.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    536.0 MiB      0.0 MiB           text = message.text
    88    536.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    536.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    536.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    536.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    536.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    536.0 MiB      0.0 MiB                   low_key = key.lower()
    96    536.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    536.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    536.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    536.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    536.0 MiB      0.0 MiB                   if( singular_key is False):
   103    536.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    536.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    536.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    536.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    536.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    536.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    536.0 MiB      0.0 MiB               entities = old_entities
   114    536.0 MiB      0.0 MiB               words = text.split(' ')
   115    536.0 MiB      0.0 MiB               for w in words:
   116    536.0 MiB      0.0 MiB                   word =w
   117    536.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    536.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    536.0 MiB      0.0 MiB                   if (word_singular is False):
   120    536.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    536.0 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    536.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    536.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    536.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    536.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    536.0 MiB      0.0 MiB                   low_key = key.lower()
   139    536.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    536.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    536.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    536.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    536.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    536.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


text :  is it Dara
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
dara
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    536.1 MiB    536.1 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    536.1 MiB      0.0 MiB           text = message.text
    88    536.1 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    536.1 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    536.1 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    536.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    536.1 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    536.1 MiB      0.0 MiB                   low_key = key.lower()
    96    536.1 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    536.1 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    536.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    536.1 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    536.1 MiB      0.0 MiB                   if( singular_key is False):
   103    536.1 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    536.1 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    536.1 MiB      0.0 MiB               old_entities = message.get("entities")
   109    536.1 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    536.1 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    536.1 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    536.1 MiB      0.0 MiB               entities = old_entities
   114    536.1 MiB      0.0 MiB               words = text.split(' ')
   115    536.1 MiB      0.0 MiB               for w in words:
   116    536.1 MiB      0.0 MiB                   word =w
   117    536.1 MiB      0.0 MiB                   word_lower =word.lower()
   118    536.1 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    536.1 MiB      0.0 MiB                   if (word_singular is False):
   120    536.1 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    536.1 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    536.1 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    536.1 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    536.1 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    536.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    536.1 MiB      0.0 MiB                   low_key = key.lower()
   139    536.1 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    536.1 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    536.1 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    536.1 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    536.1 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    536.1 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 3485 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625385.1835794}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625385.1506734}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625381.0958836}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625377.0473354}, {'event': 'user', 'input_channel': None, 'message_id': '0eb6a2a0a69c4d6e88afe2cb233b625a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'text': 'is it Dara', 'timestamp': 1587625373.0163822}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587625372.8747287}, {'event': 'session_started', 'timestamp': 1587625372.8747287}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587625372.8737493}, {'confidence': 0.513349711894989, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625414.3490658}, {'event': 'user', 'input_channel': None, 'message_id': '0a0c88764f744980a52b53242da50d2a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'text': 'is it Dara', 'timestamp': 1587625414.3370934}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587625414.3370934, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::7e3b73fc80', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'LOC': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
----------------------------------------- intent name when access getFormatedReply Ask_intent
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1625    536.0 MiB    536.0 MiB   @app.route('/ExternalChat', methods=['post'])
  1626                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1627                             @profile
  1628                             def external_chat():
  1629                                 global loadedAgentsMap
  1630    536.0 MiB      0.0 MiB       try:
  1631    536.0 MiB      0.0 MiB           args = request.args
  1632    536.0 MiB      0.0 MiB           if args is not None and "channel" in args:
  1633                                         if "channel" in args:
  1634                                             Channel = args["channel"].capitalize()
  1635                                         if "token" in args:
  1636                                             token = args["token"]
  1637                                         print(token)
  1638                                         print(Channel)
  1639                                         if Channel == "Telegram":
  1640                                             try :
  1641                             
  1642                                                 agent = Agent.query.filter_by(telegram_token=token).first()
  1643                                                 if(agent is None):
  1644                                                     raise ValueError("There is no agent has telegram_token =" + str(token))
  1645                                                 if agent.activate_telegram is False:
  1646                                                     raise ValueError("This agent is not active with telegram")
  1647                             
  1648                                                 agent_id = agent.id
  1649                             
  1650                                                 data = request.get_json('data')
  1651                             
  1652                                                 print("telegram response: " + str(data))
  1653                                                 # we can get chat id https://core.telegram.org/bots/api#chat
  1654                                                 #conversation_id = data['message']['chat']['id']
  1655                                                 conversation_id = None
  1656                                                 sission_id = data['message']["from"]['id']
  1657                                                 sender = str(Channel) + "_" + str(data['message']['chat']['first_name']) + "_" + str(data['message']['chat']['last_name']) + "_" + str(agent_id)
  1658                                                 userMsg = data['message']['text']
  1659                                                 chat_telegram_id = data['message']['chat']['id']
  1660                                                 # should merge with the orginal external chat with some changes
  1661                                                 chat_url = url + "/chatrestart"
  1662                             
  1663                                                 tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(
  1664                                                     sission_id)  # tracker_id + 1
  1665                             
  1666                                                 _agent = Agent.query.get(agent_id)
  1667                                                 if conversation_id is None:
  1668                                                     default_platform_object = Platform.query.filter_by(name=Channel).first()
  1669                                                     if default_platform_object is None:
  1670                                                         raise ValueError("Unfortunately, This channel/platform is not supported")
  1671                                                     else:
  1672                                                         new_conversation = ConversationHistory(startDateTime=date_time.now(),
  1673                                                                                                creationDate=date.today(),
  1674                                                                                                sessionId=sission_id, userId=sender,
  1675                                                                                                agent_id=agent_id,
  1676                                                                                                platform=Channel)
  1677                                                         new_conversation.sessionId = new_conversation.id
  1678                             
  1679                                                 else:
  1680                                                     new_conversation = ConversationHistory.query.get(conversation_id)
  1681                             
  1682                                                 if _agent is None:
  1683                                                     raise ValueError("there is no agent has id =" + str(agent_id))
  1684                             
  1685                                                 if _agent.enableWebDemo == False:
  1686                                                     raise ValueError(
  1687                                                         " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1688                                                 # asyncio.set_event_loop(asyncio.new_event_loop())
  1689                                                 sender_id = tracker_id
  1690                             
  1691                                                 language = _agent.language
  1692                             
  1693                             
  1694                                                 map_key = str(agent_id) + str(language)
  1695                                                 print("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL")
  1696                                                 load_agent_to_map(agent_id, language)
  1697                                                 print("2222222222222222222222")
  1698                             
  1699                                                 """
  1700                                                 # if map_key in loadedAgentsMap:
  1701                                                 if not map_key in loadedAgentsMap:
  1702                                                     respons = train_agent(agent_id, language)
  1703                                                     if not respons[0].status_code == 200:
  1704                                                         return respons
  1705                                                 """
  1706                                                 agent_obj = loadedAgentsMap[map_key]["agent"]
  1707                                                 print("ppppppppppppppppppppppppp")
  1708                             
  1709                                                 # loop1 = asyncio.get_event_loop()
  1710                                                 result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1711                                                 response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1712                                                 if "entities" in response:
  1713                             
  1714                                                     for entity in response["entities"]:
  1715                                                         if entity["extractor"] != "CRFEntityExtractor":
  1716                             
  1717                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1718                                                             if entity_obj is not None:
  1719                                                                 entity["entity"] = entity_obj.name
  1720                             
  1721                                                 state = retrieve_tracker(tracker_id, agent_id, language)
  1722                                                 print("state ------------------------------", state)
  1723                                                 state = state[0].json
  1724                             
  1725                                                 print("state ------------------------------", state)
  1726                             
  1727                                                 state_stroy = retrieve_story(tracker_id, agent_id, language)
  1728                                                 state_stroy = state_stroy.json
  1729                             
  1730                                                 final_res = []
  1731                                                 print("444444444")
  1732                             
  1733                                                 if "entities" in response:
  1734                                                     for entity in response["entities"]:
  1735                                                         if entity["extractor"] != "CRFEntityExtractor":
  1736                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1737                                                             if entity_obj is not None:
  1738                                                                 entity["entity"] = entity_obj.name
  1739                                                 print("5555555555")
  1740                             
  1741                                                 if "events" in state:
  1742                                                     for res in state["events"]:
  1743                                                         if res["event"] == "slot":
  1744                                                             final_res.append({res["name"]: res["value"]})
  1745                                                 print("666666666666")
  1746                             
  1747                                                 if "intent_ranking" in response:
  1748                                                     del response['intent_ranking']
  1749                                                 result = []
  1750                                                 if "name" in response["intent"]:
  1751                                                     try:
  1752                                                         all_intent_name = []
  1753                                                         for slot in final_res:
  1754                                                             if "Current_tracker_intent_name" in slot:
  1755                                                                 all_intent_name.append(slot["Current_tracker_intent_name"])
  1756                                                                 slot["Current_tracker_intent_name"] = \
  1757                                                                 slot["Current_tracker_intent_name"].split('$$')[0]
  1758                                                         print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  1759                                                         intent_name = all_intent_name[-1].split('$$')[0]
  1760                                                         intent_confidence = float(all_intent_name[-1].split('$$')[1])
  1761                             
  1762                                                         # response["intent"]["name"] = intent_name
  1763                                                     except Exception as e:
  1764                                                         intent_name = response["intent"]["name"]
  1765                                                         intent_confidence = float(response["intent"]["confidence"])
  1766                             
  1767                                                     result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1,
  1768                                                                                                                                final_res,
  1769                                                                                                                                agent_id,
  1770                                                                                                                                intent_name,
  1771                                                                                                                                response["entities"])
  1772                                                 if (new_conversation.chattexts is None):
  1773                                                     new_conversation.chattexts = []
  1774                             
  1775                                                 new_conversation.chattexts.append(
  1776                                                     ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  1777                                                              ExtractedEntities=[
  1778                                                                  ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  1779                                                                  for ent in response["entities"]]))
  1780                                                 if response["intent"]["name"] == "out_of_scope":
  1781                                                     """ Get confirmed fallback case"""
  1782                             
  1783                                                     new_conversation.isFallback = True
  1784                                                     new_conversation.endDateTime = date_time.now()
  1785                                                     duration = new_conversation.endDateTime - new_conversation.startDateTime
  1786                                                     duration_in_s = duration.total_seconds()
  1787                                                     minutes = int(divmod(duration_in_s, 60)[0])
  1788                                                     if (minutes < 1):
  1789                                                         new_conversation.duration = str(int(duration_in_s)) + " sec"
  1790                                                     else:
  1791                                                         new_conversation.duration = str(minutes) + " min"
  1792                             
  1793                                                     chattexts = new_conversation.chattexts
  1794                                                     chattexts.reverse()
  1795                                                     print("10000000000000")
  1796                             
  1797                                                     for chat in chattexts:
  1798                                                         print("111111111")
  1799                             
  1800                                                         if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  1801                                                             """Change the last chattext which has intentname to isFallbackIntent = True"""
  1802                                                             chat.isFallBackIntent = True
  1803                                                             break
  1804                             
  1805                                                     for res in result:
  1806                                                         """ Add Rasa response to the history when get confirmed fallback Case"""
  1807                                                         new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  1808                             
  1809                                                     db.session.commit()
  1810                             
  1811                                                     res = requests.post(chat_url,
  1812                                                                         json={"message": "/restart", "language": language, "agent_id": agent_id,
  1813                                                                               "identifier": sission_id, "Channel": Channel, "sender": sender},
  1814                                                                         verify=False)
  1815                                                     res.close()
  1816                                                     """
  1817                                                     deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  1818                                                     db.session.delete(deletet_events)
  1819                                                     db.session.commit()
  1820                                                     """
  1821                             
  1822                                                     telegram_res = send_message_telegram(token,chat_telegram_id,result)
  1823                             
  1824                                                     if telegram_res.status_code == 200:
  1825                                                         return ({}),200
  1826                                                     else:
  1827                                                         return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1828                             
  1829                             
  1830                                                 for res in result:
  1831                                                     new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  1832                             
  1833                                                 db.session.add(new_conversation)
  1834                                                 db.session.commit()
  1835                                                 for final_slot in final_slots_res:
  1836                                                     if "Conversation_finished" in final_slot:
  1837                                                         if final_slot["Conversation_finished"] == "yes":
  1838                                                             new_conversation.endDateTime = date_time.now()
  1839                                                             duration = new_conversation.endDateTime - new_conversation.startDateTime
  1840                                                             duration_in_s = duration.total_seconds()
  1841                                                             minutes = int(divmod(duration_in_s, 60)[0])
  1842                                                             if (minutes < 1):
  1843                                                                 new_conversation.duration = str(int(duration_in_s)) + " sec"
  1844                                                             else:
  1845                                                                 new_conversation.duration = str(minutes) + " min"
  1846                                                             db.session.commit()
  1847                                                             res = requests.post(chat_url,
  1848                                                                                 json={"message": "/restart", "language": language,
  1849                                                                                       "agent_id": agent_id,
  1850                                                                                       "identifier": sission_id, "Channel": Channel,
  1851                                                                                       "sender": sender}, verify=False)
  1852                                                             """
  1853                                                             deletet_events = events.query.filter_by(sender_id = sender_id).all()
  1854                             
  1855                                                             for item in deletet_events:
  1856                                                                 db.session.delete(item)
  1857                                                             db.session.commit()
  1858                                                             print("---------------------- Memory Report At the end of externalchat")
  1859                                                             h = hpy()
  1860                                                             print (h.heap())
  1861                                                             """
  1862                                                             res.close()
  1863                             
  1864                                                             telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1865                             
  1866                                                             if telegram_res.status_code == 200:
  1867                                                                 return ({}), 200
  1868                                                             else:
  1869                                                                 return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1870                             
  1871                             
  1872                                                 """
  1873                                                 print("---------------------- Memory Report At the end of externalchat")
  1874                                                 h = hpy()
  1875                                                 print (h.heap())
  1876                                                 """
  1877                             
  1878                                                 telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1879                             
  1880                                                 if telegram_res.status_code == 200:
  1881                                                     return ({}), 200
  1882                                                 else:
  1883                                                     return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1884                             
  1885                             
  1886                                             except Exception as e:
  1887                                                 return jsonify({"message": str(e)}), 400
  1888                                     else:
  1889                             
  1890    536.0 MiB      0.0 MiB               data = request.get_json('data')
  1891    536.0 MiB      0.0 MiB               token = data['token']
  1892                             
  1893    536.0 MiB      0.0 MiB               try:
  1894    536.0 MiB      0.0 MiB                   decripted_data = jwt.decode(token, app.config['SECRET_KEY'])
  1895                                         except:
  1896                                             return jsonify({'message': 'Token is invalid or expired!'}), 401
  1897                             
  1898    536.0 MiB      0.0 MiB               if not "conversation_id" in data:
  1899                                             conversation_id = None
  1900                                         else:
  1901    536.0 MiB      0.0 MiB                   conversation_id = data["conversation_id"]
  1902                             
  1903    536.0 MiB      0.0 MiB               if not "identifier" in data:
  1904                                             raise ValueError("identifier JSON element is required")
  1905    536.0 MiB      0.0 MiB               if not "Channel" in data:
  1906                                             raise ValueError("Channel JSON element is required")
  1907    536.0 MiB      0.0 MiB               if not "sender" in data:
  1908                                             raise ValueError("sender JSON element is required")
  1909                             
  1910    536.0 MiB      0.0 MiB               Channel = data["Channel"].capitalize()
  1911    536.0 MiB      0.0 MiB               sender = data["sender"]
  1912    536.0 MiB      0.0 MiB               sission_id = data["identifier"]
  1913                             
  1914    536.0 MiB      0.0 MiB               agent_id = decripted_data["agent_id"]
  1915                             
  1916                             
  1917    536.0 MiB      0.0 MiB           chat_url = url + "/chatrestart"
  1918                             
  1919    536.0 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
  1920                             
  1921                             
  1922    536.0 MiB      0.0 MiB           _agent = Agent.query.get(agent_id)
  1923    536.0 MiB      0.0 MiB           if conversation_id is None:
  1924    536.0 MiB      0.0 MiB               default_platform_object = Platform.query.filter_by(name=Channel).first()
  1925    536.0 MiB      0.0 MiB               if default_platform_object is None:
  1926                                             raise ValueError("Unfortunately, This channel/platform is not supported")
  1927                                         else:
  1928    536.0 MiB      0.0 MiB                   new_conversation = ConversationHistory(startDateTime=date_time.now(), creationDate=date.today(),
  1929    536.0 MiB      0.0 MiB                                                          sessionId=sission_id, userId=data["sender"], agent_id=agent_id,
  1930    536.0 MiB      0.0 MiB                                                          platform=Channel)
  1931    536.0 MiB      0.0 MiB                   new_conversation.sessionId = new_conversation.id
  1932                             
  1933                                     else:
  1934                                         new_conversation = ConversationHistory.query.get(conversation_id)
  1935                             
  1936    536.0 MiB      0.0 MiB           if _agent is None:
  1937                                         raise ValueError("there is no agent has id =" + str(agent_id))
  1938                             
  1939    536.0 MiB      0.0 MiB           if _agent.enableWebDemo == False:
  1940                                         raise ValueError(
  1941                                             " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1942                                     #asyncio.set_event_loop(asyncio.new_event_loop())
  1943    536.0 MiB      0.0 MiB           sender_id = tracker_id
  1944                             
  1945    536.0 MiB      0.0 MiB           language = _agent.language
  1946                             
  1947    536.0 MiB      0.0 MiB           userMsg = data['message']
  1948    536.0 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
  1949    536.0 MiB      0.0 MiB           load_agent_to_map(agent_id,language)
  1950                                     
  1951                                     """
  1952                                     # if map_key in loadedAgentsMap:
  1953                                     if not map_key in loadedAgentsMap:
  1954                                         respons = train_agent(agent_id, language)
  1955                                         if not respons[0].status_code == 200:
  1956                                             return respons
  1957                                     """
  1958    536.0 MiB      0.0 MiB           agent_obj = loadedAgentsMap[map_key]["agent"]
  1959                                     
  1960                                     #loop1 = asyncio.get_event_loop()
  1961    536.1 MiB      0.1 MiB           result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1962    536.1 MiB      0.0 MiB           response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1963    536.1 MiB      0.0 MiB           if "entities" in response:
  1964                             
  1965    536.1 MiB      0.0 MiB               for entity in response["entities"]:
  1966                                             if entity["extractor"] != "CRFEntityExtractor":
  1967                             
  1968                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1969                                                 if entity_obj is not None:
  1970                                                     entity["entity"] = entity_obj.name
  1971                             
  1972    536.1 MiB      0.0 MiB           state = retrieve_tracker(tracker_id, agent_id, language)
  1973    536.1 MiB      0.0 MiB           print("state ------------------------------", state)
  1974    536.1 MiB      0.0 MiB           state = state[0].json
  1975                                     
  1976    536.1 MiB      0.0 MiB           print("state ------------------------------", state)
  1977                             
  1978    536.1 MiB      0.0 MiB           state_stroy = retrieve_story(tracker_id, agent_id, language)
  1979    536.1 MiB      0.0 MiB           state_stroy = state_stroy.json
  1980                             
  1981    536.1 MiB      0.0 MiB           final_res = []
  1982                                     
  1983    536.1 MiB      0.0 MiB           if "entities" in response:
  1984    536.1 MiB      0.0 MiB               for entity in response["entities"]:
  1985                                             if entity["extractor"] != "CRFEntityExtractor":
  1986                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1987                                                 if entity_obj is not None:
  1988                                                     entity["entity"] = entity_obj.name
  1989                                     
  1990    536.1 MiB      0.0 MiB           if "events" in state:
  1991    536.1 MiB      0.0 MiB               for res in state["events"]:
  1992    536.1 MiB      0.0 MiB                   if res["event"] == "slot":
  1993                                                 final_res.append({res["name"]: res["value"]})
  1994                                     
  1995    536.1 MiB      0.0 MiB           if "intent_ranking" in response:
  1996    536.1 MiB      0.0 MiB               del response['intent_ranking']
  1997    536.1 MiB      0.0 MiB           result = []
  1998    536.1 MiB      0.0 MiB           if "name" in response["intent"]:
  1999    536.1 MiB      0.0 MiB               try:
  2000    536.1 MiB      0.0 MiB                   all_intent_name = []
  2001    536.1 MiB      0.0 MiB                   for slot in final_res:
  2002                                                 if "Current_tracker_intent_name" in slot:
  2003                                                     all_intent_name.append(slot["Current_tracker_intent_name"])
  2004                                                     slot["Current_tracker_intent_name"] = slot["Current_tracker_intent_name"].split('$$')[0]
  2005    536.1 MiB      0.0 MiB                   print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  2006    536.1 MiB      0.0 MiB                   intent_name = all_intent_name[-1].split('$$')[0]
  2007                                             intent_confidence = float(all_intent_name[-1].split('$$')[1])
  2008                             
  2009                                             # response["intent"]["name"] = intent_name
  2010    536.1 MiB      0.0 MiB               except Exception as e:
  2011    536.1 MiB      0.0 MiB                   intent_name = response["intent"]["name"]
  2012    536.1 MiB      0.0 MiB                   intent_confidence = float(response["intent"]["confidence"])
  2013                             
  2014    536.1 MiB      0.0 MiB               result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1, final_res,
  2015    536.1 MiB      0.0 MiB                                                                                          agent_id, intent_name,
  2016    536.1 MiB      0.0 MiB                                                                                          response["entities"])
  2017                                     if (new_conversation.chattexts is None):
  2018                                         new_conversation.chattexts = []
  2019                             
  2020                                     new_conversation.chattexts.append(ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  2021                                                                                ExtractedEntities=[
  2022                                                                                    ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  2023                                                                                    for ent in response["entities"]]))
  2024                                     if response["intent"]["name"] == "out_of_scope":
  2025                                         """ Get confirmed fallback case"""
  2026                             
  2027                                         new_conversation.isFallback = True
  2028                                         new_conversation.endDateTime = date_time.now()
  2029                                         duration = new_conversation.endDateTime - new_conversation.startDateTime
  2030                                         duration_in_s = duration.total_seconds()
  2031                                         minutes = int(divmod(duration_in_s, 60)[0])
  2032                                         if (minutes < 1):
  2033                                             new_conversation.duration = str(int(duration_in_s)) + " sec"
  2034                                         else:
  2035                                             new_conversation.duration = str(minutes) + " min"
  2036                             
  2037                                         chattexts = new_conversation.chattexts
  2038                                         chattexts.reverse()
  2039                                         
  2040                                         for chat in chattexts:
  2041                                             
  2042                                             if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  2043                                                 """Change the last chattext which has intentname to isFallbackIntent = True"""
  2044                                                 chat.isFallBackIntent = True
  2045                                                 break
  2046                             
  2047                                         for res in result:
  2048                                             """ Add Rasa response to the history when get confirmed fallback Case"""
  2049                                             new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  2050                             
  2051                                         db.session.commit()
  2052                                         
  2053                                         res = requests.post(chat_url, json={"message": "/restart", "language": language, "agent_id": agent_id,
  2054                                                                             "identifier": sission_id, "Channel": Channel, "sender": sender})
  2055                                         #res.close()
  2056                                         """
  2057                                         deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  2058                                         db.session.delete(deletet_events)
  2059                                         db.session.commit()
  2060                                         """
  2061                                         return jsonify(
  2062                                             {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2063                                              "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence} , "entities": final_entities_result,
  2064                                              "entities1": response["entities"], "text": response["text"]}), 200
  2065                             
  2066                                     for res in result:
  2067                                         new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  2068                             
  2069                                     db.session.add(new_conversation)
  2070                                     db.session.commit()
  2071                                     for final_slot in final_slots_res:
  2072                                         if "Conversation_finished" in final_slot:
  2073                                             if final_slot["Conversation_finished"] == "yes":
  2074                                                 new_conversation.endDateTime = date_time.now()
  2075                                                 duration = new_conversation.endDateTime - new_conversation.startDateTime
  2076                                                 duration_in_s = duration.total_seconds()
  2077                                                 minutes = int(divmod(duration_in_s, 60)[0])
  2078                                                 if (minutes < 1):
  2079                                                     new_conversation.duration = str(int(duration_in_s)) + " sec"
  2080                                                 else:
  2081                                                     new_conversation.duration = str(minutes) + " min"
  2082                                                 db.session.commit()
  2083                                                 res = requests.post(chat_url,
  2084                                                                     json={"message": "/restart", "language": language, "agent_id": agent_id,
  2085                                                                           "identifier": sission_id, "Channel": Channel, "sender": sender})
  2086                                                 """
  2087                                                 deletet_events = events.query.filter_by(sender_id = sender_id).all()
  2088                                                 
  2089                                                 for item in deletet_events:
  2090                                                     db.session.delete(item)
  2091                                                 db.session.commit()
  2092                                                 print("---------------------- Memory Report At the end of externalchat")
  2093                                                 h = hpy()
  2094                                                 print (h.heap())
  2095                                                 """
  2096                                                 #res.close()
  2097                                                 return jsonify(
  2098                                                     {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2099                                                      "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence},
  2100                                                      "entities": final_entities_result, "entities1": response["entities"],
  2101                                                      "text": response["text"]}), 200
  2102                                     """
  2103                                     print("---------------------- Memory Report At the end of externalchat")
  2104                                     h = hpy()
  2105                                     print (h.heap())
  2106                                     """
  2107                                     return jsonify({"story": state_stroy, "conversation_id": new_conversation.id, "reply": result, "slots1": final_res,
  2108                                                     "slots": final_slots_res, "intent": {'name':intent_name,'confidence':intent_confidence}, "entities": final_entities_result,
  2109                                                     "entities1": response["entities"], "text": response["text"]}), 200
  2110                             
  2111                             
  2112    536.1 MiB      0.0 MiB       except Exception as e:
  2113    536.1 MiB      0.0 MiB           db.session.rollback()
  2114    536.1 MiB      0.0 MiB           return jsonify({"message": str(e)}), 400


[2020-04-23 10:03:34,640] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:03:34] "[31m[1mPOST /ExternalChat HTTP/1.1[0m" 400 -
2020-04-23 10:03:47.474794 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [OPTIONS]
2020-04-23 10:03:47.475788%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.6
2020-04-23 10:03:47.475788%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4381364224, percent=65.6, used=8356347904, free=4381364224)
2020-04-23 10:03:47.475788%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:03:47,477] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:03:47] "[37mOPTIONS /ExternalChat HTTP/1.1[0m" 200 -
2020-04-23 10:03:47.727641 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [POST]
2020-04-23 10:03:47.727641%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:10.8
2020-04-23 10:03:47.728637%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4379521024, percent=65.6, used=8358191104, free=4379521024)
2020-04-23 10:03:47.728637%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
text :  is it Dara
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
dara
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    536.0 MiB    536.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    536.0 MiB      0.0 MiB           text = message.text
    88    536.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    536.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    536.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    536.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    536.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    536.0 MiB      0.0 MiB                   low_key = key.lower()
    96    536.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    536.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    536.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    536.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    536.0 MiB      0.0 MiB                   if( singular_key is False):
   103    536.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    536.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    536.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    536.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    536.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    536.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    536.0 MiB      0.0 MiB               entities = old_entities
   114    536.0 MiB      0.0 MiB               words = text.split(' ')
   115    536.0 MiB      0.0 MiB               for w in words:
   116    536.0 MiB      0.0 MiB                   word =w
   117    536.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    536.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    536.0 MiB      0.0 MiB                   if (word_singular is False):
   120    536.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    536.0 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    536.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    536.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    536.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    536.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    536.0 MiB      0.0 MiB                   low_key = key.lower()
   139    536.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    536.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    536.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    536.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    536.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    536.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


text :  is it Dara
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
i
it
dara
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    536.2 MiB    536.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    536.2 MiB      0.0 MiB           text = message.text
    88    536.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    536.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    536.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    536.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    536.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    536.2 MiB      0.0 MiB                   low_key = key.lower()
    96    536.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    536.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    536.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    536.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    536.2 MiB      0.0 MiB                   if( singular_key is False):
   103    536.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    536.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    536.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109    536.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    536.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    536.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    536.2 MiB      0.0 MiB               entities = old_entities
   114    536.2 MiB      0.0 MiB               words = text.split(' ')
   115    536.2 MiB      0.0 MiB               for w in words:
   116    536.2 MiB      0.0 MiB                   word =w
   117    536.2 MiB      0.0 MiB                   word_lower =word.lower()
   118    536.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    536.2 MiB      0.0 MiB                   if (word_singular is False):
   120    536.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    536.2 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    536.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    536.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    536.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    536.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    536.2 MiB      0.0 MiB                   low_key = key.lower()
   139    536.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    536.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    536.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    536.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    536.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    536.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 5978 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'validate': True}, 'events': [{'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625385.1835794}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625385.1506734}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625381.0958836}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625377.0473354}, {'event': 'user', 'input_channel': None, 'message_id': '0eb6a2a0a69c4d6e88afe2cb233b625a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'text': 'is it Dara', 'timestamp': 1587625373.0163822}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587625372.8747287}, {'event': 'session_started', 'timestamp': 1587625372.8747287}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587625372.8737493}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625434.6895568}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625434.6765707}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'hello, How can I assist you?', 'timestamp': 1587625434.6765707}, {'event': 'form', 'name': None, 'timestamp': 1587625432.5886173}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587625432.5886173, 'value': None}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587625432.5886173}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625432.5886173}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587625430.447622, 'value': 'Ask_intent$$0.7804267026676871'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587625430.447622}, {'event': 'user', 'input_channel': None, 'message_id': '54f60c344f1e480f94ef83f4783ad651', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'text': 'is it Dara', 'timestamp': 1587625428.0627418}, {'confidence': 0.513349711894989, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625414.3490658}, {'event': 'user', 'input_channel': None, 'message_id': '0a0c88764f744980a52b53242da50d2a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'text': 'is it Dara', 'timestamp': 1587625414.3370934}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587625414.3370934, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.7804267026676872, 'name': 'Ask_intent'}, {'confidence': 0.2195732973323128, 'name': 'Default welcome intent'}], 'text': 'is it Dara'}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::7e3b73fc80', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Ask_intent$$0.7804267026676871', 'LOC': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Ask_intent$$0.7804267026676871']
----------------------------------------- intent name when access getFormatedReply Ask_intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1625    535.9 MiB    535.9 MiB   @app.route('/ExternalChat', methods=['post'])
  1626                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1627                             @profile
  1628                             def external_chat():
  1629                                 global loadedAgentsMap
  1630    535.9 MiB      0.0 MiB       try:
  1631    535.9 MiB      0.0 MiB           args = request.args
  1632    535.9 MiB      0.0 MiB           if args is not None and "channel" in args:
  1633                                         if "channel" in args:
  1634                                             Channel = args["channel"].capitalize()
  1635                                         if "token" in args:
  1636                                             token = args["token"]
  1637                                         print(token)
  1638                                         print(Channel)
  1639                                         if Channel == "Telegram":
  1640                                             try :
  1641                             
  1642                                                 agent = Agent.query.filter_by(telegram_token=token).first()
  1643                                                 if(agent is None):
  1644                                                     raise ValueError("There is no agent has telegram_token =" + str(token))
  1645                                                 if agent.activate_telegram is False:
  1646                                                     raise ValueError("This agent is not active with telegram")
  1647                             
  1648                                                 agent_id = agent.id
  1649                             
  1650                                                 data = request.get_json('data')
  1651                             
  1652                                                 print("telegram response: " + str(data))
  1653                                                 # we can get chat id https://core.telegram.org/bots/api#chat
  1654                                                 #conversation_id = data['message']['chat']['id']
  1655                                                 conversation_id = None
  1656                                                 sission_id = data['message']["from"]['id']
  1657                                                 sender = str(Channel) + "_" + str(data['message']['chat']['first_name']) + "_" + str(data['message']['chat']['last_name']) + "_" + str(agent_id)
  1658                                                 userMsg = data['message']['text']
  1659                                                 chat_telegram_id = data['message']['chat']['id']
  1660                                                 # should merge with the orginal external chat with some changes
  1661                                                 chat_url = url + "/chatrestart"
  1662                             
  1663                                                 tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(
  1664                                                     sission_id)  # tracker_id + 1
  1665                             
  1666                                                 _agent = Agent.query.get(agent_id)
  1667                                                 if conversation_id is None:
  1668                                                     default_platform_object = Platform.query.filter_by(name=Channel).first()
  1669                                                     if default_platform_object is None:
  1670                                                         raise ValueError("Unfortunately, This channel/platform is not supported")
  1671                                                     else:
  1672                                                         new_conversation = ConversationHistory(startDateTime=date_time.now(),
  1673                                                                                                creationDate=date.today(),
  1674                                                                                                sessionId=sission_id, userId=sender,
  1675                                                                                                agent_id=agent_id,
  1676                                                                                                platform=Channel)
  1677                                                         new_conversation.sessionId = new_conversation.id
  1678                             
  1679                                                 else:
  1680                                                     new_conversation = ConversationHistory.query.get(conversation_id)
  1681                             
  1682                                                 if _agent is None:
  1683                                                     raise ValueError("there is no agent has id =" + str(agent_id))
  1684                             
  1685                                                 if _agent.enableWebDemo == False:
  1686                                                     raise ValueError(
  1687                                                         " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1688                                                 # asyncio.set_event_loop(asyncio.new_event_loop())
  1689                                                 sender_id = tracker_id
  1690                             
  1691                                                 language = _agent.language
  1692                             
  1693                             
  1694                                                 map_key = str(agent_id) + str(language)
  1695                                                 print("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL")
  1696                                                 load_agent_to_map(agent_id, language)
  1697                                                 print("2222222222222222222222")
  1698                             
  1699                                                 """
  1700                                                 # if map_key in loadedAgentsMap:
  1701                                                 if not map_key in loadedAgentsMap:
  1702                                                     respons = train_agent(agent_id, language)
  1703                                                     if not respons[0].status_code == 200:
  1704                                                         return respons
  1705                                                 """
  1706                                                 agent_obj = loadedAgentsMap[map_key]["agent"]
  1707                                                 print("ppppppppppppppppppppppppp")
  1708                             
  1709                                                 # loop1 = asyncio.get_event_loop()
  1710                                                 result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1711                                                 response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1712                                                 if "entities" in response:
  1713                             
  1714                                                     for entity in response["entities"]:
  1715                                                         if entity["extractor"] != "CRFEntityExtractor":
  1716                             
  1717                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1718                                                             if entity_obj is not None:
  1719                                                                 entity["entity"] = entity_obj.name
  1720                             
  1721                                                 state = retrieve_tracker(tracker_id, agent_id, language)
  1722                                                 print("state ------------------------------", state)
  1723                                                 state = state[0].json
  1724                             
  1725                                                 print("state ------------------------------", state)
  1726                             
  1727                                                 state_stroy = retrieve_story(tracker_id, agent_id, language)
  1728                                                 state_stroy = state_stroy.json
  1729                             
  1730                                                 final_res = []
  1731                                                 print("444444444")
  1732                             
  1733                                                 if "entities" in response:
  1734                                                     for entity in response["entities"]:
  1735                                                         if entity["extractor"] != "CRFEntityExtractor":
  1736                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1737                                                             if entity_obj is not None:
  1738                                                                 entity["entity"] = entity_obj.name
  1739                                                 print("5555555555")
  1740                             
  1741                                                 if "events" in state:
  1742                                                     for res in state["events"]:
  1743                                                         if res["event"] == "slot":
  1744                                                             final_res.append({res["name"]: res["value"]})
  1745                                                 print("666666666666")
  1746                             
  1747                                                 if "intent_ranking" in response:
  1748                                                     del response['intent_ranking']
  1749                                                 result = []
  1750                                                 if "name" in response["intent"]:
  1751                                                     try:
  1752                                                         all_intent_name = []
  1753                                                         for slot in final_res:
  1754                                                             if "Current_tracker_intent_name" in slot:
  1755                                                                 all_intent_name.append(slot["Current_tracker_intent_name"])
  1756                                                                 slot["Current_tracker_intent_name"] = \
  1757                                                                 slot["Current_tracker_intent_name"].split('$$')[0]
  1758                                                         print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  1759                                                         intent_name = all_intent_name[-1].split('$$')[0]
  1760                                                         intent_confidence = float(all_intent_name[-1].split('$$')[1])
  1761                             
  1762                                                         # response["intent"]["name"] = intent_name
  1763                                                     except Exception as e:
  1764                                                         intent_name = response["intent"]["name"]
  1765                                                         intent_confidence = float(response["intent"]["confidence"])
  1766                             
  1767                                                     result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1,
  1768                                                                                                                                final_res,
  1769                                                                                                                                agent_id,
  1770                                                                                                                                intent_name,
  1771                                                                                                                                response["entities"])
  1772                                                 if (new_conversation.chattexts is None):
  1773                                                     new_conversation.chattexts = []
  1774                             
  1775                                                 new_conversation.chattexts.append(
  1776                                                     ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  1777                                                              ExtractedEntities=[
  1778                                                                  ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  1779                                                                  for ent in response["entities"]]))
  1780                                                 if response["intent"]["name"] == "out_of_scope":
  1781                                                     """ Get confirmed fallback case"""
  1782                             
  1783                                                     new_conversation.isFallback = True
  1784                                                     new_conversation.endDateTime = date_time.now()
  1785                                                     duration = new_conversation.endDateTime - new_conversation.startDateTime
  1786                                                     duration_in_s = duration.total_seconds()
  1787                                                     minutes = int(divmod(duration_in_s, 60)[0])
  1788                                                     if (minutes < 1):
  1789                                                         new_conversation.duration = str(int(duration_in_s)) + " sec"
  1790                                                     else:
  1791                                                         new_conversation.duration = str(minutes) + " min"
  1792                             
  1793                                                     chattexts = new_conversation.chattexts
  1794                                                     chattexts.reverse()
  1795                                                     print("10000000000000")
  1796                             
  1797                                                     for chat in chattexts:
  1798                                                         print("111111111")
  1799                             
  1800                                                         if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  1801                                                             """Change the last chattext which has intentname to isFallbackIntent = True"""
  1802                                                             chat.isFallBackIntent = True
  1803                                                             break
  1804                             
  1805                                                     for res in result:
  1806                                                         """ Add Rasa response to the history when get confirmed fallback Case"""
  1807                                                         new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  1808                             
  1809                                                     db.session.commit()
  1810                             
  1811                                                     res = requests.post(chat_url,
  1812                                                                         json={"message": "/restart", "language": language, "agent_id": agent_id,
  1813                                                                               "identifier": sission_id, "Channel": Channel, "sender": sender},
  1814                                                                         verify=False)
  1815                                                     res.close()
  1816                                                     """
  1817                                                     deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  1818                                                     db.session.delete(deletet_events)
  1819                                                     db.session.commit()
  1820                                                     """
  1821                             
  1822                                                     telegram_res = send_message_telegram(token,chat_telegram_id,result)
  1823                             
  1824                                                     if telegram_res.status_code == 200:
  1825                                                         return ({}),200
  1826                                                     else:
  1827                                                         return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1828                             
  1829                             
  1830                                                 for res in result:
  1831                                                     new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  1832                             
  1833                                                 db.session.add(new_conversation)
  1834                                                 db.session.commit()
  1835                                                 for final_slot in final_slots_res:
  1836                                                     if "Conversation_finished" in final_slot:
  1837                                                         if final_slot["Conversation_finished"] == "yes":
  1838                                                             new_conversation.endDateTime = date_time.now()
  1839                                                             duration = new_conversation.endDateTime - new_conversation.startDateTime
  1840                                                             duration_in_s = duration.total_seconds()
  1841                                                             minutes = int(divmod(duration_in_s, 60)[0])
  1842                                                             if (minutes < 1):
  1843                                                                 new_conversation.duration = str(int(duration_in_s)) + " sec"
  1844                                                             else:
  1845                                                                 new_conversation.duration = str(minutes) + " min"
  1846                                                             db.session.commit()
  1847                                                             res = requests.post(chat_url,
  1848                                                                                 json={"message": "/restart", "language": language,
  1849                                                                                       "agent_id": agent_id,
  1850                                                                                       "identifier": sission_id, "Channel": Channel,
  1851                                                                                       "sender": sender}, verify=False)
  1852                                                             """
  1853                                                             deletet_events = events.query.filter_by(sender_id = sender_id).all()
  1854                             
  1855                                                             for item in deletet_events:
  1856                                                                 db.session.delete(item)
  1857                                                             db.session.commit()
  1858                                                             print("---------------------- Memory Report At the end of externalchat")
  1859                                                             h = hpy()
  1860                                                             print (h.heap())
  1861                                                             """
  1862                                                             res.close()
  1863                             
  1864                                                             telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1865                             
  1866                                                             if telegram_res.status_code == 200:
  1867                                                                 return ({}), 200
  1868                                                             else:
  1869                                                                 return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1870                             
  1871                             
  1872                                                 """
  1873                                                 print("---------------------- Memory Report At the end of externalchat")
  1874                                                 h = hpy()
  1875                                                 print (h.heap())
  1876                                                 """
  1877                             
  1878                                                 telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1879                             
  1880                                                 if telegram_res.status_code == 200:
  1881                                                     return ({}), 200
  1882                                                 else:
  1883                                                     return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1884                             
  1885                             
  1886                                             except Exception as e:
  1887                                                 return jsonify({"message": str(e)}), 400
  1888                                     else:
  1889                             
  1890    535.9 MiB      0.0 MiB               data = request.get_json('data')
  1891    535.9 MiB      0.0 MiB               token = data['token']
  1892                             
  1893    535.9 MiB      0.0 MiB               try:
  1894    535.9 MiB      0.0 MiB                   decripted_data = jwt.decode(token, app.config['SECRET_KEY'])
  1895                                         except:
  1896                                             return jsonify({'message': 'Token is invalid or expired!'}), 401
  1897                             
  1898    535.9 MiB      0.0 MiB               if not "conversation_id" in data:
  1899                                             conversation_id = None
  1900                                         else:
  1901    535.9 MiB      0.0 MiB                   conversation_id = data["conversation_id"]
  1902                             
  1903    535.9 MiB      0.0 MiB               if not "identifier" in data:
  1904                                             raise ValueError("identifier JSON element is required")
  1905    535.9 MiB      0.0 MiB               if not "Channel" in data:
  1906                                             raise ValueError("Channel JSON element is required")
  1907    535.9 MiB      0.0 MiB               if not "sender" in data:
  1908                                             raise ValueError("sender JSON element is required")
  1909                             
  1910    535.9 MiB      0.0 MiB               Channel = data["Channel"].capitalize()
  1911    535.9 MiB      0.0 MiB               sender = data["sender"]
  1912    535.9 MiB      0.0 MiB               sission_id = data["identifier"]
  1913                             
  1914    535.9 MiB      0.0 MiB               agent_id = decripted_data["agent_id"]
  1915                             
  1916                             
  1917    535.9 MiB      0.0 MiB           chat_url = url + "/chatrestart"
  1918                             
  1919    535.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
  1920                             
  1921                             
  1922    536.0 MiB      0.0 MiB           _agent = Agent.query.get(agent_id)
  1923    536.0 MiB      0.0 MiB           if conversation_id is None:
  1924    536.0 MiB      0.0 MiB               default_platform_object = Platform.query.filter_by(name=Channel).first()
  1925    536.0 MiB      0.0 MiB               if default_platform_object is None:
  1926                                             raise ValueError("Unfortunately, This channel/platform is not supported")
  1927                                         else:
  1928    536.0 MiB      0.0 MiB                   new_conversation = ConversationHistory(startDateTime=date_time.now(), creationDate=date.today(),
  1929    536.0 MiB      0.0 MiB                                                          sessionId=sission_id, userId=data["sender"], agent_id=agent_id,
  1930    536.0 MiB      0.0 MiB                                                          platform=Channel)
  1931    536.0 MiB      0.0 MiB                   new_conversation.sessionId = new_conversation.id
  1932                             
  1933                                     else:
  1934                                         new_conversation = ConversationHistory.query.get(conversation_id)
  1935                             
  1936    536.0 MiB      0.0 MiB           if _agent is None:
  1937                                         raise ValueError("there is no agent has id =" + str(agent_id))
  1938                             
  1939    536.0 MiB      0.0 MiB           if _agent.enableWebDemo == False:
  1940                                         raise ValueError(
  1941                                             " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1942                                     #asyncio.set_event_loop(asyncio.new_event_loop())
  1943    536.0 MiB      0.0 MiB           sender_id = tracker_id
  1944                             
  1945    536.0 MiB      0.0 MiB           language = _agent.language
  1946                             
  1947    536.0 MiB      0.0 MiB           userMsg = data['message']
  1948    536.0 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
  1949    536.0 MiB      0.0 MiB           load_agent_to_map(agent_id,language)
  1950                                     
  1951                                     """
  1952                                     # if map_key in loadedAgentsMap:
  1953                                     if not map_key in loadedAgentsMap:
  1954                                         respons = train_agent(agent_id, language)
  1955                                         if not respons[0].status_code == 200:
  1956                                             return respons
  1957                                     """
  1958    536.0 MiB      0.0 MiB           agent_obj = loadedAgentsMap[map_key]["agent"]
  1959                                     
  1960                                     #loop1 = asyncio.get_event_loop()
  1961    536.2 MiB      0.3 MiB           result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1962    536.2 MiB      0.0 MiB           response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1963    536.2 MiB      0.0 MiB           if "entities" in response:
  1964                             
  1965    536.2 MiB      0.0 MiB               for entity in response["entities"]:
  1966                                             if entity["extractor"] != "CRFEntityExtractor":
  1967                             
  1968                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1969                                                 if entity_obj is not None:
  1970                                                     entity["entity"] = entity_obj.name
  1971                             
  1972    536.2 MiB      0.0 MiB           state = retrieve_tracker(tracker_id, agent_id, language)
  1973    536.2 MiB      0.0 MiB           print("state ------------------------------", state)
  1974    536.2 MiB      0.0 MiB           state = state[0].json
  1975                                     
  1976    536.2 MiB      0.0 MiB           print("state ------------------------------", state)
  1977                             
  1978    536.2 MiB      0.0 MiB           state_stroy = retrieve_story(tracker_id, agent_id, language)
  1979    536.2 MiB      0.0 MiB           state_stroy = state_stroy.json
  1980                             
  1981    536.2 MiB      0.0 MiB           final_res = []
  1982                                     
  1983    536.2 MiB      0.0 MiB           if "entities" in response:
  1984    536.2 MiB      0.0 MiB               for entity in response["entities"]:
  1985                                             if entity["extractor"] != "CRFEntityExtractor":
  1986                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1987                                                 if entity_obj is not None:
  1988                                                     entity["entity"] = entity_obj.name
  1989                                     
  1990    536.2 MiB      0.0 MiB           if "events" in state:
  1991    536.2 MiB      0.0 MiB               for res in state["events"]:
  1992    536.2 MiB      0.0 MiB                   if res["event"] == "slot":
  1993    536.2 MiB      0.0 MiB                       final_res.append({res["name"]: res["value"]})
  1994                                     
  1995    536.2 MiB      0.0 MiB           if "intent_ranking" in response:
  1996    536.2 MiB      0.0 MiB               del response['intent_ranking']
  1997    536.2 MiB      0.0 MiB           result = []
  1998    536.2 MiB      0.0 MiB           if "name" in response["intent"]:
  1999    536.2 MiB      0.0 MiB               try:
  2000    536.2 MiB      0.0 MiB                   all_intent_name = []
  2001    536.2 MiB      0.0 MiB                   for slot in final_res:
  2002    536.2 MiB      0.0 MiB                       if "Current_tracker_intent_name" in slot:
  2003    536.2 MiB      0.0 MiB                           all_intent_name.append(slot["Current_tracker_intent_name"])
  2004    536.2 MiB      0.0 MiB                           slot["Current_tracker_intent_name"] = slot["Current_tracker_intent_name"].split('$$')[0]
  2005    536.2 MiB      0.0 MiB                   print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  2006    536.2 MiB      0.0 MiB                   intent_name = all_intent_name[-1].split('$$')[0]
  2007    536.2 MiB      0.0 MiB                   intent_confidence = float(all_intent_name[-1].split('$$')[1])
  2008                             
  2009                                             # response["intent"]["name"] = intent_name
  2010                                         except Exception as e:
  2011                                             intent_name = response["intent"]["name"]
  2012                                             intent_confidence = float(response["intent"]["confidence"])
  2013                             
  2014    536.2 MiB      0.0 MiB               result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1, final_res,
  2015    536.2 MiB      0.0 MiB                                                                                          agent_id, intent_name,
  2016    536.2 MiB      0.0 MiB                                                                                          response["entities"])
  2017    536.2 MiB      0.0 MiB           if (new_conversation.chattexts is None):
  2018                                         new_conversation.chattexts = []
  2019                             
  2020    536.2 MiB      0.0 MiB           new_conversation.chattexts.append(ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  2021                                                                                ExtractedEntities=[
  2022    536.2 MiB      0.0 MiB                                                          ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  2023    536.2 MiB      0.0 MiB                                                          for ent in response["entities"]]))
  2024    536.2 MiB      0.0 MiB           if response["intent"]["name"] == "out_of_scope":
  2025                                         """ Get confirmed fallback case"""
  2026                             
  2027                                         new_conversation.isFallback = True
  2028                                         new_conversation.endDateTime = date_time.now()
  2029                                         duration = new_conversation.endDateTime - new_conversation.startDateTime
  2030                                         duration_in_s = duration.total_seconds()
  2031                                         minutes = int(divmod(duration_in_s, 60)[0])
  2032                                         if (minutes < 1):
  2033                                             new_conversation.duration = str(int(duration_in_s)) + " sec"
  2034                                         else:
  2035                                             new_conversation.duration = str(minutes) + " min"
  2036                             
  2037                                         chattexts = new_conversation.chattexts
  2038                                         chattexts.reverse()
  2039                                         
  2040                                         for chat in chattexts:
  2041                                             
  2042                                             if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  2043                                                 """Change the last chattext which has intentname to isFallbackIntent = True"""
  2044                                                 chat.isFallBackIntent = True
  2045                                                 break
  2046                             
  2047                                         for res in result:
  2048                                             """ Add Rasa response to the history when get confirmed fallback Case"""
  2049                                             new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  2050                             
  2051                                         db.session.commit()
  2052                                         
  2053                                         res = requests.post(chat_url, json={"message": "/restart", "language": language, "agent_id": agent_id,
  2054                                                                             "identifier": sission_id, "Channel": Channel, "sender": sender})
  2055                                         #res.close()
  2056                                         """
  2057                                         deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  2058                                         db.session.delete(deletet_events)
  2059                                         db.session.commit()
  2060                                         """
  2061                                         return jsonify(
  2062                                             {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2063                                              "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence} , "entities": final_entities_result,
  2064                                              "entities1": response["entities"], "text": response["text"]}), 200
  2065                             
  2066    536.2 MiB      0.0 MiB           for res in result:
  2067    536.2 MiB      0.0 MiB               new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  2068                             
  2069    536.2 MiB      0.0 MiB           db.session.add(new_conversation)
  2070    536.2 MiB      0.0 MiB           db.session.commit()
  2071    536.2 MiB      0.0 MiB           for final_slot in final_slots_res:
  2072    536.2 MiB      0.0 MiB               if "Conversation_finished" in final_slot:
  2073                                             if final_slot["Conversation_finished"] == "yes":
  2074                                                 new_conversation.endDateTime = date_time.now()
  2075                                                 duration = new_conversation.endDateTime - new_conversation.startDateTime
  2076                                                 duration_in_s = duration.total_seconds()
  2077                                                 minutes = int(divmod(duration_in_s, 60)[0])
  2078                                                 if (minutes < 1):
  2079                                                     new_conversation.duration = str(int(duration_in_s)) + " sec"
  2080                                                 else:
  2081                                                     new_conversation.duration = str(minutes) + " min"
  2082                                                 db.session.commit()
  2083                                                 res = requests.post(chat_url,
  2084                                                                     json={"message": "/restart", "language": language, "agent_id": agent_id,
  2085                                                                           "identifier": sission_id, "Channel": Channel, "sender": sender})
  2086                                                 """
  2087                                                 deletet_events = events.query.filter_by(sender_id = sender_id).all()
  2088                                                 
  2089                                                 for item in deletet_events:
  2090                                                     db.session.delete(item)
  2091                                                 db.session.commit()
  2092                                                 print("---------------------- Memory Report At the end of externalchat")
  2093                                                 h = hpy()
  2094                                                 print (h.heap())
  2095                                                 """
  2096                                                 #res.close()
  2097                                                 return jsonify(
  2098                                                     {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2099                                                      "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence},
  2100                                                      "entities": final_entities_result, "entities1": response["entities"],
  2101                                                      "text": response["text"]}), 200
  2102                                     """
  2103                                     print("---------------------- Memory Report At the end of externalchat")
  2104                                     h = hpy()
  2105                                     print (h.heap())
  2106                                     """
  2107    536.2 MiB      0.0 MiB           return jsonify({"story": state_stroy, "conversation_id": new_conversation.id, "reply": result, "slots1": final_res,
  2108    536.2 MiB      0.0 MiB                           "slots": final_slots_res, "intent": {'name':intent_name,'confidence':intent_confidence}, "entities": final_entities_result,
  2109    536.2 MiB      0.0 MiB                           "entities1": response["entities"], "text": response["text"]}), 200
  2110                             
  2111                             
  2112                                 except Exception as e:
  2113                                     db.session.rollback()
  2114                                     return jsonify({"message": str(e)}), 400


[2020-04-23 10:03:55,032] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:03:55] "[37mPOST /ExternalChat HTTP/1.1[0m" 200 -
[2020-04-23 10:38:49,637] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
[2020-04-23 10:39:38,964] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 10:41:44.257503 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 10:41:44.257503%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:5.8
2020-04-23 10:41:44.258502%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4740395008, percent=62.8, used=7997317120, free=4740395008)
2020-04-23 10:41:44.258502%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.258502%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:44,261] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:44.261493 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 10:41:44.261493%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:41:44.261493%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4741120000, percent=62.8, used=7996592128, free=4741120000)
2020-04-23 10:41:44.261493%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.261493%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.263488 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 10:41:44.263488%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:41:44.263488%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4741120000, percent=62.8, used=7996592128, free=4741120000)
2020-04-23 10:41:44.263488%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.264484 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:41:44.264484%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:41:44.264484%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4741120000, percent=62.8, used=7996592128, free=4741120000)
2020-04-23 10:41:44.264484%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:44,262] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 10:41:44,263] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 10:41:44,265] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:44.449991 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 10:41:44.449991%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-23 10:41:44.449991%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4740726784, percent=62.8, used=7996985344, free=4740726784)
2020-04-23 10:41:44.449991%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.449991%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.492875%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:44,520] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 10:41:44,544] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 10:41:44.544734
2020-04-23 10:41:44.569719 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 10:41:44.569719%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.2
2020-04-23 10:41:44.569719%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4740124672, percent=62.8, used=7997587456, free=4740124672)
2020-04-23 10:41:44.570715%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.570715%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.573711%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.577698 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 10:41:44.577698%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:41:44.577698%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4740050944, percent=62.8, used=7997661184, free=4740050944)
2020-04-23 10:41:44.577698%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.583680 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:41:44.583680%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:41:44.583680%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4740050944, percent=62.8, used=7997661184, free=4740050944)
2020-04-23 10:41:44.583680%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:44,586] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:44.589666%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:44.600637%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:44,603] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 10:41:44,607] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:44] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:46.577283 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 10:41:46.577283%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.4
2020-04-23 10:41:46.577283%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4726149120, percent=62.9, used=8011563008, free=4726149120)
2020-04-23 10:41:46.577283%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:46.577283%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:46.585292%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2646 2646
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    384.5 MiB    384.5 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    384.5 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    384.5 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    384.5 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    384.5 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    384.5 MiB      0.0 MiB                   return pickle.load(f)


2020-04-23 10:41:59.554981 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 10:41:59.554981%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:69.7
2020-04-23 10:41:59.554981%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4048945152, percent=68.2, used=8688766976, free=4048945152)
2020-04-23 10:41:59.554981%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.554981%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:59,556] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:59] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:59.588891 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 10:41:59.588891%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 10:41:59.588891%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4042854400, percent=68.3, used=8694857728, free=4042854400)
2020-04-23 10:41:59.588891%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.588891%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:59,590] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:59] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:59.609834 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 10:41:59.609834%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 10:41:59.609834%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4042854400, percent=68.3, used=8694857728, free=4042854400)
2020-04-23 10:41:59.609834%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:59,610] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:59] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:41:59.636762 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:41:59.636762%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:87.5
2020-04-23 10:41:59.636762%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4046188544, percent=68.2, used=8691523584, free=4046188544)
2020-04-23 10:41:59.636762%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:59,637] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:59] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:59.782378 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 10:41:59.782378%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.6
2020-04-23 10:41:59.783369%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4046200832, percent=68.2, used=8691511296, free=4046200832)
2020-04-23 10:41:59.783369%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.784367%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.790350%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:59,862] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:59] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:41:59.901056 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 10:41:59.901056%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:90.6
2020-04-23 10:41:59.902053%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4046159872, percent=68.2, used=8691552256, free=4046159872)
2020-04-23 10:41:59.902053%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.902053%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.924997 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 10:41:59.924997%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 10:41:59.924997%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4046159872, percent=68.2, used=8691552256, free=4046159872)
2020-04-23 10:41:59.924997%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.940948%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.948928 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:41:59.948928%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-23 10:41:59.948928%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4046159872, percent=68.2, used=8691552256, free=4046159872)
2020-04-23 10:41:59.948928%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:41:59.956905%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:41:59,992] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:41:59] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:00.004779%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:00,007] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:00] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 10:42:00,012] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:00] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    418.9 MiB    418.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    418.9 MiB      0.0 MiB           entity = {"value": value,
    75    418.9 MiB      0.0 MiB                     "start": start,
    76    418.9 MiB      0.0 MiB                     "end": end,
    77    418.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    418.9 MiB      0.0 MiB                     "entity": name,
    79    418.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    418.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    418.9 MiB    418.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    418.9 MiB      0.0 MiB           text = message.text
    88    418.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    418.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    418.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    418.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    418.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    418.9 MiB      0.0 MiB                   low_key = key.lower()
    96    418.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    418.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    418.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    418.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    418.9 MiB      0.0 MiB                   if( singular_key is False):
   103    418.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    418.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    418.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    418.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    418.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    418.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    418.9 MiB      0.0 MiB               entities = old_entities
   114    418.9 MiB      0.0 MiB               words = text.split(' ')
   115    418.9 MiB      0.0 MiB               for w in words:
   116    418.9 MiB      0.0 MiB                   word =w
   117    418.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    418.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    418.9 MiB      0.0 MiB                   if (word_singular is False):
   120    418.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    418.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    418.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    418.9 MiB      0.0 MiB                       start = text.find(w)
   128    418.9 MiB      0.0 MiB                       end = start + len(w)
   129    418.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    418.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    418.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    418.9 MiB      0.0 MiB                   low_key = key.lower()
   139    418.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    418.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    418.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    418.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    418.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    418.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.0 MiB    419.0 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.0 MiB      0.0 MiB           entity = {"value": value,
    75    419.0 MiB      0.0 MiB                     "start": start,
    76    419.0 MiB      0.0 MiB                     "end": end,
    77    419.0 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.0 MiB      0.0 MiB                     "entity": name,
    79    419.0 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.0 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.0 MiB    419.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.0 MiB      0.0 MiB           text = message.text
    88    419.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.0 MiB      0.0 MiB                   low_key = key.lower()
    96    419.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.0 MiB      0.0 MiB                   if( singular_key is False):
   103    419.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.0 MiB      0.0 MiB               entities = old_entities
   114    419.0 MiB      0.0 MiB               words = text.split(' ')
   115    419.0 MiB      0.0 MiB               for w in words:
   116    419.0 MiB      0.0 MiB                   word =w
   117    419.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.0 MiB      0.0 MiB                   if (word_singular is False):
   120    419.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.0 MiB      0.0 MiB                       start = text.find(w)
   128    419.0 MiB      0.0 MiB                       end = start + len(w)
   129    419.0 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.0 MiB      0.0 MiB                   low_key = key.lower()
   139    419.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 14401 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}], 'followup_action': None, 'latest_action_name': 'action_SetContextSlots', 'latest_event_time': 1587627723.7060397, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}], 'followup_action': None, 'latest_action_name': 'action_SetContextSlots', 'latest_event_time': 1587627723.7060397, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 10:42:09,850] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:09] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 10:42:09,855] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2646, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9744635224342346, 'name': 'hci_form'}, {'confidence': 0.9587612152099609, 'name': 'action_SetContextSlots'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
9
1
Content-Type: multipart/mixed; boundary="===============3763602359842164558=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============3763602359842164558==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 31.1 percent

- RAM Usage : 66.8 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 9
--===============3763602359842164558==--

2020-04-23 10:42:12.072130 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [OPTIONS]
2020-04-23 10:42:12.072130%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.6
2020-04-23 10:42:12.073127%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4230926336, percent=66.8, used=8506785792, free=4230926336)
2020-04-23 10:42:12.073127%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:12,075] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:12] "[37mOPTIONS /user/1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:12.082106 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:42:12.082106%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:42:12.082106%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4230971392, percent=66.8, used=8506740736, free=4230971392)
2020-04-23 10:42:12.082106%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:12,087] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:12] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:12.322316 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [GET]
2020-04-23 10:42:12.322316%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 10:42:12.322316%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4231979008, percent=66.8, used=8505733120, free=4231979008)
2020-04-23 10:42:12.322316%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:12,331] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:12] "[37mGET /user/1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:12.381802 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:42:12.381802%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.3
2020-04-23 10:42:12.381802%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4231987200, percent=66.8, used=8505724928, free=4231987200)
2020-04-23 10:42:12.381802%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:12.386763%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:12,390] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:12] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
Email sent!
2020-04-23 10:42:38.600960 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/logout [OPTIONS]
2020-04-23 10:42:38.600960%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.8
2020-04-23 10:42:38.600960%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489670656, percent=64.8, used=8248041472, free=4489670656)
2020-04-23 10:42:38.600960%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:38,601] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:38] "[37mOPTIONS /logout HTTP/1.1[0m" 200 -
2020-04-23 10:42:38.853195 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/logout [POST]
2020-04-23 10:42:38.853195%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.7
2020-04-23 10:42:38.853195%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489674752, percent=64.8, used=8248037376, free=4489674752)
2020-04-23 10:42:38.853195%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:38.859176%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:38,862] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:38] "[37mPOST /logout HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.010097 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-23 10:42:43.010097%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.1
2020-04-23 10:42:43.010097%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4467290112, percent=64.9, used=8270422016, free=4467290112)
2020-04-23 10:42:43.010097%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,012] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.317606 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-23 10:42:43.317606%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.7
2020-04-23 10:42:43.317606%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4467294208, percent=64.9, used=8270417920, free=4467294208)
2020-04-23 10:42:43.317606%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    420.2 MiB    420.2 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    420.2 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    420.2 MiB      0.0 MiB       auth = data
  1482    420.2 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    420.3 MiB      0.1 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    420.3 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    420.3 MiB      0.0 MiB       if verify_password(auth["password"], _user.password):
  1491    420.3 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    420.3 MiB      0.0 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    420.3 MiB      0.0 MiB           agent_obj = {}
  1495    420.3 MiB      0.0 MiB           for agent in _user.agents:
  1496    420.3 MiB      0.0 MiB               if agent.isDefault == True:
  1497    420.3 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    420.3 MiB      0.0 MiB                                "name": agent.name}
  1499    420.3 MiB      0.0 MiB                   break
  1500    420.3 MiB      0.0 MiB           return jsonify(
  1501    420.3 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    420.3 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-23 10:42:43,394] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.568178 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 10:42:43.568178%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-23 10:42:43.568178%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4466995200, percent=64.9, used=8270716928, free=4466995200)
2020-04-23 10:42:43.568178%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:43.568178%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,569] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.743078 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 10:42:43.743078%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.3
2020-04-23 10:42:43.743078%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4466384896, percent=64.9, used=8271327232, free=4466384896)
2020-04-23 10:42:43.743078%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:43.743078%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,746] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.750050 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 10:42:43.750050%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:42:43.750050%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4466171904, percent=64.9, used=8271540224, free=4466171904)
2020-04-23 10:42:43.751050%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,752] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.756034 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 10:42:43.756034%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 10:42:43.756034%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4466176000, percent=64.9, used=8271536128, free=4466176000)
2020-04-23 10:42:43.756034%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,758] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.766008 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:42:43.766008%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:42:43.766008%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4473315328, percent=64.9, used=8264396800, free=4473315328)
2020-04-23 10:42:43.766008%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,767] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.768999 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 10:42:43.768999%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:42:43.769996%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4475830272, percent=64.9, used=8261881856, free=4475830272)
2020-04-23 10:42:43.769996%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:43.769996%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:43.772991%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,781] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:43.875472 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 10:42:43.875472%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.1
2020-04-23 10:42:43.875472%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476825600, percent=64.9, used=8260886528, free=4476825600)
2020-04-23 10:42:43.876473%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:43.876473%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:43.880485%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:43,887] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:43] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:44.053086 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 10:42:44.053086%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.8
2020-04-23 10:42:44.053086%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4471914496, percent=64.9, used=8265797632, free=4471914496)
2020-04-23 10:42:44.053086%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:44.056108%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:44.066050 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 10:42:44.066050%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:42:44.067075%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4471914496, percent=64.9, used=8265797632, free=4471914496)
2020-04-23 10:42:44.067075%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:44,067] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:44] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
[2020-04-23 10:42:44,068] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:44] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:44.073031 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:42:44.073031%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:42:44.073031%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4471836672, percent=64.9, used=8265875456, free=4471836672)
2020-04-23 10:42:44.073031%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:44.079016%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:44,085] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:44] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:47.440843 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [OPTIONS]
2020-04-23 10:42:47.440843%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.4
2020-04-23 10:42:47.440843%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4470689792, percent=64.9, used=8267022336, free=4470689792)
2020-04-23 10:42:47.440843%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:47,441] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:47] "[37mOPTIONS /user/1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:47.750089 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [GET]
2020-04-23 10:42:47.750089%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 10:42:47.750089%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4470722560, percent=64.9, used=8266989568, free=4470722560)
2020-04-23 10:42:47.750089%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:47.763055 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:42:47.763055%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:42:47.764050%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4470722560, percent=64.9, used=8266989568, free=4470722560)
2020-04-23 10:42:47.764050%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:47,765] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:47] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
[2020-04-23 10:42:47,766] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:47] "[37mGET /user/1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:47.997997 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:42:47.997997%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.3
2020-04-23 10:42:47.997997%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4472750080, percent=64.9, used=8264962048, free=4472750080)
2020-04-23 10:42:47.997997%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:48.001956%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:48,007] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:48] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:52.685292 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:42:52.685292%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.0
2020-04-23 10:42:52.685292%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4496850944, percent=64.7, used=8240861184, free=4496850944)
2020-04-23 10:42:52.685292%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:52,687] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:52] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:52.994489 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 10:42:52.994489%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.8
2020-04-23 10:42:52.994489%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4484202496, percent=64.8, used=8253509632, free=4484202496)
2020-04-23 10:42:52.994489%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:52,995] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:52] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:52.999475 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:42:52.999475%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:42:52.999475%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4484202496, percent=64.8, used=8253509632, free=4484202496)
2020-04-23 10:42:52.999475%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:53.006469%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:53.010446 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:42:53.010446%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-23 10:42:53.010446%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4484202496, percent=64.8, used=8253509632, free=4484202496)
2020-04-23 10:42:53.010446%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:53,011] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:53] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
[2020-04-23 10:42:53,014] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:53] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:42:53.243336 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 10:42:53.243336%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.9
2020-04-23 10:42:53.243336%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4520083456, percent=64.5, used=8217628672, free=4520083456)
2020-04-23 10:42:53.243336%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:53.246327%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:53,252] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:53] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 10:42:53.305196 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:42:53.305196%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:81.2
2020-04-23 10:42:53.305196%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4520914944, percent=64.5, used=8216797184, free=4520914944)
2020-04-23 10:42:53.306169%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:42:53.309159%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:42:53,312] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:42:53] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.244977 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [OPTIONS]
2020-04-23 10:43:09.244977%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.7
2020-04-23 10:43:09.244977%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585709568, percent=64.0, used=8152002560, free=4585709568)
2020-04-23 10:43:09.244977%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,245] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.248966 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/uniqueUsers [OPTIONS]
2020-04-23 10:43:09.248966%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:43:09.248966%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585680896, percent=64.0, used=8152031232, free=4585680896)
2020-04-23 10:43:09.248966%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,250] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /uniqueUsers HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.255952 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/sessionNumbers [OPTIONS]
2020-04-23 10:43:09.255952%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:43:09.256944%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585713664, percent=64.0, used=8151998464, free=4585713664)
2020-04-23 10:43:09.256944%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,258] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /sessionNumbers HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.260934 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/FallBackAfterIntents [OPTIONS]
2020-04-23 10:43:09.260934%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 10:43:09.261931%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585680896, percent=64.0, used=8152031232, free=4585680896)
2020-04-23 10:43:09.261931%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,262] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /FallBackAfterIntents HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.265920 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/matchedIntents [OPTIONS]
2020-04-23 10:43:09.265920%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:43:09.265920%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585680896, percent=64.0, used=8152031232, free=4585680896)
2020-04-23 10:43:09.265920%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,266] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /matchedIntents HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.267913 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/matchedEntities [OPTIONS]
2020-04-23 10:43:09.267913%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:43:09.267913%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585680896, percent=64.0, used=8152031232, free=4585680896)
2020-04-23 10:43:09.267913%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,268] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /matchedEntities HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.555361 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:43:09.555361%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.9
2020-04-23 10:43:09.556359%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586156032, percent=64.0, used=8151556096, free=4586156032)
2020-04-23 10:43:09.557350%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,561] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.564329 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/platform [GET]
2020-04-23 10:43:09.564329%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:43:09.564329%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586143744, percent=64.0, used=8151568384, free=4586143744)
2020-04-23 10:43:09.564329%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.576300 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/uniqueUsers [POST]
2020-04-23 10:43:09.576300%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 10:43:09.576300%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586143744, percent=64.0, used=8151568384, free=4586143744)
2020-04-23 10:43:09.576300%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.576300%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.581316 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/sessionNumbers [POST]
2020-04-23 10:43:09.581316%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 10:43:09.581316%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586143744, percent=64.0, used=8151568384, free=4586143744)
2020-04-23 10:43:09.581316%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.581316%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.583310%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,584] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mGET /platform?q={%22filters%22:[]}&results_per_page=100000&page=1 HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.586273%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.592254 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/FallBackAfterIntents [POST]
2020-04-23 10:43:09.592254%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 10:43:09.592254%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586135552, percent=64.0, used=8151576576, free=4586135552)
2020-04-23 10:43:09.592254%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.592254%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-22
2020-04-23
[2020-04-23 10:43:09,616] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mPOST /sessionNumbers HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.625167%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.631150 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/matchedIntents [POST]
2020-04-23 10:43:09.631150%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:83.3
2020-04-23 10:43:09.631150%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586356736, percent=64.0, used=8151355392, free=4586356736)
2020-04-23 10:43:09.631150%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.632147%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,642] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mPOST /FallBackAfterIntents HTTP/1.1[0m" 200 -
[2020-04-23 10:43:09,646] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mPOST /uniqueUsers HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.649102%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,664] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mPOST /matchedIntents HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.866139 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/matchedEntities [POST]
2020-04-23 10:43:09.866139%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.8
2020-04-23 10:43:09.866139%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586561536, percent=64.0, used=8151150592, free=4586561536)
2020-04-23 10:43:09.866139%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.866139%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.869131%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:09.892068 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:43:09.892068%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.0
2020-04-23 10:43:09.893064%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4586561536, percent=64.0, used=8151150592, free=4586561536)
2020-04-23 10:43:09.893064%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,895] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mPOST /matchedEntities HTTP/1.1[0m" 200 -
2020-04-23 10:43:09.898052%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:09,902] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:09] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 10:43:12.679824 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [OPTIONS]
2020-04-23 10:43:12.679824%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.1
2020-04-23 10:43:12.679824%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4542730240, percent=64.3, used=8194981888, free=4542730240)
2020-04-23 10:43:12.679824%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:12,680] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:12] "[37mOPTIONS /user/1 HTTP/1.1[0m" 200 -
2020-04-23 10:43:12.989665 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [GET]
2020-04-23 10:43:12.989665%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.3
2020-04-23 10:43:12.989665%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4542599168, percent=64.3, used=8195112960, free=4542599168)
2020-04-23 10:43:12.989665%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:12.994650 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 10:43:12.994650%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 10:43:12.994650%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4542599168, percent=64.3, used=8195112960, free=4542599168)
2020-04-23 10:43:12.994650%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:12,995] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:12] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
[2020-04-23 10:43:13,004] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:13] "[37mGET /user/1 HTTP/1.1[0m" 200 -
2020-04-23 10:43:13.239558 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 10:43:13.239558%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.3
2020-04-23 10:43:13.239558%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4542595072, percent=64.3, used=8195117056, free=4542595072)
2020-04-23 10:43:13.239558%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:43:13.242550%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:43:13,246] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:43:13] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
[2020-04-23 10:46:56,877] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 10:47:22.171445 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-23 10:47:22.171445%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-23 10:47:22.171445%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3980849152, percent=68.7, used=8756862976, free=3980849152)
2020-04-23 10:47:22.171445%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:47:22,455] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 10:47:22.455685
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    125.8 MiB    125.8 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    125.8 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    125.8 MiB      0.0 MiB       auth = data
  1482    125.8 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    126.1 MiB      0.3 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    126.1 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    126.3 MiB      0.2 MiB       if verify_password(auth["password"], _user.password):
  1491    126.3 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    126.3 MiB      0.1 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    126.3 MiB      0.0 MiB           agent_obj = {}
  1495    126.4 MiB      0.0 MiB           for agent in _user.agents:
  1496    126.4 MiB      0.0 MiB               if agent.isDefault == True:
  1497    126.4 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    126.4 MiB      0.0 MiB                                "name": agent.name}
  1499    126.4 MiB      0.0 MiB                   break
  1500    126.4 MiB      0.0 MiB           return jsonify(
  1501    126.4 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    126.4 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-23 10:47:22,501] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:47:22] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-23 10:47:24.488576 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 10:47:24.488576%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.9
2020-04-23 10:47:24.488576%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3948662784, percent=69.0, used=8789049344, free=3948662784)
2020-04-23 10:47:24.489572%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:47:24.489572%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:47:24.499545%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2647 2647
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    384.6 MiB    384.6 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    384.6 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    384.6 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    384.6 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    384.6 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    384.6 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.9 MiB    419.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.9 MiB      0.0 MiB           entity = {"value": value,
    75    419.9 MiB      0.0 MiB                     "start": start,
    76    419.9 MiB      0.0 MiB                     "end": end,
    77    419.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.9 MiB      0.0 MiB                     "entity": name,
    79    419.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.9 MiB    419.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.9 MiB      0.0 MiB           text = message.text
    88    419.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.9 MiB      0.0 MiB                   low_key = key.lower()
    96    419.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.9 MiB      0.0 MiB                   if( singular_key is False):
   103    419.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.9 MiB      0.0 MiB               entities = old_entities
   114    419.9 MiB      0.0 MiB               words = text.split(' ')
   115    419.9 MiB      0.0 MiB               for w in words:
   116    419.9 MiB      0.0 MiB                   word =w
   117    419.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.9 MiB      0.0 MiB                   if (word_singular is False):
   120    419.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.9 MiB      0.0 MiB                       start = text.find(w)
   128    419.9 MiB      0.0 MiB                       end = start + len(w)
   129    419.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.9 MiB      0.0 MiB                   low_key = key.lower()
   139    419.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.9 MiB    419.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.9 MiB      0.0 MiB           entity = {"value": value,
    75    419.9 MiB      0.0 MiB                     "start": start,
    76    419.9 MiB      0.0 MiB                     "end": end,
    77    419.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.9 MiB      0.0 MiB                     "entity": name,
    79    419.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.9 MiB    419.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.9 MiB      0.0 MiB           text = message.text
    88    419.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.9 MiB      0.0 MiB                   low_key = key.lower()
    96    419.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.9 MiB      0.0 MiB                   if( singular_key is False):
   103    419.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.9 MiB      0.0 MiB               entities = old_entities
   114    419.9 MiB      0.0 MiB               words = text.split(' ')
   115    419.9 MiB      0.0 MiB               for w in words:
   116    419.9 MiB      0.0 MiB                   word =w
   117    419.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.9 MiB      0.0 MiB                   if (word_singular is False):
   120    419.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.9 MiB      0.0 MiB                       start = text.find(w)
   128    419.9 MiB      0.0 MiB                       end = start + len(w)
   129    419.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.9 MiB      0.0 MiB                   low_key = key.lower()
   139    419.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 15629 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587628053.8079948, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587628053.8079948, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 10:47:33,936] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:47:33] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 10:47:33,940] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2647, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9587612152099609, 'name': 'action_SetContextSlots'}, {'confidence': 0.9505501389503479, 'name': 'action_listen'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
10
1
Content-Type: multipart/mixed; boundary="===============3793483303696103319=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============3793483303696103319==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 36.6 percent

- RAM Usage : 71.6 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 10
--===============3793483303696103319==--

2020-04-23 10:47:36.129783 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [DELETE]
2020-04-23 10:47:36.130780%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.0
2020-04-23 10:47:36.130780%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3589488640, percent=71.8, used=9148223488, free=3589488640)
2020-04-23 10:47:36.130780%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:47:36.133802%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
Email sent!
[2020-04-23 10:47:51,942] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:47:51] "[31m[1mDELETE /user/1 HTTP/1.1[0m" 400 -
[2020-04-23 10:48:23,995] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 10:48:32.362800 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [DELETE]
2020-04-23 10:48:32.362800%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.6
2020-04-23 10:48:32.362800%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3907649536, percent=69.3, used=8830062592, free=3907649536)
2020-04-23 10:48:32.362800%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:48:32.386739%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:48:33,125] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 10:48:33.124769
2020-04-23 10:48:35.157042 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 10:48:35.157042%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.6
2020-04-23 10:48:35.157042%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3886141440, percent=69.5, used=8851570688, free=3886141440)
2020-04-23 10:48:35.157042%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:48:35.157042%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:48:35.167013%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2648 2648
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    449.1 MiB    449.1 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    449.1 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    449.1 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    449.1 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    449.1 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    449.1 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    481.3 MiB    481.3 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    481.3 MiB      0.0 MiB           entity = {"value": value,
    75    481.3 MiB      0.0 MiB                     "start": start,
    76    481.3 MiB      0.0 MiB                     "end": end,
    77    481.3 MiB      0.0 MiB                     "confidence": 1.0,
    78    481.3 MiB      0.0 MiB                     "entity": name,
    79    481.3 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    481.3 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    481.3 MiB    481.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    481.3 MiB      0.0 MiB           text = message.text
    88    481.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    481.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    481.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    481.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    481.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    481.3 MiB      0.0 MiB                   low_key = key.lower()
    96    481.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    481.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    481.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    481.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    481.3 MiB      0.0 MiB                   if( singular_key is False):
   103    481.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    481.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    481.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109    481.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    481.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    481.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    481.3 MiB      0.0 MiB               entities = old_entities
   114    481.3 MiB      0.0 MiB               words = text.split(' ')
   115    481.3 MiB      0.0 MiB               for w in words:
   116    481.3 MiB      0.0 MiB                   word =w
   117    481.3 MiB      0.0 MiB                   word_lower =word.lower()
   118    481.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    481.3 MiB      0.0 MiB                   if (word_singular is False):
   120    481.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    481.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    481.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    481.3 MiB      0.0 MiB                       start = text.find(w)
   128    481.3 MiB      0.0 MiB                       end = start + len(w)
   129    481.3 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    481.3 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    481.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    481.3 MiB      0.0 MiB                   low_key = key.lower()
   139    481.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    481.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    481.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    481.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    481.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    481.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


[2020-04-23 10:48:55,149] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:48:55] "[31m[1mDELETE /user/1 HTTP/1.1[0m" 400 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    481.8 MiB    481.8 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    481.8 MiB      0.0 MiB           entity = {"value": value,
    75    481.8 MiB      0.0 MiB                     "start": start,
    76    481.8 MiB      0.0 MiB                     "end": end,
    77    481.8 MiB      0.0 MiB                     "confidence": 1.0,
    78    481.8 MiB      0.0 MiB                     "entity": name,
    79    481.8 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    481.8 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    481.8 MiB    481.8 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    481.8 MiB      0.0 MiB           text = message.text
    88    481.8 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    481.8 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    481.8 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    481.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    481.8 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    481.8 MiB      0.0 MiB                   low_key = key.lower()
    96    481.8 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    481.8 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    481.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    481.8 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    481.8 MiB      0.0 MiB                   if( singular_key is False):
   103    481.8 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    481.8 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    481.8 MiB      0.0 MiB               old_entities = message.get("entities")
   109    481.8 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    481.8 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    481.8 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    481.8 MiB      0.0 MiB               entities = old_entities
   114    481.8 MiB      0.0 MiB               words = text.split(' ')
   115    481.8 MiB      0.0 MiB               for w in words:
   116    481.8 MiB      0.0 MiB                   word =w
   117    481.8 MiB      0.0 MiB                   word_lower =word.lower()
   118    481.8 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    481.8 MiB      0.0 MiB                   if (word_singular is False):
   120    481.8 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    481.8 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    481.8 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    481.8 MiB      0.0 MiB                       start = text.find(w)
   128    481.8 MiB      0.0 MiB                       end = start + len(w)
   129    481.8 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    481.8 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    481.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    481.8 MiB      0.0 MiB                   low_key = key.lower()
   139    481.8 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    481.8 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    481.8 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    481.8 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    481.8 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    481.8 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 17444 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587628134.63527, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587628134.63527, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 10:49:06,859] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:49:06] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 10:49:06,863] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2648, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9743969440460205, 'name': 'hci_form'}, {'confidence': 0.9791081547737122, 'name': 'action_setIntent_id'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
11
1
Content-Type: multipart/mixed; boundary="===============8177054150926766605=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============8177054150926766605==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 34.6 percent

- RAM Usage : 72.3 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 11
--===============8177054150926766605==--

Email sent!
[2020-04-23 10:50:04,974] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 10:50:18.614784 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [DELETE]
2020-04-23 10:50:18.614784%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.5
2020-04-23 10:50:18.614784%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4051677184, percent=68.2, used=8686034944, free=4051677184)
2020-04-23 10:50:18.614784%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:50:18.634733%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 10:50:19,491] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 10:50:19.491437
2020-04-23 10:50:21.543369 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 10:50:21.543369%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.5
2020-04-23 10:50:21.543369%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4031148032, percent=68.4, used=8706564096, free=4031148032)
2020-04-23 10:50:21.543369%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:50:21.543369%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 10:50:21.554339%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2649 2649
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    447.7 MiB    447.7 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    447.7 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    447.7 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    447.7 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    447.7 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    447.7 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    482.0 MiB    482.0 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    482.0 MiB      0.0 MiB           entity = {"value": value,
    75    482.0 MiB      0.0 MiB                     "start": start,
    76    482.0 MiB      0.0 MiB                     "end": end,
    77    482.0 MiB      0.0 MiB                     "confidence": 1.0,
    78    482.0 MiB      0.0 MiB                     "entity": name,
    79    482.0 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    482.0 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    482.0 MiB    482.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    482.0 MiB      0.0 MiB           text = message.text
    88    482.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    482.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    482.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    482.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    482.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    482.0 MiB      0.0 MiB                   low_key = key.lower()
    96    482.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    482.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    482.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    482.0 MiB      0.1 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    482.0 MiB      0.0 MiB                   if( singular_key is False):
   103    482.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    482.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    482.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    482.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    482.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    482.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    482.0 MiB      0.0 MiB               entities = old_entities
   114    482.0 MiB      0.0 MiB               words = text.split(' ')
   115    482.0 MiB      0.0 MiB               for w in words:
   116    482.0 MiB      0.0 MiB                   word =w
   117    482.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    482.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    482.0 MiB      0.0 MiB                   if (word_singular is False):
   120    482.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    482.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    482.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    482.0 MiB      0.0 MiB                       start = text.find(w)
   128    482.0 MiB      0.0 MiB                       end = start + len(w)
   129    482.0 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    482.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    482.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    482.0 MiB      0.0 MiB                   low_key = key.lower()
   139    482.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    482.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    482.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    482.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    482.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    482.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


[2020-04-23 10:50:40,401] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:50:40] "[31m[1mDELETE /user/1 HTTP/1.1[0m" 400 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    483.1 MiB    483.1 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    483.1 MiB      0.0 MiB           entity = {"value": value,
    75    483.1 MiB      0.0 MiB                     "start": start,
    76    483.1 MiB      0.0 MiB                     "end": end,
    77    483.1 MiB      0.0 MiB                     "confidence": 1.0,
    78    483.1 MiB      0.0 MiB                     "entity": name,
    79    483.1 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    483.1 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    483.1 MiB    483.1 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    483.1 MiB      0.0 MiB           text = message.text
    88    483.1 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    483.1 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    483.1 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    483.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    483.1 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    483.1 MiB      0.0 MiB                   low_key = key.lower()
    96    483.1 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    483.1 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    483.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    483.1 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    483.1 MiB      0.0 MiB                   if( singular_key is False):
   103    483.1 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    483.1 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    483.1 MiB      0.0 MiB               old_entities = message.get("entities")
   109    483.1 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    483.1 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    483.1 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    483.1 MiB      0.0 MiB               entities = old_entities
   114    483.1 MiB      0.0 MiB               words = text.split(' ')
   115    483.1 MiB      0.0 MiB               for w in words:
   116    483.1 MiB      0.0 MiB                   word =w
   117    483.1 MiB      0.0 MiB                   word_lower =word.lower()
   118    483.1 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    483.1 MiB      0.0 MiB                   if (word_singular is False):
   120    483.1 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    483.1 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    483.1 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    483.1 MiB      0.0 MiB                       start = text.find(w)
   128    483.1 MiB      0.0 MiB                       end = start + len(w)
   129    483.1 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    483.1 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    483.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    483.1 MiB      0.0 MiB                   low_key = key.lower()
   139    483.1 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    483.1 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    483.1 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    483.1 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    483.1 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    483.1 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 19055 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587628239.8903096, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}], 'followup_action': None, 'latest_action_name': 'hci_form', 'latest_event_time': 1587628239.8903096, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 10:50:48,040] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 10:50:48] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 10:50:48,044] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2649, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9591927528381348, 'name': 'action_SetContextSlots'}, {'confidence': 0.9746097326278687, 'name': 'hci_form'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
12
1
Content-Type: multipart/mixed; boundary="===============8421639680577383959=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============8421639680577383959==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 34.5 percent

- RAM Usage : 71.1 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 12
--===============8421639680577383959==--

Email sent!
2020-04-23 11:07:18.895154 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:07:18.895154%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.0
2020-04-23 11:07:18.895154%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3953446912, percent=69.0, used=8784265216, free=3953446912)
2020-04-23 11:07:18.895154%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:18.895154%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:18,897] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:18] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 11:07:18.900139 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:07:18.900139%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 11:07:18.900139%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3953418240, percent=69.0, used=8784293888, free=3953418240)
2020-04-23 11:07:18.900139%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:18.900139%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:18,901] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:18] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 11:07:18.913131 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 11:07:18.913131%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 11:07:18.913131%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3953397760, percent=69.0, used=8784314368, free=3953397760)
2020-04-23 11:07:18.913131%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:18,914] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:18] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 11:07:19.144967 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:07:19.144967%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.1
2020-04-23 11:07:19.144967%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3953811456, percent=69.0, used=8783900672, free=3953811456)
2020-04-23 11:07:19.144967%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:19.144967%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:19.147956%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:19,150] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:19] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 11:07:19.202811 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:07:19.202811%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-23 11:07:19.202811%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3953770496, percent=69.0, used=8783941632, free=3953770496)
2020-04-23 11:07:19.202811%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:19.202811%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:19.207797%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:19.211786 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 11:07:19.211786%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 11:07:19.211786%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3953770496, percent=69.0, used=8783941632, free=3953770496)
2020-04-23 11:07:19.211786%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:19.213779%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:19,217] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:19] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 11:07:19,221] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:19] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.118327 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:07:53.118327%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.3
2020-04-23 11:07:53.118327%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987881984, percent=68.7, used=8749830144, free=3987881984)
2020-04-23 11:07:53.118327%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,119] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.165261 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:07:53.165261%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.5
2020-04-23 11:07:53.166259%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987935232, percent=68.7, used=8749776896, free=3987935232)
2020-04-23 11:07:53.166259%%%%%%%%%%%%%%%%%%  Agent ID 42 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.166259%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,168] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mOPTIONS /intentReport/1/15/en?agentId=42 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.173241 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:07:53.173241%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:53.174239%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987902464, percent=68.7, used=8749809664, free=3987902464)
2020-04-23 11:07:53.174239%%%%%%%%%%%%%%%%%%  Agent ID 42 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.174239%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,176] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mOPTIONS /intentReport/1/100000000/en?agentId=42 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.181218 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 11:07:53.182217%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 11:07:53.182217%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987640320, percent=68.7, used=8750071808, free=3987640320)
2020-04-23 11:07:53.182217%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,183] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.186206 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/42 [OPTIONS]
2020-04-23 11:07:53.186206%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:53.186206%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987632128, percent=68.7, used=8750080000, free=3987632128)
2020-04-23 11:07:53.187202%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,188] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mOPTIONS /agent/42 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.369223 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 11:07:53.369223%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:6.1
2020-04-23 11:07:53.369223%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987378176, percent=68.7, used=8750333952, free=3987378176)
2020-04-23 11:07:53.369223%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.372217%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,377] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.424048 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:07:53.424048%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:66.7
2020-04-23 11:07:53.424048%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987341312, percent=68.7, used=8750370816, free=3987341312)
2020-04-23 11:07:53.424048%%%%%%%%%%%%%%%%%%  Agent ID 42 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.424048%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.427039%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,433] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mGET /intentReport/1/15/en?agentId=42 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.474129 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:07:53.474129%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.7
2020-04-23 11:07:53.474129%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987345408, percent=68.7, used=8750366720, free=3987345408)
2020-04-23 11:07:53.474129%%%%%%%%%%%%%%%%%%  Agent ID 42 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.474129%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.477123%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,483] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mGET /intentReport/1/100000000/en?agentId=42 HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.484104 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 11:07:53.484104%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 11:07:53.484104%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987345408, percent=68.7, used=8750366720, free=3987345408)
2020-04-23 11:07:53.484104%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,485] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:07:53.489090 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/42 [GET]
2020-04-23 11:07:53.489090%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:53.489090%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987341312, percent=68.7, used=8750370816, free=3987341312)
2020-04-23 11:07:53.489090%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:53.494076%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:53,502] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:53] "[37mGET /agent/42 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.008110 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:07:56.009105%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-23 11:07:56.009105%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3976110080, percent=68.8, used=8761602048, free=3976110080)
2020-04-23 11:07:56.010095%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,016] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.327097 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 11:07:56.327097%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.0
2020-04-23 11:07:56.327097%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3975151616, percent=68.8, used=8762560512, free=3975151616)
2020-04-23 11:07:56.327097%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.331078%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,336] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.374921 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:07:56.374921%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.3
2020-04-23 11:07:56.376917%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974942720, percent=68.8, used=8762769408, free=3974942720)
2020-04-23 11:07:56.376917%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.376917%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,379] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.382902 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:07:56.382902%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-23 11:07:56.382902%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974930432, percent=68.8, used=8762781696, free=3974930432)
2020-04-23 11:07:56.382902%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.382902%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,383] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.385892 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 11:07:56.385892%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:56.385892%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974922240, percent=68.8, used=8762789888, free=3974922240)
2020-04-23 11:07:56.386891%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,386] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.398857 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 11:07:56.398857%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:56.398857%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974852608, percent=68.8, used=8762859520, free=3974852608)
2020-04-23 11:07:56.398857%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,399] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.580157 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:07:56.580157%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.4
2020-04-23 11:07:56.580157%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974369280, percent=68.8, used=8763342848, free=3974369280)
2020-04-23 11:07:56.580157%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.580157%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.583149%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,587] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.685514 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:07:56.685514%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.6
2020-04-23 11:07:56.685514%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974434816, percent=68.8, used=8763277312, free=3974434816)
2020-04-23 11:07:56.685514%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.685514%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.688507%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:56.692497 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 11:07:56.692497%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:56.692497%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974434816, percent=68.8, used=8763277312, free=3974434816)
2020-04-23 11:07:56.692497%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,694] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.698481 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 11:07:56.698481%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 11:07:56.698481%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3974369280, percent=68.8, used=8763342848, free=3974369280)
2020-04-23 11:07:56.698481%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,704] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:07:56.706459%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:56,713] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:56] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 11:07:58.653746 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:07:58.653746%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.5
2020-04-23 11:07:58.654743%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3972218880, percent=68.8, used=8765493248, free=3972218880)
2020-04-23 11:07:58.654743%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:58,658] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:58] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:07:58.968802 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 11:07:58.968802%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.7
2020-04-23 11:07:58.968802%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971645440, percent=68.8, used=8766066688, free=3971645440)
2020-04-23 11:07:58.968802%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:58.972819%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:58,980] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:58] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.014708 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:07:59.014708%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 11:07:59.014708%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971641344, percent=68.8, used=8766070784, free=3971641344)
2020-04-23 11:07:59.015679%%%%%%%%%%%%%%%%%%  Agent ID 18 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.015679%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,017] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mOPTIONS /intentReport/1/15/en?agentId=18 HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.020664 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:07:59.020664%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:59.020664%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971641344, percent=68.8, used=8766070784, free=3971641344)
2020-04-23 11:07:59.020664%%%%%%%%%%%%%%%%%%  Agent ID 18 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.021662%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,022] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mOPTIONS /intentReport/1/100000000/en?agentId=18 HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.028674 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 11:07:59.028674%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 11:07:59.028674%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971633152, percent=68.8, used=8766078976, free=3971633152)
2020-04-23 11:07:59.028674%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,029] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.031635 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/18 [OPTIONS]
2020-04-23 11:07:59.031635%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:59.031635%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971633152, percent=68.8, used=8766078976, free=3971633152)
2020-04-23 11:07:59.031635%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,032] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mOPTIONS /agent/18 HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.218309 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:07:59.218309%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:2.1
2020-04-23 11:07:59.218309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971633152, percent=68.8, used=8766078976, free=3971633152)
2020-04-23 11:07:59.218309%%%%%%%%%%%%%%%%%%  Agent ID 18 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.218309%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.221273%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,228] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mGET /intentReport/1/15/en?agentId=18 HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.324987 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:07:59.324987%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.4
2020-04-23 11:07:59.325967%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971358720, percent=68.8, used=8766353408, free=3971358720)
2020-04-23 11:07:59.325967%%%%%%%%%%%%%%%%%%  Agent ID 18 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.325967%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.329956%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.331977 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 11:07:59.331977%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:07:59.331977%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971219456, percent=68.8, used=8766492672, free=3971219456)
2020-04-23 11:07:59.331977%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,332] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
[2020-04-23 11:07:59,334] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mGET /intentReport/1/100000000/en?agentId=18 HTTP/1.1[0m" 200 -
2020-04-23 11:07:59.337934 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/18 [GET]
2020-04-23 11:07:59.337934%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 11:07:59.337934%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3971100672, percent=68.8, used=8766611456, free=3971100672)
2020-04-23 11:07:59.337934%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:07:59.345911%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:07:59,350] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:07:59] "[37mGET /agent/18 HTTP/1.1[0m" 200 -
2020-04-23 11:08:00.993559 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:08:00.993559%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.7
2020-04-23 11:08:00.994546%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3964895232, percent=68.9, used=8772816896, free=3964895232)
2020-04-23 11:08:00.994546%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:00,998] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:00] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.310668 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 11:08:01.310668%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:51.9
2020-04-23 11:08:01.310668%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3963969536, percent=68.9, used=8773742592, free=3963969536)
2020-04-23 11:08:01.310668%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.314687%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,320] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.362531 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:08:01.362531%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 11:08:01.362531%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3963604992, percent=68.9, used=8774107136, free=3963604992)
2020-04-23 11:08:01.362531%%%%%%%%%%%%%%%%%%  Agent ID 1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.362531%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,363] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mOPTIONS /intentReport/1/15/en?agentId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.366519 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:08:01.366519%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 11:08:01.367518%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3963604992, percent=68.9, used=8774107136, free=3963604992)
2020-04-23 11:08:01.367518%%%%%%%%%%%%%%%%%%  Agent ID 1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.367518%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,368] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mOPTIONS /intentReport/1/100000000/en?agentId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.374501 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 11:08:01.374501%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:08:01.374501%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3963604992, percent=68.9, used=8774107136, free=3963604992)
2020-04-23 11:08:01.374501%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,376] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.380483 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/1 [OPTIONS]
2020-04-23 11:08:01.380483%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:08:01.380483%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3963604992, percent=68.9, used=8774107136, free=3963604992)
2020-04-23 11:08:01.380483%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,381] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mOPTIONS /agent/1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.559704 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:08:01.559704%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.4
2020-04-23 11:08:01.559704%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3964784640, percent=68.9, used=8772927488, free=3964784640)
2020-04-23 11:08:01.560701%%%%%%%%%%%%%%%%%%  Agent ID 1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.560701%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.562696%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,566] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mGET /intentReport/1/15/en?agentId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.669309 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:08:01.669309%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.4
2020-04-23 11:08:01.669309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3964665856, percent=68.9, used=8773046272, free=3964665856)
2020-04-23 11:08:01.669309%%%%%%%%%%%%%%%%%%  Agent ID 1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.669309%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.676255 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 11:08:01.676255%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:08:01.677262%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3964596224, percent=68.9, used=8773115904, free=3964596224)
2020-04-23 11:08:01.677262%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,677] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.679247%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:01.686228 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/1 [GET]
2020-04-23 11:08:01.686228%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 11:08:01.686228%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3964583936, percent=68.9, used=8773128192, free=3964583936)
2020-04-23 11:08:01.686228%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,691] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mGET /intentReport/1/100000000/en?agentId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:01.694208%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:01,701] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:01] "[37mGET /agent/1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:04.635341 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:08:04.635341%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.4
2020-04-23 11:08:04.635341%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967352832, percent=68.9, used=8770359296, free=3967352832)
2020-04-23 11:08:04.635341%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:04,638] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:04] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:04.946314 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 11:08:04.946314%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.0
2020-04-23 11:08:04.946314%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967287296, percent=68.9, used=8770424832, free=3967287296)
2020-04-23 11:08:04.946314%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:04.949303%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:04,956] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:04] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:08:04.991226 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:08:04.991226%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:63.6
2020-04-23 11:08:04.991226%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967279104, percent=68.9, used=8770433024, free=3967279104)
2020-04-23 11:08:04.991226%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:04.991226%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:04,993] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:04] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:08:04.997178 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:08:04.997178%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:08:04.997178%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967209472, percent=68.9, used=8770502656, free=3967209472)
2020-04-23 11:08:04.997178%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:04.997178%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:04,998] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:04] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:08:05.001166 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 11:08:05.001166%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:08:05.001166%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967213568, percent=68.9, used=8770498560, free=3967213568)
2020-04-23 11:08:05.001166%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:05,004] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:05] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:08:05.009144 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 11:08:05.009144%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 11:08:05.009144%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967213568, percent=68.9, used=8770498560, free=3967213568)
2020-04-23 11:08:05.009144%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:05,010] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:05] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 11:08:05.196416 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:08:05.196416%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:6.1
2020-04-23 11:08:05.196416%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967221760, percent=68.9, used=8770490368, free=3967221760)
2020-04-23 11:08:05.196416%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:05.196416%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:05.199381%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:05,205] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:05] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:08:05.300534 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:08:05.300534%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.2
2020-04-23 11:08:05.300534%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967229952, percent=68.9, used=8770482176, free=3967229952)
2020-04-23 11:08:05.300534%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:05.300534%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:05.306543 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 11:08:05.306543%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 11:08:05.306543%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967229952, percent=68.9, used=8770482176, free=3967229952)
2020-04-23 11:08:05.306543%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:05,307] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:05] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 11:08:05.308512%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:05.311502 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 11:08:05.311502%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:08:05.312499%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3967229952, percent=68.9, used=8770482176, free=3967229952)
2020-04-23 11:08:05.312499%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:08:05.318484%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:08:05,321] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:05] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 11:08:05,324] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:08:05] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 11:17:26,426] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 11:17:32.951477 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [DELETE]
2020-04-23 11:17:32.951477%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.8
2020-04-23 11:17:32.951477%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4099973120, percent=67.8, used=8637739008, free=4099973120)
2020-04-23 11:17:32.951477%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:17:32.975384%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:17:33,817] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 11:17:33.817132
2020-04-23 11:17:35.846731 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 11:17:35.846731%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.7
2020-04-23 11:17:35.846731%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4091498496, percent=67.9, used=8646213632, free=4091498496)
2020-04-23 11:17:35.846731%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:17:35.846731%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:17:35.914555%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2650 2650
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    448.6 MiB    448.6 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    448.6 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    448.6 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    448.6 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    448.6 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    448.6 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    480.7 MiB    480.7 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    480.7 MiB      0.0 MiB           entity = {"value": value,
    75    480.7 MiB      0.0 MiB                     "start": start,
    76    480.7 MiB      0.0 MiB                     "end": end,
    77    480.7 MiB      0.0 MiB                     "confidence": 1.0,
    78    480.7 MiB      0.0 MiB                     "entity": name,
    79    480.7 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    480.7 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    480.7 MiB    480.7 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    480.7 MiB      0.0 MiB           text = message.text
    88    480.7 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    480.7 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    480.7 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    480.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    480.7 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    480.7 MiB      0.0 MiB                   low_key = key.lower()
    96    480.7 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    480.7 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    480.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    480.7 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    480.7 MiB      0.0 MiB                   if( singular_key is False):
   103    480.7 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    480.7 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    480.7 MiB      0.0 MiB               old_entities = message.get("entities")
   109    480.7 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    480.7 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    480.7 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    480.7 MiB      0.0 MiB               entities = old_entities
   114    480.7 MiB      0.0 MiB               words = text.split(' ')
   115    480.7 MiB      0.0 MiB               for w in words:
   116    480.7 MiB      0.0 MiB                   word =w
   117    480.7 MiB      0.0 MiB                   word_lower =word.lower()
   118    480.7 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    480.7 MiB      0.0 MiB                   if (word_singular is False):
   120    480.7 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    480.7 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    480.7 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    480.7 MiB      0.0 MiB                       start = text.find(w)
   128    480.7 MiB      0.0 MiB                       end = start + len(w)
   129    480.7 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    480.7 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    480.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    480.7 MiB      0.0 MiB                   low_key = key.lower()
   139    480.7 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    480.7 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    480.7 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    480.7 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    480.7 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    480.7 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


[2020-04-23 11:17:57,494] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:17:57] "[31m[1mDELETE /user/1 HTTP/1.1[0m" 400 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    480.5 MiB    480.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    480.5 MiB      0.0 MiB           entity = {"value": value,
    75    480.5 MiB      0.0 MiB                     "start": start,
    76    480.5 MiB      0.0 MiB                     "end": end,
    77    480.5 MiB      0.0 MiB                     "confidence": 1.0,
    78    480.5 MiB      0.0 MiB                     "entity": name,
    79    480.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    480.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    480.5 MiB    480.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    480.5 MiB      0.0 MiB           text = message.text
    88    480.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    480.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    480.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    480.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    480.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    480.5 MiB      0.0 MiB                   low_key = key.lower()
    96    480.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    480.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    480.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    480.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    480.5 MiB      0.0 MiB                   if( singular_key is False):
   103    480.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    480.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    480.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    480.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    480.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    480.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    480.5 MiB      0.0 MiB               entities = old_entities
   114    480.5 MiB      0.0 MiB               words = text.split(' ')
   115    480.5 MiB      0.0 MiB               for w in words:
   116    480.5 MiB      0.0 MiB                   word =w
   117    480.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    480.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    480.5 MiB      0.0 MiB                   if (word_singular is False):
   120    480.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    480.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    480.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    480.5 MiB      0.0 MiB                       start = text.find(w)
   128    480.5 MiB      0.0 MiB                       end = start + len(w)
   129    480.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    480.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    480.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    480.5 MiB      0.0 MiB                   low_key = key.lower()
   139    480.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    480.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    480.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    480.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    480.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    480.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 20504 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}, {'confidence': 0.9566252827644348, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.3173795}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587629877.2899194, 'value': 'alive'}, {'confidence': 0.9594601392745972, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.307418}, {'event': 'user', 'input_channel': None, 'message_id': '89a46b598ab64f548f67b74ce294d53a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587629877.2899194}], 'followup_action': None, 'latest_action_name': 'action_SetContextSlots', 'latest_event_time': 1587629877.2899194, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}, {'confidence': 0.9566252827644348, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.3173795}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587629877.2899194, 'value': 'alive'}, {'confidence': 0.9594601392745972, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.307418}, {'event': 'user', 'input_channel': None, 'message_id': '89a46b598ab64f548f67b74ce294d53a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587629877.2899194}], 'followup_action': None, 'latest_action_name': 'action_SetContextSlots', 'latest_event_time': 1587629877.2899194, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 11:18:01,463] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:18:01] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 11:18:01,468] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2650, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9566252827644348, 'name': 'action_listen'}, {'confidence': 0.9594601392745972, 'name': 'action_SetContextSlots'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
13
1
Content-Type: multipart/mixed; boundary="===============2491453324591546302=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============2491453324591546302==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 51.1 percent

- RAM Usage : 71.4 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 13
--===============2491453324591546302==--

Email sent!
[2020-04-23 11:20:02,800] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 11:20:08.291440 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/user/1 [DELETE]
2020-04-23 11:20:08.291440%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.3
2020-04-23 11:20:08.292437%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4069105664, percent=68.1, used=8668606464, free=4069105664)
2020-04-23 11:20:08.292437%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:20:08.327356%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:20:09,349] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 11:20:09.349693
2020-04-23 11:20:11.376641 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 11:20:11.377666%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.4
2020-04-23 11:20:11.377666%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4054589440, percent=68.2, used=8683122688, free=4054589440)
2020-04-23 11:20:11.377666%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:20:11.377666%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:20:11.387611%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2651 2651
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    449.1 MiB    449.1 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    449.1 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    449.1 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    449.1 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    449.1 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    449.1 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    481.2 MiB    481.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    481.2 MiB      0.0 MiB           entity = {"value": value,
    75    481.2 MiB      0.0 MiB                     "start": start,
    76    481.2 MiB      0.0 MiB                     "end": end,
    77    481.2 MiB      0.0 MiB                     "confidence": 1.0,
    78    481.2 MiB      0.0 MiB                     "entity": name,
    79    481.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    481.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    481.2 MiB    481.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    481.2 MiB      0.0 MiB           text = message.text
    88    481.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    481.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    481.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    481.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    481.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    481.2 MiB      0.0 MiB                   low_key = key.lower()
    96    481.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    481.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    481.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    481.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    481.2 MiB      0.0 MiB                   if( singular_key is False):
   103    481.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    481.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    481.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109    481.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    481.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    481.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    481.2 MiB      0.0 MiB               entities = old_entities
   114    481.2 MiB      0.0 MiB               words = text.split(' ')
   115    481.2 MiB      0.0 MiB               for w in words:
   116    481.2 MiB      0.0 MiB                   word =w
   117    481.2 MiB      0.0 MiB                   word_lower =word.lower()
   118    481.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    481.2 MiB      0.0 MiB                   if (word_singular is False):
   120    481.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    481.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    481.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    481.2 MiB      0.0 MiB                       start = text.find(w)
   128    481.2 MiB      0.0 MiB                       end = start + len(w)
   129    481.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    481.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    481.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    481.2 MiB      0.0 MiB                   low_key = key.lower()
   139    481.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    481.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    481.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    481.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    481.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    481.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    481.2 MiB    481.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    481.2 MiB      0.0 MiB           entity = {"value": value,
    75    481.2 MiB      0.0 MiB                     "start": start,
    76    481.2 MiB      0.0 MiB                     "end": end,
    77    481.2 MiB      0.0 MiB                     "confidence": 1.0,
    78    481.2 MiB      0.0 MiB                     "entity": name,
    79    481.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    481.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    481.2 MiB    481.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    481.2 MiB      0.0 MiB           text = message.text
    88    481.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    481.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    481.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    481.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    481.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    481.2 MiB      0.0 MiB                   low_key = key.lower()
    96    481.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    481.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    481.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    481.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    481.2 MiB      0.0 MiB                   if( singular_key is False):
   103    481.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    481.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    481.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109    481.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    481.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    481.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    481.2 MiB      0.0 MiB               entities = old_entities
   114    481.2 MiB      0.0 MiB               words = text.split(' ')
   115    481.2 MiB      0.0 MiB               for w in words:
   116    481.2 MiB      0.0 MiB                   word =w
   117    481.2 MiB      0.0 MiB                   word_lower =word.lower()
   118    481.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    481.2 MiB      0.0 MiB                   if (word_singular is False):
   120    481.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    481.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    481.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    481.2 MiB      0.0 MiB                       start = text.find(w)
   128    481.2 MiB      0.0 MiB                       end = start + len(w)
   129    481.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    481.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    481.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    481.2 MiB      0.0 MiB                   low_key = key.lower()
   139    481.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    481.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    481.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    481.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    481.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    481.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 21729 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}, {'confidence': 0.9566252827644348, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.3173795}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587629877.2899194, 'value': 'alive'}, {'confidence': 0.9594601392745972, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.307418}, {'event': 'user', 'input_channel': None, 'message_id': '89a46b598ab64f548f67b74ce294d53a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587629877.2899194}, {'confidence': 0.9488765597343445, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587630031.2084503}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587630031.203479, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'e5903470c3264159926172ae2794defe', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587630031.203479}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587630031.203479, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}, {'confidence': 0.9566252827644348, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.3173795}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587629877.2899194, 'value': 'alive'}, {'confidence': 0.9594601392745972, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.307418}, {'event': 'user', 'input_channel': None, 'message_id': '89a46b598ab64f548f67b74ce294d53a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587629877.2899194}, {'confidence': 0.9488765597343445, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587630031.2084503}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587630031.203479, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'e5903470c3264159926172ae2794defe', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587630031.203479}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587630031.203479, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 11:20:31,349] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:20:31] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 11:20:31,354] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2651, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9594601392745972, 'name': 'action_SetContextSlots'}, {'confidence': 0.9488765597343445, 'name': 'action_listen'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
14
1
Content-Type: multipart/mixed; boundary="===============3960286728150190640=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============3960286728150190640==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 47.8 percent

- RAM Usage : 70.7 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 14
--===============3960286728150190640==--

[2020-04-23 11:20:31,893] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:20:31] "[31m[1mDELETE /user/1 HTTP/1.1[0m" 400 -
Email sent!
2020-04-23 11:20:41.767288 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:20:41.767288%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.2
2020-04-23 11:20:41.767288%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3531517952, percent=72.3, used=9206194176, free=3531517952)
2020-04-23 11:20:41.767288%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:20:41.767288%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:20:41,769] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:20:41] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:20:41.772275 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:20:41.772275%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 11:20:41.773271%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3531530240, percent=72.3, used=9206181888, free=3531530240)
2020-04-23 11:20:41.773271%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:20:41.773271%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:20:41,774] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:20:41] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:20:41.776263 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:20:41.776263%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:20:41.777259%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3526094848, percent=72.3, used=9211617280, free=3526094848)
2020-04-23 11:20:41.777259%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:20:41,778] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:20:41] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:20:41.787234 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 11:20:41.787234%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:20:41.787234%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3524866048, percent=72.3, used=9212846080, free=3524866048)
2020-04-23 11:20:41.787234%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:20:41,789] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:20:41] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 11:42:32,396] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 11:42:50.491636 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 11:42:50.491636%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.9
2020-04-23 11:42:50.491636%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5230436352, percent=58.9, used=7507275776, free=5230436352)
2020-04-23 11:42:50.491636%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.491636%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:42:50,493] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:42:50.493631 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 11:42:50.493631%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:42:50.493631%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5230370816, percent=58.9, used=7507341312, free=5230370816)
2020-04-23 11:42:50.493631%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.493631%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.495626 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 11:42:50.495626%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:42:50.495626%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5230370816, percent=58.9, used=7507341312, free=5230370816)
2020-04-23 11:42:50.495626%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.496625 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 11:42:50.496625%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:42:50.496625%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5230370816, percent=58.9, used=7507341312, free=5230370816)
2020-04-23 11:42:50.496625%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:42:50,494] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 11:42:50,496] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 11:42:50,497] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 11:42:50.688111 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 11:42:50.688111%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.2
2020-04-23 11:42:50.688111%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5230219264, percent=58.9, used=7507492864, free=5230219264)
2020-04-23 11:42:50.688111%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.688111%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.743962%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:42:50,761] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 11:42:50,772] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 11:42:50.772885
2020-04-23 11:42:50.809785 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 11:42:50.809785%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.4
2020-04-23 11:42:50.809785%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5228859392, percent=58.9, used=7508852736, free=5228859392)
2020-04-23 11:42:50.809785%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.809785%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.812777 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 11:42:50.812777%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:42:50.812777%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5228793856, percent=59.0, used=7508918272, free=5228793856)
2020-04-23 11:42:50.812777%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.814772 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 11:42:50.814772%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 11:42:50.814772%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5228793856, percent=59.0, used=7508918272, free=5228793856)
2020-04-23 11:42:50.815768%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.818762%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:42:50,823] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 11:42:50.828735%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:50.831727%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 11:42:50,841] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 11:42:50,841] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:42:50] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 11:42:52.805120 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 11:42:52.805120%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.3
2020-04-23 11:42:52.805120%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5222735872, percent=59.0, used=7514976256, free=5222735872)
2020-04-23 11:42:52.805120%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:52.805120%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 11:42:52.809102%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2652 2652
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    384.7 MiB    384.7 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    384.7 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    384.7 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    384.7 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    384.7 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    384.7 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.7 MiB    419.7 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.7 MiB      0.0 MiB           entity = {"value": value,
    75    419.7 MiB      0.0 MiB                     "start": start,
    76    419.7 MiB      0.0 MiB                     "end": end,
    77    419.7 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.7 MiB      0.0 MiB                     "entity": name,
    79    419.7 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.7 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.7 MiB    419.7 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.7 MiB      0.0 MiB           text = message.text
    88    419.7 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.7 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.7 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.7 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.7 MiB      0.0 MiB                   low_key = key.lower()
    96    419.7 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.7 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.7 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.7 MiB      0.0 MiB                   if( singular_key is False):
   103    419.7 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.7 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.7 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.7 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.7 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.7 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.7 MiB      0.0 MiB               entities = old_entities
   114    419.7 MiB      0.0 MiB               words = text.split(' ')
   115    419.7 MiB      0.0 MiB               for w in words:
   116    419.7 MiB      0.0 MiB                   word =w
   117    419.7 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.7 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.7 MiB      0.0 MiB                   if (word_singular is False):
   120    419.7 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.7 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.7 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.7 MiB      0.0 MiB                       start = text.find(w)
   128    419.7 MiB      0.0 MiB                       end = start + len(w)
   129    419.7 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.7 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.7 MiB      0.0 MiB                   low_key = key.lower()
   139    419.7 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.7 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.7 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.7 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.7 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.7 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.7 MiB    419.7 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.7 MiB      0.0 MiB           entity = {"value": value,
    75    419.7 MiB      0.0 MiB                     "start": start,
    76    419.7 MiB      0.0 MiB                     "end": end,
    77    419.7 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.7 MiB      0.0 MiB                     "entity": name,
    79    419.7 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.7 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.7 MiB    419.7 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.7 MiB      0.0 MiB           text = message.text
    88    419.7 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.7 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.7 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.7 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.7 MiB      0.0 MiB                   low_key = key.lower()
    96    419.7 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.7 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.7 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.7 MiB      0.0 MiB                   if( singular_key is False):
   103    419.7 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.7 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.7 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.7 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.7 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.7 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.7 MiB      0.0 MiB               entities = old_entities
   114    419.7 MiB      0.0 MiB               words = text.split(' ')
   115    419.7 MiB      0.0 MiB               for w in words:
   116    419.7 MiB      0.0 MiB                   word =w
   117    419.7 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.7 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.7 MiB      0.0 MiB                   if (word_singular is False):
   120    419.7 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.7 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.7 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.7 MiB      0.0 MiB                       start = text.find(w)
   128    419.7 MiB      0.0 MiB                       end = start + len(w)
   129    419.7 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.7 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.7 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.7 MiB      0.0 MiB                   low_key = key.lower()
   139    419.7 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.7 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.7 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.7 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.7 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.7 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 23549 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}, {'confidence': 0.9566252827644348, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.3173795}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587629877.2899194, 'value': 'alive'}, {'confidence': 0.9594601392745972, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.307418}, {'event': 'user', 'input_channel': None, 'message_id': '89a46b598ab64f548f67b74ce294d53a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587629877.2899194}, {'confidence': 0.9488765597343445, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587630031.2084503}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587630031.203479, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'e5903470c3264159926172ae2794defe', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587630031.203479}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0120742}, {'confidence': 0.9568973779678345, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0021057}, {'confidence': 0.974357008934021, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631389.976206}, {'confidence': 0.9798263311386108, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631385.9338634}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587631381.912646, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '7ce82cdd3dad4fe98a4d09bc8b683fa6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587631381.9116485}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587631381.9116485, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0147812}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562515.0236995}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562510.989298}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587562502.953953, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587562506.9686334}, {'event': 'user', 'input_channel': None, 'message_id': 'bc31ec26e72a43db8b3e1c99369c76c3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587562502.953953}, {'event': 'session_started', 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587562502.8253005}, {'confidence': 0.7098808288574219, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623290.4917884}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623290.4887953, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '855fb688d08c4e7b98fa808f4e855fc3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623290.4887953}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6073806}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623483.5853152}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623487.6043842}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623479.5701632, 'value': 'alive'}, {'confidence': 0.9580831527709961, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8349974}, {'confidence': 0.9557395577430725, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623404.8419821}, {'event': 'user', 'input_channel': None, 'message_id': '0cd40b4bb9df4ce29c4f352bb7a90a85', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623479.5701632}, {'confidence': 0.9790626168251038, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623400.8162782}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623392.785128, 'value': 'alive'}, {'confidence': 0.9805377721786499, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623396.7985733}, {'event': 'user', 'input_channel': None, 'message_id': 'ae1fe201a40745a7ad5be5515b7b64f3', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623392.785128}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0748184}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623632.0827594}, {'confidence': 0.9738123416900635, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587623628.053078}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587623624.0397265, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'c023080569b147db830726beb02f67c6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587623624.0397265}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587624007.6902475, 'value': 'alive'}, {'confidence': 0.9593486189842224, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7016857}, {'confidence': 0.9566529989242554, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587624011.7096622}, {'event': 'user', 'input_channel': None, 'message_id': '14caac6272d84bab8b3d63804649b475', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587624007.6902475}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.4217095}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625330.416723}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625326.3995423}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587625320.364976, 'value': 'alive'}, {'confidence': 0.9798845052719116, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587625322.378298}, {'event': 'user', 'input_channel': None, 'message_id': 'f43647e1e274425dac8c46973280b700', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587625320.364976}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.7352133}, {'confidence': 0.9744635224342346, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627725.717553}, {'confidence': 0.9587612152099609, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587627729.731219}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587627723.7070372, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '9938f6bf71fb4d64bab748bc68e4a8e6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587627723.7060397}, {'confidence': 0.9505501389503479, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628053.8109617}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628053.8079948, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'be1ab56a98344f9cbebf5c41b42713b8', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628053.8079948}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.696493}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628146.7064242}, {'confidence': 0.9743969440460205, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628142.6742272}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628134.63527, 'value': 'alive'}, {'confidence': 0.9791081547737122, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628138.6540384}, {'event': 'user', 'input_channel': None, 'message_id': '1813c1971f0c4e849dba14afb18453d2', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628134.63527}, {'confidence': 0.9507420659065247, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.928011}, {'confidence': 0.9591927528381348, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628247.9241223}, {'confidence': 0.9746097326278687, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587628243.9069388}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587628239.8903096, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '2e595f48f28845ba8abbc90faa16323f', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587628239.8903096}, {'confidence': 0.9566252827644348, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.3173795}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587629877.2899194, 'value': 'alive'}, {'confidence': 0.9594601392745972, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587629881.307418}, {'event': 'user', 'input_channel': None, 'message_id': '89a46b598ab64f548f67b74ce294d53a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587629877.2899194}, {'confidence': 0.9488765597343445, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587630031.2084503}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587630031.203479, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': 'e5903470c3264159926172ae2794defe', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587630031.203479}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0120742}, {'confidence': 0.9568973779678345, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0021057}, {'confidence': 0.974357008934021, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631389.976206}, {'confidence': 0.9798263311386108, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631385.9338634}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587631381.912646, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '7ce82cdd3dad4fe98a4d09bc8b683fa6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587631381.9116485}], 'followup_action': None, 'latest_action_name': 'action_setIntent_id', 'latest_event_time': 1587631381.9116485, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 11:43:14,157] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 11:43:14] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 11:43:14,161] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2652, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.974357008934021, 'name': 'hci_form'}, {'confidence': 0.9798263311386108, 'name': 'action_setIntent_id'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}], 'story': '## 59::1.1.1.1::Default::any\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - hci_form\n    - action_SetContextSlots\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - action_SetContextSlots\n    - hci_form\n    - action_setIntent_id\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
15
1
Content-Type: multipart/mixed; boundary="===============6616610278127914868=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============6616610278127914868==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 26.6 percent

- RAM Usage : 60.8 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 15
--===============6616610278127914868==--

Email sent!
[2020-04-23 12:47:43,228] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 12:47:49.963910 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:47:49.963910%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.9
2020-04-23 12:47:49.964414%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5046435840, percent=60.4, used=7691276288, free=5046435840)
2020-04-23 12:47:49.964414%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:47:49.964414%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    125.9 MiB    125.9 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    125.9 MiB      0.0 MiB       try:
   660    125.9 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    125.9 MiB      0.0 MiB           data = request.get_json('data')
   662    125.9 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    125.9 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    125.9 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    125.9 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    125.9 MiB      0.0 MiB           sender = data["sender"]
   672    125.9 MiB      0.0 MiB           if not "conversation_id" in data:
   673    125.9 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    125.9 MiB      0.0 MiB           sission_id = data["identifier"]
   677    125.9 MiB      0.0 MiB           Channel = data["Channel"]
   678    125.9 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    125.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    125.9 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    125.9 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    125.9 MiB      0.0 MiB           language = data["language"]
   685                             
   686    125.9 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    125.9 MiB      0.0 MiB           userMsg = data["message"]
   690    125.9 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    125.9 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694                                         agent_obj = loadedAgentsMap[map_key]["agent"]
   695                                         loop1 = asyncio.get_event_loop()
   696                                         result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    126.0 MiB      0.1 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:47:50,263] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:47:50] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
[2020-04-23 12:47:50,370] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 12:47:50.369790
2020-04-23 12:47:52.406636 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 12:47:52.406636%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.2
2020-04-23 12:47:52.406636%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5010841600, percent=60.7, used=7726870528, free=5010841600)
2020-04-23 12:47:52.406636%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:47:52.406636%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:47:52.421595%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2653 2653
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    384.5 MiB    384.5 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    384.5 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    384.5 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    384.5 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    384.5 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    384.5 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.5 MiB    419.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.5 MiB      0.0 MiB           entity = {"value": value,
    75    419.5 MiB      0.0 MiB                     "start": start,
    76    419.5 MiB      0.0 MiB                     "end": end,
    77    419.5 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.5 MiB      0.0 MiB                     "entity": name,
    79    419.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.5 MiB    419.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.5 MiB      0.0 MiB           text = message.text
    88    419.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.5 MiB      0.0 MiB                   low_key = key.lower()
    96    419.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.5 MiB      0.0 MiB                   if( singular_key is False):
   103    419.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.5 MiB      0.0 MiB               entities = old_entities
   114    419.5 MiB      0.0 MiB               words = text.split(' ')
   115    419.5 MiB      0.0 MiB               for w in words:
   116    419.5 MiB      0.0 MiB                   word =w
   117    419.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.5 MiB      0.0 MiB                   if (word_singular is False):
   120    419.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.5 MiB      0.0 MiB                       start = text.find(w)
   128    419.5 MiB      0.0 MiB                       end = start + len(w)
   129    419.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.5 MiB      0.0 MiB                   low_key = key.lower()
   139    419.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.6 MiB    419.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.6 MiB      0.0 MiB           entity = {"value": value,
    75    419.6 MiB      0.0 MiB                     "start": start,
    76    419.6 MiB      0.0 MiB                     "end": end,
    77    419.6 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.6 MiB      0.0 MiB                     "entity": name,
    79    419.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.6 MiB    419.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.6 MiB      0.0 MiB           text = message.text
    88    419.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.6 MiB      0.0 MiB                   low_key = key.lower()
    96    419.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.6 MiB      0.0 MiB                   if( singular_key is False):
   103    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.6 MiB      0.0 MiB               entities = old_entities
   114    419.6 MiB      0.0 MiB               words = text.split(' ')
   115    419.6 MiB      0.0 MiB               for w in words:
   116    419.6 MiB      0.0 MiB                   word =w
   117    419.6 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.6 MiB      0.0 MiB                   if (word_singular is False):
   120    419.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.6 MiB      0.0 MiB                       start = text.find(w)
   128    419.6 MiB      0.0 MiB                       end = start + len(w)
   129    419.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.6 MiB      0.0 MiB                   low_key = key.lower()
   139    419.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 4769 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0120742}, {'confidence': 0.9568973779678345, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0021057}, {'confidence': 0.974357008934021, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631389.976206}, {'confidence': 0.9798263311386108, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631385.9338634}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587631381.912646, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '7ce82cdd3dad4fe98a4d09bc8b683fa6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587631381.9116485}, {'event': 'user', 'input_channel': None, 'message_id': 'caf79fb9a3db4609ab052e280ffe3a30', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587635283.1540413}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635283.1540413, 'value': 'alive'}, {'confidence': 0.9762812852859497, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': None, 'timestamp': 1587635285.6850183}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587635285.6850183, 'value': None}, {'confidence': 0.9619179368019104, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7632554}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7782173}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587635287.7782173, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0120742}, {'confidence': 0.9568973779678345, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0021057}, {'confidence': 0.974357008934021, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631389.976206}, {'confidence': 0.9798263311386108, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631385.9338634}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587631381.912646, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '7ce82cdd3dad4fe98a4d09bc8b683fa6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587631381.9116485}, {'event': 'user', 'input_channel': None, 'message_id': 'caf79fb9a3db4609ab052e280ffe3a30', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587635283.1540413}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635283.1540413, 'value': 'alive'}, {'confidence': 0.9762812852859497, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': None, 'timestamp': 1587635285.6850183}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587635285.6850183, 'value': None}, {'confidence': 0.9619179368019104, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7632554}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7782173}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587635287.7782173, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-23 12:48:07,999] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:48:07] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 12:48:08,005] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': 2653, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9619179368019104, 'name': 'action_SetContextSlots'}, {'confidence': 0.9604269862174988, 'name': 'action_listen'}], 'reply': [], 'reply1': [], 'slots': [{'Keep_alive_entity': 'alive'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'requested_slot': None}], 'story': '## 59::1.1.1.1::Default::any\n    - action_SetContextSlots\n    - hci_form\n    - action_setIntent_id\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - hci_form\n    - form{"name": "hci_form"}\n    - form{"name": null}\n    - slot{"requested_slot": null}\n    - action_SetContextSlots\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
16
1
Content-Type: multipart/mixed; boundary="===============8175341564837751043=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============8175341564837751043==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 34.1 percent

- RAM Usage : 62.9 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 16
--===============8175341564837751043==--

Email sent!
2020-04-23 12:48:41.427997 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:48:41.427997%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.6
2020-04-23 12:48:41.428625%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691128320, percent=63.2, used=8046583808, free=4691128320)
2020-04-23 12:48:41.428625%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:48:41.428625%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    420.6 MiB    420.6 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    420.6 MiB      0.0 MiB       try:
   660    420.6 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    420.6 MiB      0.0 MiB           data = request.get_json('data')
   662    420.6 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    420.6 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    420.6 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    420.6 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    420.6 MiB      0.0 MiB           sender = data["sender"]
   672    420.6 MiB      0.0 MiB           if not "conversation_id" in data:
   673    420.6 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    420.6 MiB      0.0 MiB           sission_id = data["identifier"]
   677    420.6 MiB      0.0 MiB           Channel = data["Channel"]
   678    420.6 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    420.6 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    420.6 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    420.6 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    420.6 MiB      0.0 MiB           language = data["language"]
   685                             
   686    420.6 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    420.6 MiB      0.0 MiB           userMsg = data["message"]
   690    420.6 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    420.6 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    420.6 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    420.6 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    420.9 MiB      0.2 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    420.9 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:48:43,919] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:48:43] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:48:50.923116 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:48:50.923116%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.3
2020-04-23 12:48:50.923116%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4674822144, percent=63.3, used=8062889984, free=4674822144)
2020-04-23 12:48:50.923116%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:48:50.923116%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    420.8 MiB    420.8 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    420.8 MiB      0.0 MiB       try:
   660    420.8 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    420.8 MiB      0.0 MiB           data = request.get_json('data')
   662    420.8 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    420.8 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    420.8 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    420.8 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    420.8 MiB      0.0 MiB           sender = data["sender"]
   672    420.8 MiB      0.0 MiB           if not "conversation_id" in data:
   673    420.8 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    420.8 MiB      0.0 MiB           sission_id = data["identifier"]
   677    420.8 MiB      0.0 MiB           Channel = data["Channel"]
   678    420.8 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    420.8 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    420.8 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    420.8 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    420.8 MiB      0.0 MiB           language = data["language"]
   685                             
   686    420.8 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    420.8 MiB      0.0 MiB           userMsg = data["message"]
   690    420.8 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    420.8 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    420.8 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    420.8 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    420.9 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    420.9 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:48:53,317] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:48:53] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:48:55.624364 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:48:55.624364%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.0
2020-04-23 12:48:55.625322%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4657262592, percent=63.4, used=8080449536, free=4657262592)
2020-04-23 12:48:55.625322%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:48:55.625322%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    420.9 MiB    420.9 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    420.9 MiB      0.0 MiB       try:
   660    420.9 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    420.9 MiB      0.0 MiB           data = request.get_json('data')
   662    420.9 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    420.9 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    420.9 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    420.9 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    420.9 MiB      0.0 MiB           sender = data["sender"]
   672    420.9 MiB      0.0 MiB           if not "conversation_id" in data:
   673    420.9 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    420.9 MiB      0.0 MiB           sission_id = data["identifier"]
   677    420.9 MiB      0.0 MiB           Channel = data["Channel"]
   678    420.9 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    420.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    420.9 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    420.9 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    420.9 MiB      0.0 MiB           language = data["language"]
   685                             
   686    420.9 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    420.9 MiB      0.0 MiB           userMsg = data["message"]
   690    420.9 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    420.9 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    420.9 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    420.9 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.0 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.0 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:48:57,831] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:48:57] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:48:59.624781 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:48:59.624781%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.5
2020-04-23 12:48:59.624781%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4663603200, percent=63.4, used=8074108928, free=4663603200)
2020-04-23 12:48:59.624781%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:48:59.624781%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    420.9 MiB    420.9 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    420.9 MiB      0.0 MiB       try:
   660    420.9 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    420.9 MiB      0.0 MiB           data = request.get_json('data')
   662    420.9 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    420.9 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    420.9 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    420.9 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    420.9 MiB      0.0 MiB           sender = data["sender"]
   672    420.9 MiB      0.0 MiB           if not "conversation_id" in data:
   673    420.9 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    420.9 MiB      0.0 MiB           sission_id = data["identifier"]
   677    420.9 MiB      0.0 MiB           Channel = data["Channel"]
   678    420.9 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    420.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    420.9 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    420.9 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    420.9 MiB      0.0 MiB           language = data["language"]
   685                             
   686    420.9 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    420.9 MiB      0.0 MiB           userMsg = data["message"]
   690    420.9 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    420.9 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    420.9 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    420.9 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.1 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.1 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:01,878] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:01] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:03.863685 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:03.863685%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.4
2020-04-23 12:49:03.863685%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4683001856, percent=63.2, used=8054710272, free=4683001856)
2020-04-23 12:49:03.863685%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:03.864683%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.0 MiB    421.0 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.0 MiB      0.0 MiB       try:
   660    421.0 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.0 MiB      0.0 MiB           data = request.get_json('data')
   662    421.0 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.0 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.0 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.0 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.0 MiB      0.0 MiB           sender = data["sender"]
   672    421.0 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.0 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.0 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.0 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.0 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.0 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.0 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.0 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.0 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.0 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.0 MiB      0.0 MiB           userMsg = data["message"]
   690    421.0 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.0 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.0 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.0 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.1 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.1 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:06,133] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:06] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:08.974894 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:08.974894%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.3
2020-04-23 12:49:08.974894%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4701900800, percent=63.1, used=8035811328, free=4701900800)
2020-04-23 12:49:08.975923%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:08.975923%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.1 MiB    421.1 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.1 MiB      0.0 MiB       try:
   660    421.1 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.1 MiB      0.0 MiB           data = request.get_json('data')
   662    421.1 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.1 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.1 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.1 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.1 MiB      0.0 MiB           sender = data["sender"]
   672    421.1 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.1 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.1 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.1 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.1 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.1 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.1 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.1 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.1 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.1 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.1 MiB      0.0 MiB           userMsg = data["message"]
   690    421.1 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.1 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.1 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.1 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.1 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.1 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:11,410] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:11] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:16.048043 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:16.048043%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.5
2020-04-23 12:49:16.048043%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4674482176, percent=63.3, used=8063229952, free=4674482176)
2020-04-23 12:49:16.049040%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:16.049040%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.1 MiB    421.1 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.1 MiB      0.0 MiB       try:
   660    421.1 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.1 MiB      0.0 MiB           data = request.get_json('data')
   662    421.1 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.1 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.1 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.1 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.1 MiB      0.0 MiB           sender = data["sender"]
   672    421.1 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.1 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.1 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.1 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.1 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.1 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.1 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.1 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.1 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.1 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.1 MiB      0.0 MiB           userMsg = data["message"]
   690    421.1 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.1 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.1 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.1 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.2 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.2 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:18,379] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:18] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:24.832400 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:24.832881%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.4
2020-04-23 12:49:24.832881%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4729847808, percent=62.9, used=8007864320, free=4729847808)
2020-04-23 12:49:24.832881%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:24.832881%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.1 MiB    421.1 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.1 MiB      0.0 MiB       try:
   660    421.1 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.1 MiB      0.0 MiB           data = request.get_json('data')
   662    421.1 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.1 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.1 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.1 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.1 MiB      0.0 MiB           sender = data["sender"]
   672    421.1 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.1 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.1 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.1 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.1 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.1 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.1 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.1 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.1 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.1 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.1 MiB      0.0 MiB           userMsg = data["message"]
   690    421.1 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.1 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.1 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.1 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.3 MiB      0.2 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.3 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:27,103] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:27] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:29.858650 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:29.858650%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.5
2020-04-23 12:49:29.858650%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4715536384, percent=63.0, used=8022175744, free=4715536384)
2020-04-23 12:49:29.859005%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:29.859005%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.2 MiB    421.2 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.2 MiB      0.0 MiB       try:
   660    421.2 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.2 MiB      0.0 MiB           data = request.get_json('data')
   662    421.2 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.2 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.2 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.2 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.2 MiB      0.0 MiB           sender = data["sender"]
   672    421.2 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.2 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.2 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.2 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.2 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.2 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.2 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.2 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.2 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.2 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.2 MiB      0.0 MiB           userMsg = data["message"]
   690    421.2 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.2 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.2 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.2 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.3 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.3 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:32,229] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:32] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:39.333526 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:39.333526%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.5
2020-04-23 12:49:39.334623%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4677750784, percent=63.3, used=8059961344, free=4677750784)
2020-04-23 12:49:39.334623%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:39.334623%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.3 MiB    421.3 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.3 MiB      0.0 MiB       try:
   660    421.3 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.3 MiB      0.0 MiB           data = request.get_json('data')
   662    421.3 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.3 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.3 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.3 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.3 MiB      0.0 MiB           sender = data["sender"]
   672    421.3 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.3 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.3 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.3 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.3 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.3 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.3 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.3 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.3 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.3 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.3 MiB      0.0 MiB           userMsg = data["message"]
   690    421.3 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.3 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.3 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.3 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.4 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.4 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:41,656] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:41] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:49:45.410552 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:49:45.410552%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.3
2020-04-23 12:49:45.410552%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4684902400, percent=63.2, used=8052809728, free=4684902400)
2020-04-23 12:49:45.411490%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:49:45.411490%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    421.4 MiB    421.4 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    421.4 MiB      0.0 MiB       try:
   660    421.4 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    421.4 MiB      0.0 MiB           data = request.get_json('data')
   662    421.4 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    421.4 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    421.4 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    421.4 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    421.4 MiB      0.0 MiB           sender = data["sender"]
   672    421.4 MiB      0.0 MiB           if not "conversation_id" in data:
   673    421.4 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    421.4 MiB      0.0 MiB           sission_id = data["identifier"]
   677    421.4 MiB      0.0 MiB           Channel = data["Channel"]
   678    421.4 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    421.4 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    421.4 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    421.4 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    421.4 MiB      0.0 MiB           language = data["language"]
   685                             
   686    421.4 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    421.4 MiB      0.0 MiB           userMsg = data["message"]
   690    421.4 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    421.4 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    421.4 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    421.4 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    421.5 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    421.5 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:49:47,824] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:49:47] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.219236 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:50:08.219236%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.2
2020-04-23 12:50:08.219236%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616990720, percent=63.8, used=8120721408, free=4616990720)
2020-04-23 12:50:08.219825%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.219825%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,220] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.223814 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:50:08.223814%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:50:08.223814%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616982528, percent=63.8, used=8120729600, free=4616982528)
2020-04-23 12:50:08.223814%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.223814%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,224] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.227940 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 12:50:08.227940%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:50:08.227940%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616982528, percent=63.8, used=8120729600, free=4616982528)
2020-04-23 12:50:08.227940%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,229] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.235784 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:50:08.235784%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:50:08.235784%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616642560, percent=63.8, used=8121069568, free=4616642560)
2020-04-23 12:50:08.235784%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,236] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.472352 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:50:08.472352%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.3
2020-04-23 12:50:08.472352%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4617367552, percent=63.8, used=8120344576, free=4617367552)
2020-04-23 12:50:08.473266%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.473266%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.479337%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,491] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.532109 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:50:08.532109%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.8
2020-04-23 12:50:08.534102%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4617314304, percent=63.8, used=8120397824, free=4617314304)
2020-04-23 12:50:08.534102%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.534102%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.548066 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 12:50:08.548066%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:50:08.550057%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4617314304, percent=63.8, used=8120397824, free=4617314304)
2020-04-23 12:50:08.551055%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.557461 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:50:08.557461%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:08.558036%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4617338880, percent=63.8, used=8120373248, free=4617338880)
2020-04-23 12:50:08.558036%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.561027%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,569] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:08.579978%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:08.585960%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:08,599] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 12:50:08,600] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:08] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.436346 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:50:18.436346%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.4
2020-04-23 12:50:18.437336%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4392464384, percent=65.5, used=8345247744, free=4392464384)
2020-04-23 12:50:18.437336%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:18.437336%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,440] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.750498 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:50:18.750498%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:69.5
2020-04-23 12:50:18.750925%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4367159296, percent=65.7, used=8370552832, free=4367159296)
2020-04-23 12:50:18.750925%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:18.750925%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,751] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.754485 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:50:18.754485%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:50:18.755486%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4367196160, percent=65.7, used=8370515968, free=4367196160)
2020-04-23 12:50:18.755486%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:18.755486%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:18.759472%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,764] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.766453 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:50:18.766453%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:18.766568%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4367507456, percent=65.7, used=8370204672, free=4367507456)
2020-04-23 12:50:18.766568%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:18.766568%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,769] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.778421 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 12:50:18.778421%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:18.778819%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4368547840, percent=65.7, used=8369164288, free=4368547840)
2020-04-23 12:50:18.778819%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:18.778819%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,780] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.791387 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 12:50:18.791387%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 12:50:18.791387%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4368543744, percent=65.7, used=8369168384, free=4368543744)
2020-04-23 12:50:18.791387%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,792] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 12:50:18.834339 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:50:18.834339%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:50:18.834339%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4381122560, percent=65.6, used=8356589568, free=4381122560)
2020-04-23 12:50:18.835270%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:18,836] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:18] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:19.060265 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:50:19.060265%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.8
2020-04-23 12:50:19.060265%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377522176, percent=65.6, used=8360189952, free=4377522176)
2020-04-23 12:50:19.060265%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.060265%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.063228%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:19,066] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:19] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:19.078189 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:50:19.079186%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:19.079309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377485312, percent=65.6, used=8360226816, free=4377485312)
2020-04-23 12:50:19.079309%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.079309%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.084174%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.097138 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 12:50:19.097138%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:19.097700%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377407488, percent=65.6, used=8360304640, free=4377407488)
2020-04-23 12:50:19.097700%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.097700%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.102123%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:19,110] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:19] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 12:50:19,111] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:19] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:19.113115 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 12:50:19.113115%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:50:19.113115%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377354240, percent=65.6, used=8360357888, free=4377354240)
2020-04-23 12:50:19.114092%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.120077%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:19,125] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:19] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 12:50:19.144014 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:50:19.144014%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:87.5
2020-04-23 12:50:19.144014%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377296896, percent=65.6, used=8360415232, free=4377296896)
2020-04-23 12:50:19.144014%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:19.147003%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:19,152] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:19] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:25.656901 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:50:25.656901%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.2
2020-04-23 12:50:25.657143%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4412416000, percent=65.4, used=8325296128, free=4412416000)
2020-04-23 12:50:25.657143%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:25.657143%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:25,658] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:25] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:25.968064 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:50:25.968064%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.8
2020-04-23 12:50:25.968064%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4412432384, percent=65.4, used=8325279744, free=4412432384)
2020-04-23 12:50:25.968920%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:25.968920%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:25.978016%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:26,005] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:26] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:28.396702 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:50:28.396702%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.7
2020-04-23 12:50:28.396702%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4435369984, percent=65.2, used=8302342144, free=4435369984)
2020-04-23 12:50:28.397688%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:28.397688%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:28,398] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:28] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:28.707758 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:50:28.707758%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:1.3
2020-04-23 12:50:28.707758%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4436353024, percent=65.2, used=8301359104, free=4436353024)
2020-04-23 12:50:28.707758%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:28.707758%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:28.718734%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:28,734] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:28] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:31.379004 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [OPTIONS]
2020-04-23 12:50:31.379004%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.5
2020-04-23 12:50:31.379337%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4503842816, percent=64.6, used=8233869312, free=4503842816)
2020-04-23 12:50:31.379337%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:31,381] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:31] "[37mOPTIONS /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:50:31.693860 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 12:50:31.693860%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.6
2020-04-23 12:50:31.694821%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4505767936, percent=64.6, used=8231944192, free=4505767936)
2020-04-23 12:50:31.694821%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:31.694821%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:31.706787%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:33.732955 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 12:50:33.732955%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.5
2020-04-23 12:50:33.734067%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4509888512, percent=64.6, used=8227823616, free=4509888512)
2020-04-23 12:50:33.734067%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:33.734067%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:33,919] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:33] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 12:50:35.963518 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:50:35.963518%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:49.7
2020-04-23 12:50:35.964515%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4526252032, percent=64.5, used=8211460096, free=4526252032)
2020-04-23 12:50:35.964515%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:36,081] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:36] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 12:50:38.101189 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:50:38.101189%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:70.8
2020-04-23 12:50:38.101189%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4442935296, percent=65.1, used=8294776832, free=4442935296)
2020-04-23 12:50:38.101189%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:38,125] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-23 12:50:38,132] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mPOST /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:50:38.199829 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:50:38.199829%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:72.0
2020-04-23 12:50:38.200195%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4441911296, percent=65.1, used=8295800832, free=4441911296)
2020-04-23 12:50:38.200195%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.200195%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:38,200] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:38.519975 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:50:38.519975%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.3
2020-04-23 12:50:38.526967%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439855104, percent=65.1, used=8297857024, free=4439855104)
2020-04-23 12:50:38.527956%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.527956%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.533021 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:50:38.533021%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:38.533021%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439838720, percent=65.1, used=8297873408, free=4439838720)
2020-04-23 12:50:38.533936%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.533936%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:38,536] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:38.540966%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.552886 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:50:38.552886%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:38.552886%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4442357760, percent=65.1, used=8295354368, free=4442357760)
2020-04-23 12:50:38.552886%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:38,555] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 12:50:38,562] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:38.761327 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:50:38.761327%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.4
2020-04-23 12:50:38.761327%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4440457216, percent=65.1, used=8297254912, free=4440457216)
2020-04-23 12:50:38.761327%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.761327%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.764321%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:38,770] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:38.855077 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:50:38.855077%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-23 12:50:38.856074%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439851008, percent=65.1, used=8297861120, free=4439851008)
2020-04-23 12:50:38.856074%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:38.861093%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:38,866] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:38] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.169315 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:50:42.169315%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.7
2020-04-23 12:50:42.169847%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4458192896, percent=65.0, used=8279519232, free=4458192896)
2020-04-23 12:50:42.169847%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.169847%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,172] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.478938 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:50:42.478938%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.2
2020-04-23 12:50:42.479305%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489654272, percent=64.8, used=8248057856, free=4489654272)
2020-04-23 12:50:42.479305%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.479305%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.482297%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.484292 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:50:42.484292%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:50:42.485486%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489654272, percent=64.8, used=8248057856, free=4489654272)
2020-04-23 12:50:42.485486%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.485486%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,488] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.492301 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:50:42.492301%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:42.492301%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489654272, percent=64.8, used=8248057856, free=4489654272)
2020-04-23 12:50:42.492301%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.492301%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,493] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 12:50:42,494] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.496684 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 12:50:42.497257%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:50:42.497257%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489650176, percent=64.8, used=8248061952, free=4489650176)
2020-04-23 12:50:42.497257%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.497257%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,499] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.505282 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 12:50:42.505282%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:50:42.505282%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489658368, percent=64.8, used=8248053760, free=4489658368)
2020-04-23 12:50:42.505282%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,506] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.520196 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:50:42.520196%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 12:50:42.521193%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489650176, percent=64.8, used=8248061952, free=4489650176)
2020-04-23 12:50:42.521193%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,523] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.799005 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:50:42.799005%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.5
2020-04-23 12:50:42.799005%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489654272, percent=64.8, used=8248057856, free=4489654272)
2020-04-23 12:50:42.799005%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.799005%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.815962 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:50:42.815962%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:42.815962%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489916416, percent=64.8, used=8247795712, free=4489916416)
2020-04-23 12:50:42.815962%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.815962%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.827929%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.833945 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 12:50:42.833945%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:50:42.834149%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489916416, percent=64.8, used=8247795712, free=4489916416)
2020-04-23 12:50:42.834149%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.834149%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.844882%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.849870 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 12:50:42.850864%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.6
2020-04-23 12:50:42.850864%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489916416, percent=64.8, used=8247795712, free=4489916416)
2020-04-23 12:50:42.850864%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,865] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=36 HTTP/1.1[0m" 200 -
[2020-04-23 12:50:42,876] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.882780 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:50:42.883779%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.8
2020-04-23 12:50:42.884107%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489904128, percent=64.8, used=8247808000, free=4489904128)
2020-04-23 12:50:42.884107%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.892754%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,903] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:42.909708%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:42.911703%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:42,919] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-23 12:50:42,926] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:42] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:52.652251 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:50:52.652251%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.4
2020-04-23 12:50:52.652251%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4549300224, percent=64.3, used=8188411904, free=4549300224)
2020-04-23 12:50:52.652251%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:52.652251%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:52,654] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:52] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:52.964895 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:50:52.964895%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.1
2020-04-23 12:50:52.965335%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4533067776, percent=64.4, used=8204644352, free=4533067776)
2020-04-23 12:50:52.965335%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:52.965335%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:52.973276%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:52,989] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:52] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:55.270131 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:50:55.270131%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.5
2020-04-23 12:50:55.270358%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4544049152, percent=64.3, used=8193662976, free=4544049152)
2020-04-23 12:50:55.270518%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:55.270518%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:55,272] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:55] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:55.580674 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:50:55.580674%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.8
2020-04-23 12:50:55.580674%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4545028096, percent=64.3, used=8192684032, free=4545028096)
2020-04-23 12:50:55.580674%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:55.580674%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:55.588653%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:55,602] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:55] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:50:56.865853 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [OPTIONS]
2020-04-23 12:50:56.865853%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.9
2020-04-23 12:50:56.866849%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4543365120, percent=64.3, used=8194347008, free=4543365120)
2020-04-23 12:50:56.866849%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:56,870] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:56] "[37mOPTIONS /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:50:57.183040 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 12:50:57.183040%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.5
2020-04-23 12:50:57.183539%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4543377408, percent=64.3, used=8194334720, free=4543377408)
2020-04-23 12:50:57.183539%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:57.183539%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:57.194565%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:59.219616 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 12:50:59.219616%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.7
2020-04-23 12:50:59.220611%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4495822848, percent=64.7, used=8241889280, free=4495822848)
2020-04-23 12:50:59.220611%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:50:59.220611%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:50:59,328] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:50:59] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 12:51:01.347743 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:51:01.347743%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.1
2020-04-23 12:51:01.347743%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4472872960, percent=64.9, used=8264839168, free=4472872960)
2020-04-23 12:51:01.347743%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:01,426] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:01] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 12:51:03.456500 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:51:03.456500%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.4
2020-04-23 12:51:03.456500%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4475740160, percent=64.9, used=8261971968, free=4475740160)
2020-04-23 12:51:03.456500%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:03,534] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:03] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-23 12:51:03,564] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:03] "[37mPOST /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:51:03.666940 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:51:03.666940%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:67.9
2020-04-23 12:51:03.666940%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476329984, percent=64.9, used=8261382144, free=4476329984)
2020-04-23 12:51:03.666940%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:03.666940%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:03,671] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:03] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:51:03.989590 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:51:03.989590%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.7
2020-04-23 12:51:03.990365%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4477534208, percent=64.8, used=8260177920, free=4477534208)
2020-04-23 12:51:03.990365%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:03.990365%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:03,994] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:03] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:51:03.998378 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:51:03.998378%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:51:03.998745%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4477534208, percent=64.8, used=8260177920, free=4477534208)
2020-04-23 12:51:03.998745%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:03.998745%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:04.010345%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:04.017323 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:51:04.017323%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:51:04.017323%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4477521920, percent=64.8, used=8260190208, free=4477521920)
2020-04-23 12:51:04.017323%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:04,019] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:04] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
[2020-04-23 12:51:04,026] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:04] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:51:04.232019 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:51:04.232019%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.5
2020-04-23 12:51:04.232019%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4477526016, percent=64.8, used=8260186112, free=4477526016)
2020-04-23 12:51:04.232019%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:04.232019%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:04.237006%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:04,245] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:04] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:51:04.316235 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:51:04.316235%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.0
2020-04-23 12:51:04.316235%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4477517824, percent=64.8, used=8260194304, free=4477517824)
2020-04-23 12:51:04.316235%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:04.329198%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:04,344] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:04] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:51:38.873286 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 12:51:38.873286%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.4
2020-04-23 12:51:38.874162%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4452773888, percent=65.0, used=8284938240, free=4452773888)
2020-04-23 12:51:38.875160%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:38.875160%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:38,880] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:38] "[37mOPTIONS /trainAgent?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:51:39.128854 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 12:51:39.128854%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.6
2020-04-23 12:51:39.129728%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4453605376, percent=65.0, used=8284106752, free=4453605376)
2020-04-23 12:51:39.129728%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:39.129728%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:51:39.139222%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:51:39,176] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:51:39] "[31m[1mPOST /trainAgent?agentId=36 HTTP/1.1[0m" 400 -
2020-04-23 12:52:13.991586 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:52:13.991586%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.8
2020-04-23 12:52:13.991586%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4514209792, percent=64.6, used=8223502336, free=4514209792)
2020-04-23 12:52:13.991586%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:52:13,993] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:52:13] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:52:14.241832 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:52:14.241832%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.5
2020-04-23 12:52:14.241832%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4514238464, percent=64.6, used=8223473664, free=4514238464)
2020-04-23 12:52:14.241832%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:52:14.247815%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:52:14,251] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:52:14] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:52:15.148682 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 12:52:15.148682%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.0
2020-04-23 12:52:15.149683%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4520095744, percent=64.5, used=8217616384, free=4520095744)
2020-04-23 12:52:15.149683%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:52:15.149683%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:52:15,151] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:52:15] "[37mOPTIONS /trainAgent?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:52:15.461560 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 12:52:15.461560%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.8
2020-04-23 12:52:15.461560%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4524904448, percent=64.5, used=8212807680, free=4524904448)
2020-04-23 12:52:15.462562%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:52:15.462562%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:52:15.468547%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:52:15,504] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:52:15] "[31m[1mPOST /trainAgent?agentId=36 HTTP/1.1[0m" 400 -
2020-04-23 12:53:03.860705 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/logout [OPTIONS]
2020-04-23 12:53:03.860705%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.8
2020-04-23 12:53:03.860705%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4464033792, percent=65.0, used=8273678336, free=4464033792)
2020-04-23 12:53:03.861664%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:03,864] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:03] "[37mOPTIONS /logout HTTP/1.1[0m" 200 -
2020-04-23 12:53:04.112950 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/logout [POST]
2020-04-23 12:53:04.112950%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.5
2020-04-23 12:53:04.112950%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4466774016, percent=64.9, used=8270938112, free=4466774016)
2020-04-23 12:53:04.112950%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:04.120885%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:04,123] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:04] "[37mPOST /logout HTTP/1.1[0m" 200 -
2020-04-23 12:53:06.479904 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-23 12:53:06.479904%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.7
2020-04-23 12:53:06.479904%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4468400128, percent=64.9, used=8269312000, free=4468400128)
2020-04-23 12:53:06.479904%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:06,481] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:06] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-23 12:53:06.789873 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-23 12:53:06.789873%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.0
2020-04-23 12:53:06.789873%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476731392, percent=64.9, used=8260980736, free=4476731392)
2020-04-23 12:53:06.789873%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    420.9 MiB    420.9 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    420.9 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    420.9 MiB      0.0 MiB       auth = data
  1482    420.9 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    420.9 MiB      0.0 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    420.9 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    420.9 MiB      0.0 MiB       if verify_password(auth["password"], _user.password):
  1491    420.9 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    420.9 MiB      0.0 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    420.9 MiB      0.0 MiB           agent_obj = {}
  1495    420.9 MiB      0.0 MiB           for agent in _user.agents:
  1496    420.9 MiB      0.0 MiB               if agent.isDefault == True:
  1497    420.9 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    420.9 MiB      0.0 MiB                                "name": agent.name}
  1499    420.9 MiB      0.0 MiB                   break
  1500    420.9 MiB      0.0 MiB           return jsonify(
  1501    420.9 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    420.9 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-23 12:53:06,887] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:06] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.039697 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:53:07.039697%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:53.1
2020-04-23 12:53:07.039697%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476497920, percent=64.9, used=8261214208, free=4476497920)
2020-04-23 12:53:07.039697%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.039697%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,040] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.241776 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:53:07.241776%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.8
2020-04-23 12:53:07.241776%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476424192, percent=64.9, used=8261287936, free=4476424192)
2020-04-23 12:53:07.241776%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.241776%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,242] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.245737 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 12:53:07.245737%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:07.246737%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476416000, percent=64.9, used=8261296128, free=4476416000)
2020-04-23 12:53:07.246737%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,247] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.252718 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 12:53:07.252718%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:07.252718%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476403712, percent=64.9, used=8261308416, free=4476403712)
2020-04-23 12:53:07.252718%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,254] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.260722 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 12:53:07.260722%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:53:07.261706%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476391424, percent=64.9, used=8261320704, free=4476391424)
2020-04-23 12:53:07.261706%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,262] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.268676 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:53:07.268676%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:07.268676%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476403712, percent=64.9, used=8261308416, free=4476403712)
2020-04-23 12:53:07.268676%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.268676%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.274659%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,277] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.345646 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:53:07.345646%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.0
2020-04-23 12:53:07.345646%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476383232, percent=64.9, used=8261328896, free=4476383232)
2020-04-23 12:53:07.345646%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.345646%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.348638%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,354] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.550766 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 12:53:07.550766%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.5
2020-04-23 12:53:07.551755%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476391424, percent=64.9, used=8261320704, free=4476391424)
2020-04-23 12:53:07.551755%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.557794 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 12:53:07.557794%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 12:53:07.557794%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476391424, percent=64.9, used=8261320704, free=4476391424)
2020-04-23 12:53:07.557794%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,558] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 12:53:07.559733%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.566715 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 12:53:07.566715%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:07.567713%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4476325888, percent=64.9, used=8261386240, free=4476325888)
2020-04-23 12:53:07.568748%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:07.573698%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:07,578] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 12:53:07,583] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:07] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:53:12.596170 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 12:53:12.596170%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.3
2020-04-23 12:53:12.596170%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4538630144, percent=64.4, used=8199081984, free=4538630144)
2020-04-23 12:53:12.596170%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:12,598] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:12] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 12:53:12.905880 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 12:53:12.905880%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.3
2020-04-23 12:53:12.905880%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527497216, percent=64.5, used=8210214912, free=4527497216)
2020-04-23 12:53:12.905880%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:12.908874%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:12,915] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:12] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 12:53:12.948765 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:53:12.948765%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:83.3
2020-04-23 12:53:12.949762%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4528451584, percent=64.4, used=8209260544, free=4528451584)
2020-04-23 12:53:12.949762%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:12.949762%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:12,951] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:12] "[37mOPTIONS /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:12.954749 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:53:12.954749%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:12.954749%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527476736, percent=64.5, used=8210235392, free=4527476736)
2020-04-23 12:53:12.954749%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:12.954749%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:12,956] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:12] "[37mOPTIONS /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:12.958738 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 12:53:12.958738%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:12.958738%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527472640, percent=64.5, used=8210239488, free=4527472640)
2020-04-23 12:53:12.958738%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:12,959] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:12] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 12:53:12.966719 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:53:12.966719%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 12:53:12.966719%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527472640, percent=64.5, used=8210239488, free=4527472640)
2020-04-23 12:53:12.966719%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:12,967] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:12] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:13.156525 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:53:13.156525%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:2.1
2020-04-23 12:53:13.156525%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4529184768, percent=64.4, used=8208527360, free=4529184768)
2020-04-23 12:53:13.156525%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:13.156525%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:13.159516%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:13,167] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:13] "[37mGET /intentReport/1/15/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:13.256810 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:53:13.256810%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.9
2020-04-23 12:53:13.256810%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4529590272, percent=64.4, used=8208121856, free=4529590272)
2020-04-23 12:53:13.256810%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:13.256810%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:13.259805%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:13.266752 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 12:53:13.266752%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:53:13.266752%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4529590272, percent=64.4, used=8208121856, free=4529590272)
2020-04-23 12:53:13.266752%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:13,267] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:13] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 12:53:13.272735 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:53:13.272735%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:53:13.272735%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4529590272, percent=64.4, used=8208121856, free=4529590272)
2020-04-23 12:53:13.272735%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:13,281] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:13] "[37mGET /intentReport/1/100000000/en?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:13.283707%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:13,288] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:13] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:17.359895 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [OPTIONS]
2020-04-23 12:53:17.359895%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.1
2020-04-23 12:53:17.359895%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4531687424, percent=64.4, used=8206024704, free=4531687424)
2020-04-23 12:53:17.359895%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:17,361] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:17] "[37mOPTIONS /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:17.666921 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/36 [GET]
2020-04-23 12:53:17.666921%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.0
2020-04-23 12:53:17.666921%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4531572736, percent=64.4, used=8206139392, free=4531572736)
2020-04-23 12:53:17.666921%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:17.669913%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:17,673] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:17] "[37mGET /agent/36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:18.647602 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 12:53:18.647602%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.1
2020-04-23 12:53:18.648604%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4531671040, percent=64.4, used=8206041088, free=4531671040)
2020-04-23 12:53:18.649597%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:18.649597%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:18,655] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:18] "[37mOPTIONS /trainAgent?agentId=36 HTTP/1.1[0m" 200 -
2020-04-23 12:53:18.964629 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 12:53:18.964629%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.5
2020-04-23 12:53:18.964629%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4531757056, percent=64.4, used=8205955072, free=4531757056)
2020-04-23 12:53:18.964629%%%%%%%%%%%%%%%%%%  Agent ID 36 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:18.964629%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:53:18.967620%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:53:18,982] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:53:18] "[31m[1mPOST /trainAgent?agentId=36 HTTP/1.1[0m" 400 -
[2020-04-23 12:58:20,978] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 12:58:29.492324 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 12:58:29.492324%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.1
2020-04-23 12:58:29.492324%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4816953344, percent=62.2, used=7920758784, free=4816953344)
2020-04-23 12:58:29.493322%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,494] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.537205 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:58:29.537205%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.6
2020-04-23 12:58:29.537205%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4816093184, percent=62.2, used=7921618944, free=4816093184)
2020-04-23 12:58:29.537205%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.537205%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,541] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.546181 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:58:29.546181%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:58:29.547179%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4816142336, percent=62.2, used=7921569792, free=4816142336)
2020-04-23 12:58:29.547179%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.547179%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,549] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.554161 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 12:58:29.554161%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:58:29.555158%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4815904768, percent=62.2, used=7921807360, free=4815904768)
2020-04-23 12:58:29.555158%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,557] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.566129 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 12:58:29.566129%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:29.566129%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4815069184, percent=62.2, used=7922642944, free=4815069184)
2020-04-23 12:58:29.566129%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,569] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.724702 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 12:58:29.724702%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 12:58:29.724702%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4814671872, percent=62.2, used=7923040256, free=4814671872)
2020-04-23 12:58:29.725703%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.751632%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,781] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 12:58:29.781551
[2020-04-23 12:58:29,788] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.807482 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:58:29.807482%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 12:58:29.807482%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4814176256, percent=62.2, used=7923535872, free=4814176256)
2020-04-23 12:58:29.807482%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.807482%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.828454%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,844] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.849370 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:58:29.849370%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:58:29.850367%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4814241792, percent=62.2, used=7923470336, free=4814241792)
2020-04-23 12:58:29.851366%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.851366%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.856352%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.863352 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 12:58:29.863352%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-23 12:58:29.863352%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4814180352, percent=62.2, used=7923531776, free=4814180352)
2020-04-23 12:58:29.863352%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,864] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
[2020-04-23 12:58:29,864] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:29.869327 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 12:58:29.869327%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:58:29.870315%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4814172160, percent=62.2, used=7923539968, free=4814172160)
2020-04-23 12:58:29.870315%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:29.876299%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:29,883] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:29] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:30.775082 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:58:30.775082%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.2
2020-04-23 12:58:30.775082%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4812447744, percent=62.2, used=7925264384, free=4812447744)
2020-04-23 12:58:30.775082%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:30.775082%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:30,777] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:30] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.081366 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:58:31.081366%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.5
2020-04-23 12:58:31.082396%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841431040, percent=62.0, used=7896281088, free=4841431040)
2020-04-23 12:58:31.082396%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.082396%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,084] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.087355 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:58:31.087355%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-23 12:58:31.087355%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841398272, percent=62.0, used=7896313856, free=4841398272)
2020-04-23 12:58:31.087355%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.087355%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.090341 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:58:31.090341%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:31.090341%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841398272, percent=62.0, used=7896313856, free=4841398272)
2020-04-23 12:58:31.090341%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.090341%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,091] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.092337%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.096325 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 12:58:31.096325%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:31.096325%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841320448, percent=62.0, used=7896391680, free=4841320448)
2020-04-23 12:58:31.096325%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.096325%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,097] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 12:58:31,100] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.103306 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 12:58:31.103306%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:58:31.103306%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841259008, percent=62.0, used=7896453120, free=4841259008)
2020-04-23 12:58:31.103306%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,105] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.111289 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 12:58:31.111289%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:31.111289%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841320448, percent=62.0, used=7896391680, free=4841320448)
2020-04-23 12:58:31.111289%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,113] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.394149 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:58:31.394149%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.2
2020-04-23 12:58:31.394149%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841320448, percent=62.0, used=7896391680, free=4841320448)
2020-04-23 12:58:31.394149%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.394149%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.408113 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:58:31.408113%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 12:58:31.408113%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841320448, percent=62.0, used=7896391680, free=4841320448)
2020-04-23 12:58:31.408113%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.408113%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.412101 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 12:58:31.412101%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:31.412101%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841254912, percent=62.0, used=7896457216, free=4841254912)
2020-04-23 12:58:31.412101%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.412101%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.415093 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 12:58:31.415093%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 12:58:31.416091%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841254912, percent=62.0, used=7896457216, free=4841254912)
2020-04-23 12:58:31.416091%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.420081%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,426] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.427064 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 12:58:31.427064%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:31.427064%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4841193472, percent=62.0, used=7896518656, free=4841193472)
2020-04-23 12:58:31.427064%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.437035%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,444] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.446011%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.450000%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.452992%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:31,461] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-23 12:58:31,465] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 12:58:31,470] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:31] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:31.849246 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 12:58:31.849246%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.6
2020-04-23 12:58:31.850242%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4840603648, percent=62.0, used=7897108480, free=4840603648)
2020-04-23 12:58:31.850242%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.850242%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:31.853232%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2655 2655
 2- default platform is not  Null 
2020-04-23 12:58:36.757327 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:58:36.757327%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.4
2020-04-23 12:58:36.757327%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4624224256, percent=63.7, used=8113487872, free=4624224256)
2020-04-23 12:58:36.757327%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:36.757327%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:36,760] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:36] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    384.1 MiB    384.1 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    384.1 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    384.1 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    384.1 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    384.1 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    384.1 MiB      0.0 MiB                   return pickle.load(f)


2020-04-23 12:58:37.066940 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:58:37.066940%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.2
2020-04-23 12:58:37.066940%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4620738560, percent=63.7, used=8116973568, free=4620738560)
2020-04-23 12:58:37.066940%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:37.066940%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:37.071904%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:37,079] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:37] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:39.942246 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:58:39.942246%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.1
2020-04-23 12:58:39.942246%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4621930496, percent=63.7, used=8115781632, free=4621930496)
2020-04-23 12:58:39.942246%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:39.942246%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:39,944] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:39] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:40.275353 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:58:40.275353%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.2
2020-04-23 12:58:40.276383%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4625416192, percent=63.7, used=8112295936, free=4625416192)
2020-04-23 12:58:40.276383%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:40.276383%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:40.293306%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:40,299] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:40] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.8 MiB    419.8 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.8 MiB      0.0 MiB           entity = {"value": value,
    75    419.8 MiB      0.0 MiB                     "start": start,
    76    419.8 MiB      0.0 MiB                     "end": end,
    77    419.8 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.8 MiB      0.0 MiB                     "entity": name,
    79    419.8 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.8 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.8 MiB    419.8 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.8 MiB      0.0 MiB           text = message.text
    88    419.8 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.8 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.8 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.8 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.8 MiB      0.0 MiB                   low_key = key.lower()
    96    419.8 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.8 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.8 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.8 MiB      0.0 MiB                   if( singular_key is False):
   103    419.8 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.8 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.8 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.8 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.8 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.8 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.8 MiB      0.0 MiB               entities = old_entities
   114    419.8 MiB      0.0 MiB               words = text.split(' ')
   115    419.8 MiB      0.0 MiB               for w in words:
   116    419.8 MiB      0.0 MiB                   word =w
   117    419.8 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.8 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.8 MiB      0.0 MiB                   if (word_singular is False):
   120    419.8 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.8 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.8 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.8 MiB      0.0 MiB                       start = text.find(w)
   128    419.8 MiB      0.0 MiB                       end = start + len(w)
   129    419.8 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.8 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.8 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.8 MiB      0.0 MiB                   low_key = key.lower()
   139    419.8 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.8 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.8 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.8 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.8 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.8 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


2020-04-23 12:58:42.857599 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [OPTIONS]
2020-04-23 12:58:42.857599%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.5
2020-04-23 12:58:42.857599%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4618444800, percent=63.7, used=8119267328, free=4618444800)
2020-04-23 12:58:42.857599%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:42,860] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:42] "[37mOPTIONS /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:58:43.168518 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 12:58:43.168518%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.1
2020-04-23 12:58:43.168518%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4611395584, percent=63.8, used=8126316544, free=4611395584)
2020-04-23 12:58:43.168518%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:43.168518%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:43.171515%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:45.184387 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 12:58:45.184387%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.4
2020-04-23 12:58:45.184387%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616728576, percent=63.8, used=8120983552, free=4616728576)
2020-04-23 12:58:45.184387%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:45.184387%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:45,238] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:45] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 12:58:47.249433 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:58:47.249433%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.5
2020-04-23 12:58:47.249433%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616511488, percent=63.8, used=8121200640, free=4616511488)
2020-04-23 12:58:47.249433%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:47,279] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:47] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    420.0 MiB    420.0 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    420.0 MiB      0.0 MiB           entity = {"value": value,
    75    420.0 MiB      0.0 MiB                     "start": start,
    76    420.0 MiB      0.0 MiB                     "end": end,
    77    420.0 MiB      0.0 MiB                     "confidence": 1.0,
    78    420.0 MiB      0.0 MiB                     "entity": name,
    79    420.0 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    420.0 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    420.0 MiB    420.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    420.0 MiB      0.0 MiB           text = message.text
    88    420.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    420.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    420.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    420.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    420.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    420.0 MiB      0.0 MiB                   low_key = key.lower()
    96    420.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    420.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    420.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    420.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    420.0 MiB      0.0 MiB                   if( singular_key is False):
   103    420.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    420.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    420.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109    420.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    420.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    420.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    420.0 MiB      0.0 MiB               entities = old_entities
   114    420.0 MiB      0.0 MiB               words = text.split(' ')
   115    420.0 MiB      0.0 MiB               for w in words:
   116    420.0 MiB      0.0 MiB                   word =w
   117    420.0 MiB      0.0 MiB                   word_lower =word.lower()
   118    420.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    420.0 MiB      0.0 MiB                   if (word_singular is False):
   120    420.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    420.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    420.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    420.0 MiB      0.0 MiB                       start = text.find(w)
   128    420.0 MiB      0.0 MiB                       end = start + len(w)
   129    420.0 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    420.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    420.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    420.0 MiB      0.0 MiB                   low_key = key.lower()
   139    420.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    420.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    420.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    420.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    420.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    420.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 7737 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0120742}, {'confidence': 0.9568973779678345, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0021057}, {'confidence': 0.974357008934021, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631389.976206}, {'confidence': 0.9798263311386108, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631385.9338634}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587631381.912646, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '7ce82cdd3dad4fe98a4d09bc8b683fa6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587631381.9116485}, {'event': 'user', 'input_channel': None, 'message_id': 'caf79fb9a3db4609ab052e280ffe3a30', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587635283.1540413}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635283.1540413, 'value': 'alive'}, {'confidence': 0.9762812852859497, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': None, 'timestamp': 1587635285.6850183}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587635285.6850183, 'value': None}, {'confidence': 0.9619179368019104, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7632554}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7782173}, {'event': 'user', 'input_channel': None, 'message_id': 'c040bc5f53884b90a93a518fae1cb0a7', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587635920.8607872}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635920.8607872, 'value': 'alive'}, {'confidence': 0.9778537750244141, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635922.9639947}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587635922.9639947, 'value': 'Keep_alive$$0.904667524197289'}, {'confidence': 0.9764882326126099, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635925.1434398}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587635925.1434398}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635925.1434398, 'value': 'alive'}, {'event': 'form', 'name': None, 'timestamp': 1587635925.1434398}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587635925.1434398, 'value': None}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635927.2349703}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'here is the response of keep alive intent ', 'timestamp': 1587635927.2349703}, {'event': 'slot', 'name': 'Conversation_finished', 'timestamp': 1587635927.2349703, 'value': 'yes'}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635927.2414236}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587635927.2414236, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': 'yes', 'Current_tracker_intent_name': 'Keep_alive$$0.904667524197289', 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0120742}, {'confidence': 0.9568973779678345, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631394.0021057}, {'confidence': 0.974357008934021, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631389.976206}, {'confidence': 0.9798263311386108, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587631385.9338634}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587631381.912646, 'value': 'alive'}, {'event': 'user', 'input_channel': None, 'message_id': '7ce82cdd3dad4fe98a4d09bc8b683fa6', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587631381.9116485}, {'event': 'user', 'input_channel': None, 'message_id': 'caf79fb9a3db4609ab052e280ffe3a30', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587635283.1540413}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635283.1540413, 'value': 'alive'}, {'confidence': 0.9762812852859497, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587635285.6850183}, {'event': 'form', 'name': None, 'timestamp': 1587635285.6850183}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587635285.6850183, 'value': None}, {'confidence': 0.9619179368019104, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7632554}, {'confidence': 0.9604269862174988, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635287.7782173}, {'event': 'user', 'input_channel': None, 'message_id': 'c040bc5f53884b90a93a518fae1cb0a7', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587635920.8607872}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635920.8607872, 'value': 'alive'}, {'confidence': 0.9778537750244141, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635922.9639947}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587635922.9639947, 'value': 'Keep_alive$$0.904667524197289'}, {'confidence': 0.9764882326126099, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635925.1434398}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587635925.1434398}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587635925.1434398, 'value': 'alive'}, {'event': 'form', 'name': None, 'timestamp': 1587635925.1434398}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587635925.1434398, 'value': None}, {'confidence': 0.9592595100402832, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635927.2349703}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'here is the response of keep alive intent ', 'timestamp': 1587635927.2349703}, {'event': 'slot', 'name': 'Conversation_finished', 'timestamp': 1587635927.2349703, 'value': 'yes'}, {'confidence': 0.957161009311676, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587635927.2414236}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587635927.2414236, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': 'yes', 'Current_tracker_intent_name': 'Keep_alive$$0.904667524197289', 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Keep_alive$$0.904667524197289']
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
2020-04-23 12:58:49.291108 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:58:49.291108%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.3
2020-04-23 12:58:49.291108%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4618153984, percent=63.7, used=8119558144, free=4618153984)
2020-04-23 12:58:49.291108%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:49,330] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-23 12:58:49,341] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mPOST /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:58:49.389816 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 12:58:49.389816%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.1
2020-04-23 12:58:49.389816%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4617162752, percent=63.8, used=8120549376, free=4617162752)
2020-04-23 12:58:49.390808%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.390808%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.397792 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:58:49.397792%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:58:49.397792%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616781824, percent=63.8, used=8120930304, free=4616781824)
2020-04-23 12:58:49.398789%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.398789%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:49,399] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:49.708428 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:58:49.708428%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.8
2020-04-23 12:58:49.708428%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4608847872, percent=63.8, used=8128864256, free=4608847872)
2020-04-23 12:58:49.708428%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.708428%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:49,709] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:49.714412 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:58:49.714412%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 12:58:49.714412%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4611067904, percent=63.8, used=8126644224, free=4611067904)
2020-04-23 12:58:49.714412%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.714412%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.721395%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:49,727] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:49.730377 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 12:58:49.730377%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 12:58:49.730377%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4608876544, percent=63.8, used=8128835584, free=4608876544)
2020-04-23 12:58:49.730377%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:49,732] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:49.959015 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:58:49.959015%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.6
2020-04-23 12:58:49.959015%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4608897024, percent=63.8, used=8128815104, free=4608897024)
2020-04-23 12:58:49.959015%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.959015%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:49.962018%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:49,967] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:49] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:50.015814 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 12:58:50.015814%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 12:58:50.015814%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4608806912, percent=63.8, used=8128905216, free=4608806912)
2020-04-23 12:58:50.015814%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:50.023831%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:50,027] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:50] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.167269 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:58:51.167269%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.3
2020-04-23 12:58:51.167269%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4606914560, percent=63.8, used=8130797568, free=4606914560)
2020-04-23 12:58:51.168269%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.168269%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,169] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.476047 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:58:51.476047%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.5
2020-04-23 12:58:51.476047%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4604358656, percent=63.9, used=8133353472, free=4604358656)
2020-04-23 12:58:51.476047%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.476047%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.479039%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.482059 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 12:58:51.482059%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:51.482059%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4604346368, percent=63.9, used=8133365760, free=4604346368)
2020-04-23 12:58:51.483027%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.483027%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,485] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
[2020-04-23 12:58:51,487] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.490008 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:58:51.490008%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:51.491008%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4604305408, percent=63.9, used=8133406720, free=4604305408)
2020-04-23 12:58:51.491008%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.491008%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,492] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.494994 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-23 12:58:51.494994%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:58:51.494994%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4604305408, percent=63.9, used=8133406720, free=4604305408)
2020-04-23 12:58:51.494994%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.494994%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,496] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.499981 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-23 12:58:51.499981%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:51.499981%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4604280832, percent=63.9, used=8133431296, free=4604280832)
2020-04-23 12:58:51.500978%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,503] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.506962 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 12:58:51.506962%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:58:51.506962%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4604280832, percent=63.9, used=8133431296, free=4604280832)
2020-04-23 12:58:51.506962%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,507] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    420.5 MiB    420.5 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    420.5 MiB      0.0 MiB       try:
   660    420.5 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    420.5 MiB      0.0 MiB           data = request.get_json('data')
   662    420.5 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    420.5 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    420.5 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    420.5 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    420.5 MiB      0.0 MiB           sender = data["sender"]
   672    420.5 MiB      0.0 MiB           if not "conversation_id" in data:
   673    420.5 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    420.5 MiB      0.0 MiB           sission_id = data["identifier"]
   677    420.5 MiB      0.0 MiB           Channel = data["Channel"]
   678    420.5 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    420.5 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    420.5 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    420.5 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    420.5 MiB      0.0 MiB           language = data["language"]
   685                             
   686    420.5 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    420.5 MiB      0.0 MiB           userMsg = data["message"]
   690    420.5 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    420.5 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    420.5 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    420.5 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    420.7 MiB      0.2 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    420.7 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 12:58:51,622] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
action_restart -------------------------------- {}

[2020-04-23 12:58:51,624] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 12:58:51,629] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': None, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.904667524197289, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9592595100402832, 'name': 'action_SetContextSlots'}, {'confidence': 0.957161009311676, 'name': 'action_listen'}], 'reply': [{'_order': 1, 'recipient_id': '59::1.1.1.1::Default::any', 'text': 'here is the response of keep alive intent', 'type': 'text'}], 'reply1': [{'recipient_id': '59::1.1.1.1::Default::any', 'text': 'here is the response of keep alive intent'}], 'slots': [{'Current_tracker_intent_name': 'Keep_alive'}, {'Keep_alive_entity': 'alive'}, {'Conversation_finished': 'yes'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Keep_alive_entity': 'alive'}, {'requested_slot': None}, {'Keep_alive_entity': 'alive'}, {'Current_tracker_intent_name': 'Keep_alive'}, {'Keep_alive_entity': 'alive'}, {'requested_slot': None}, {'Conversation_finished': 'yes'}], 'story': '## 59::1.1.1.1::Default::any\n    - action_SetContextSlots\n    - hci_form\n    - action_setIntent_id\n    - slot{"Keep_alive_entity": "alive"}\n* Keep_alive: keep [alive](Keep_alive_entity)\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - hci_form\n    - form{"name": "hci_form"}\n    - form{"name": null}\n    - slot{"requested_slot": null}\n    - action_SetContextSlots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n    - slot{"Current_tracker_intent_name": "Keep_alive$$0.904667524197289"}\n    - hci_form\n    - form{"name": "hci_form"}\n    - slot{"Keep_alive_entity": "alive"}\n    - form{"name": null}\n    - slot{"requested_slot": null}\n    - action_SetContextSlots\n    - slot{"Conversation_finished": "yes"}\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
18
1
Content-Type: multipart/mixed; boundary="===============3362139240838254090=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============3362139240838254090==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 52.8 percent

- RAM Usage : 63.8 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 18
--===============3362139240838254090==--

2020-04-23 12:58:51.791522 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 12:58:51.791522%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 12:58:51.792550%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4606971904, percent=63.8, used=8130740224, free=4606971904)
2020-04-23 12:58:51.792550%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.792550%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.794521%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,797] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.804492 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:58:51.804492%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:58:51.804492%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4606906368, percent=63.8, used=8130805760, free=4606906368)
2020-04-23 12:58:51.805486%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.805486%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.810474 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-23 12:58:51.810474%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 12:58:51.810474%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4606971904, percent=63.8, used=8130740224, free=4606971904)
2020-04-23 12:58:51.810474%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.810474%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.813463%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.818450%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,829] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.830418 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-23 12:58:51.830418%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:58:51.830418%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4606971904, percent=63.8, used=8130740224, free=4606971904)
2020-04-23 12:58:51.830418%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,835] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.837399 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 12:58:51.837399%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-23 12:58:51.838395%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4606963712, percent=63.8, used=8130748416, free=4606963712)
2020-04-23 12:58:51.838395%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:51.843382%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,847] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-23 12:58:51.852359%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:51,858] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:51] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:57.640665 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:58:57.640665%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.9
2020-04-23 12:58:57.640665%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4602650624, percent=63.9, used=8135061504, free=4602650624)
2020-04-23 12:58:57.640665%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:57.640665%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:57,642] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:57] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:58:57.949911 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:58:57.949911%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.2
2020-04-23 12:58:57.949911%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4602802176, percent=63.9, used=8134909952, free=4602802176)
2020-04-23 12:58:57.949911%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:57.949911%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:58:57.954863%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:58:57,965] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:58:57] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
Email sent!
2020-04-23 12:59:00.362398 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-23 12:59:00.362398%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.8
2020-04-23 12:59:00.362398%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4602249216, percent=63.9, used=8135462912, free=4602249216)
2020-04-23 12:59:00.362398%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:00.362398%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:00,364] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:00] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:00.672376 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-23 12:59:00.672376%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.2
2020-04-23 12:59:00.672376%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4605919232, percent=63.8, used=8131792896, free=4605919232)
2020-04-23 12:59:00.672376%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:00.672376%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:00.679354%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:00,689] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:00] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:02.174712 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [OPTIONS]
2020-04-23 12:59:02.174712%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.7
2020-04-23 12:59:02.174712%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4612096000, percent=63.8, used=8125616128, free=4612096000)
2020-04-23 12:59:02.174712%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:02,176] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:02] "[37mOPTIONS /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:59:02.484731 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-23 12:59:02.484731%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.0
2020-04-23 12:59:02.485728%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4609310720, percent=63.8, used=8128401408, free=4609310720)
2020-04-23 12:59:02.485728%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:02.485728%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:02.494706%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:04.515584 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-23 12:59:04.516581%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.2
2020-04-23 12:59:04.516581%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4611031040, percent=63.8, used=8126681088, free=4611031040)
2020-04-23 12:59:04.516581%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:04.516581%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:04,575] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:04] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-23 12:59:06.583563 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:59:06.583563%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.3
2020-04-23 12:59:06.583563%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4612890624, percent=63.8, used=8124821504, free=4612890624)
2020-04-23 12:59:06.583563%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:06,610] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:06] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-23 12:59:08.618429 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-23 12:59:08.618429%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.2
2020-04-23 12:59:08.618429%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4535406592, percent=64.4, used=8202305536, free=4535406592)
2020-04-23 12:59:08.618429%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:08,643] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:08] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-23 12:59:08,649] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:08] "[37mPOST /addintent HTTP/1.1[0m" 200 -
2020-04-23 12:59:08.703208 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 12:59:08.703208%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.9
2020-04-23 12:59:08.703208%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4535390208, percent=64.4, used=8202321920, free=4535390208)
2020-04-23 12:59:08.704208%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:08.704208%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:08,706] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:08] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:09.013021 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 12:59:09.013021%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.2
2020-04-23 12:59:09.014018%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4525580288, percent=64.5, used=8212131840, free=4525580288)
2020-04-23 12:59:09.014018%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.014018%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.020009%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.030973 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 12:59:09.030973%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:59:09.030973%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4525580288, percent=64.5, used=8212131840, free=4525580288)
2020-04-23 12:59:09.030973%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.030973%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:09,032] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:09] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:09.040947 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 12:59:09.040947%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 12:59:09.040947%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4526731264, percent=64.5, used=8210980864, free=4526731264)
2020-04-23 12:59:09.040947%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:09,042] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:09] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
[2020-04-23 12:59:09,043] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:09] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:09.263778 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 12:59:09.263778%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:49.1
2020-04-23 12:59:09.263778%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4525109248, percent=64.5, used=8212602880, free=4525109248)
2020-04-23 12:59:09.263778%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.263778%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.266770%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:09,276] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:09] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:09.350383 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 12:59:09.350383%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:52.0
2020-04-23 12:59:09.350383%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4525309952, percent=64.5, used=8212402176, free=4525309952)
2020-04-23 12:59:09.350383%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:09.356366%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:09,360] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:09] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:10.406207 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 12:59:10.406207%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.0
2020-04-23 12:59:10.407206%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527083520, percent=64.5, used=8210628608, free=4527083520)
2020-04-23 12:59:10.407206%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:10.407206%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:10,411] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:10] "[37mOPTIONS /trainAgent?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:10.719309 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 12:59:10.719309%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.8
2020-04-23 12:59:10.719309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4525481984, percent=64.5, used=8212230144, free=4525481984)
2020-04-23 12:59:10.719309%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:10.719309%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:10.722298%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:10,738] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:10] "[31m[1mPOST /trainAgent?agentId=60 HTTP/1.1[0m" 400 -
2020-04-23 12:59:23.823046 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 12:59:23.823046%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.3
2020-04-23 12:59:23.824046%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4580859904, percent=64.0, used=8156852224, free=4580859904)
2020-04-23 12:59:23.824046%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:23.824046%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:23,825] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:23] "[37mOPTIONS /trainAgent?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 12:59:24.075187 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 12:59:24.075187%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.2
2020-04-23 12:59:24.075187%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4581396480, percent=64.0, used=8156315648, free=4581396480)
2020-04-23 12:59:24.075187%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:24.075187%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 12:59:24.077738%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 12:59:24,092] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 12:59:24] "[31m[1mPOST /trainAgent?agentId=60 HTTP/1.1[0m" 400 -
[2020-04-23 13:00:40,406] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-23 13:00:44.708795 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-23 13:00:44.708795%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.0
2020-04-23 13:00:44.708795%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4864888832, percent=61.8, used=7872823296, free=4864888832)
2020-04-23 13:00:44.708795%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:00:44.708795%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:00:44,711] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:00:44] "[37mOPTIONS /trainAgent?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 13:00:44.896292 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-23 13:00:44.896292%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.8
2020-04-23 13:00:44.896292%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4863909888, percent=61.8, used=7873802240, free=4863909888)
2020-04-23 13:00:44.896292%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:00:44.896292%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:00:44.960023%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:00:44,971] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 13:00:44.971967
[2020-04-23 13:00:45,047] ERROR in GenericChatbotController: opening the pipeline config for agent  60
keys ['case_sensitive']
keys ['max_history']
keys ['analyzer']
keys ['min_ngram']
keys ['max_ngram']
congie is  language: en
pipeline:
- name: "WhitespaceTokenizer"
- name: "RegexFeaturizer"
  case_sensitive: "False"
- name: "CRFEntityExtractor"
- name: "EntitySynonymMapper"
- name: "CountVectorsFeaturizer"
  max_history: "0"
  analyzer: "char_wb"
  min_ngram: 1
  max_ngram: 4
- name: "EmbeddingIntentClassifier"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "60/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpnetmvxid\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpnetmvxid\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpnetmvxid model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
2020-04-23 13:00:46.999817 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 13:00:46.999817%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.1
2020-04-23 13:00:46.999817%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4759920640, percent=62.6, used=7977791488, free=4759920640)
2020-04-23 13:00:47.000787%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:00:47.000787%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:00:47.007768%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2656 2656
 2- default platform is not  Null 
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    402.8 MiB    402.8 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    402.8 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    402.8 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    402.8 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    402.8 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    402.8 MiB      0.0 MiB                   return pickle.load(f)


map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    440.9 MiB    440.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    440.9 MiB      0.0 MiB           entity = {"value": value,
    75    440.9 MiB      0.0 MiB                     "start": start,
    76    440.9 MiB      0.0 MiB                     "end": end,
    77    440.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    440.9 MiB      0.0 MiB                     "entity": name,
    79    440.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    440.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    440.9 MiB    440.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    440.9 MiB      0.0 MiB           text = message.text
    88    440.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    440.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    440.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    440.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    440.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    440.9 MiB      0.0 MiB                   low_key = key.lower()
    96    440.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    440.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    440.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    440.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    440.9 MiB      0.0 MiB                   if( singular_key is False):
   103    440.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    440.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    440.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    440.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    440.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    440.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    440.9 MiB      0.0 MiB               entities = old_entities
   114    440.9 MiB      0.0 MiB               words = text.split(' ')
   115    440.9 MiB      0.0 MiB               for w in words:
   116    440.9 MiB      0.0 MiB                   word =w
   117    440.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    440.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    440.9 MiB      0.0 MiB                   if (word_singular is False):
   120    440.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    440.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    440.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    440.9 MiB      0.0 MiB                       start = text.find(w)
   128    440.9 MiB      0.0 MiB                       end = start + len(w)
   129    440.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    440.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    440.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    440.9 MiB      0.0 MiB                   low_key = key.lower()
   139    440.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    440.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    440.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    440.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    440.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    440.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    498.9 MiB    498.9 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    498.9 MiB      0.0 MiB           entity = {"value": value,
    75    498.9 MiB      0.0 MiB                     "start": start,
    76    498.9 MiB      0.0 MiB                     "end": end,
    77    498.9 MiB      0.0 MiB                     "confidence": 1.0,
    78    498.9 MiB      0.0 MiB                     "entity": name,
    79    498.9 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    498.9 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    498.9 MiB    498.9 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    498.9 MiB      0.0 MiB           text = message.text
    88    498.9 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    498.9 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    498.9 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    498.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    498.9 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    498.9 MiB      0.0 MiB                   low_key = key.lower()
    96    498.9 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    498.9 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    498.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    498.9 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    498.9 MiB      0.0 MiB                   if( singular_key is False):
   103    498.9 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    498.9 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    498.9 MiB      0.0 MiB               old_entities = message.get("entities")
   109    498.9 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    498.9 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    498.9 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    498.9 MiB      0.0 MiB               entities = old_entities
   114    498.9 MiB      0.0 MiB               words = text.split(' ')
   115    498.9 MiB      0.0 MiB               for w in words:
   116    498.9 MiB      0.0 MiB                   word =w
   117    498.9 MiB      0.0 MiB                   word_lower =word.lower()
   118    498.9 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    498.9 MiB      0.0 MiB                   if (word_singular is False):
   120    498.9 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    498.9 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    498.9 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    498.9 MiB      0.0 MiB                       start = text.find(w)
   128    498.9 MiB      0.0 MiB                       end = start + len(w)
   129    498.9 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    498.9 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    498.9 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    498.9 MiB      0.0 MiB                   low_key = key.lower()
   139    498.9 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    498.9 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    498.9 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    498.9 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    498.9 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    498.9 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 4213 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1587635931.575777}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587635931.575777}, {'event': 'user', 'input_channel': None, 'message_id': '0912aabd82af409a8bc514a26ff754cb', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587636059.3364184}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587636059.3364184, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636061.4198732}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587636061.4198732, 'value': 'Keep_alive$$0.904667524197289'}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636063.6551354}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587636063.6551354}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587636063.6551354, 'value': 'alive'}, {'event': 'form', 'name': None, 'timestamp': 1587636063.6551354}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587636063.6551354, 'value': None}, {'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636065.6979408}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'here is the response of keep alive intent ', 'timestamp': 1587636065.6979408}, {'event': 'slot', 'name': 'Conversation_finished', 'timestamp': 1587636065.6979408, 'value': 'yes'}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636065.7029285}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587636065.7029285, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': 'yes', 'Current_tracker_intent_name': 'Keep_alive$$0.904667524197289', 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1587635931.575777}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587635931.575777}, {'event': 'user', 'input_channel': None, 'message_id': '0912aabd82af409a8bc514a26ff754cb', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587636059.3364184}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587636059.3364184, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636061.4198732}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587636061.4198732, 'value': 'Keep_alive$$0.904667524197289'}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636063.6551354}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587636063.6551354}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587636063.6551354, 'value': 'alive'}, {'event': 'form', 'name': None, 'timestamp': 1587636063.6551354}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587636063.6551354, 'value': None}, {'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636065.6979408}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'here is the response of keep alive intent ', 'timestamp': 1587636065.6979408}, {'event': 'slot', 'name': 'Conversation_finished', 'timestamp': 1587636065.6979408, 'value': 'yes'}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587636065.7029285}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587636065.7029285, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': 'yes', 'Current_tracker_intent_name': 'Keep_alive$$0.904667524197289', 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Keep_alive$$0.904667524197289']
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
2020-04-23 13:01:07.898963 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:01:07.898963%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:49.7
2020-04-23 13:01:07.898963%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4429647872, percent=65.2, used=8308064256, free=4429647872)
2020-04-23 13:01:07.898963%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:01:07.898963%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    502.2 MiB    502.2 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    502.2 MiB      0.0 MiB       try:
   660    502.2 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    502.2 MiB      0.0 MiB           data = request.get_json('data')
   662    502.2 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    502.2 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    502.2 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    502.2 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    502.2 MiB      0.0 MiB           sender = data["sender"]
   672    502.2 MiB      0.0 MiB           if not "conversation_id" in data:
   673    502.2 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    502.2 MiB      0.0 MiB           sission_id = data["identifier"]
   677    502.2 MiB      0.0 MiB           Channel = data["Channel"]
   678    502.2 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    502.2 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    502.2 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    502.2 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    502.2 MiB      0.0 MiB           language = data["language"]
   685                             
   686    502.2 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    502.2 MiB      0.0 MiB           userMsg = data["message"]
   690    502.2 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    502.2 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    502.2 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    502.2 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    503.6 MiB      1.4 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    503.6 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:01:10,074] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:01:10] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
action_restart -------------------------------- {}

[2020-04-23 13:01:10,078] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:01:10] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 13:01:10,084] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': None, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.904667524197289, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9547483921051025, 'name': 'action_SetContextSlots'}, {'confidence': 0.9564258456230164, 'name': 'action_listen'}], 'reply': [{'_order': 1, 'recipient_id': '59::1.1.1.1::Default::any', 'text': 'here is the response of keep alive intent', 'type': 'text'}], 'reply1': [{'recipient_id': '59::1.1.1.1::Default::any', 'text': 'here is the response of keep alive intent'}], 'slots': [{'Current_tracker_intent_name': 'Keep_alive'}, {'Keep_alive_entity': 'alive'}, {'Conversation_finished': 'yes'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Current_tracker_intent_name': 'Keep_alive'}, {'Keep_alive_entity': 'alive'}, {'requested_slot': None}, {'Conversation_finished': 'yes'}], 'story': '## 59::1.1.1.1::Default::any\n    - reset_slots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n    - slot{"Current_tracker_intent_name": "Keep_alive$$0.904667524197289"}\n    - hci_form\n    - form{"name": "hci_form"}\n    - slot{"Keep_alive_entity": "alive"}\n    - form{"name": null}\n    - slot{"requested_slot": null}\n    - action_SetContextSlots\n    - slot{"Conversation_finished": "yes"}\n', 'text': 'keep alive'}, Status_code: 200
['admin@admin.com', 'walaa.mahfoud@gmail.com']
19
1
Content-Type: multipart/mixed; boundary="===============9204167442024836652=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============9204167442024836652==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 57.7 percent

- RAM Usage : 65.8 percent

- Count Of Training Request During Last 12 Hours: 1

- Count Of Conversations During Last 12 Hours: 19
--===============9204167442024836652==--

[2020-04-23 13:01:11,762] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43    466.3 MiB    466.3 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45    466.3 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31    466.3 MiB    466.3 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36    466.3 MiB      0.0 MiB           return []


Email sent!
[2020-04-23 13:01:27,496] INFO in models: Finished training.
60/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47    481.7 MiB    481.7 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56    481.7 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57    481.7 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58    481.7 MiB      0.0 MiB           print(self.gazetteer_path )
    59    481.7 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60    481.7 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64    481.7 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65    481.7 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66    481.7 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179    481.7 MiB    481.7 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183    481.7 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184    481.7 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185    481.7 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187    481.7 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200423-130127.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200423-130127.tar.gz
training Status Code 200  ---------------------  60 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192    466.9 MiB    466.9 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204    466.9 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207    466.9 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208    466.9 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209    466.9 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210    466.9 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x0000025D7857AFC8>
[2020-04-23 13:01:30,322] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:01:30] "[37mPOST /trainAgent?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 13:02:51.441243 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 13:02:51.441243%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.7
2020-04-23 13:02:51.441243%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527005696, percent=64.5, used=8210706432, free=4527005696)
2020-04-23 13:02:51.441243%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:51,442] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:51] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 13:02:51.456203 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 13:02:51.456203%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 13:02:51.456203%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4526977024, percent=64.5, used=8210735104, free=4526977024)
2020-04-23 13:02:51.456203%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:51,458] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:51] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 13:02:51.690810 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 13:02:51.690810%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.2
2020-04-23 13:02:51.690810%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527185920, percent=64.5, used=8210526208, free=4527185920)
2020-04-23 13:02:51.690810%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:02:51.693769%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:51,697] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:51] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 13:02:51.749623 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 13:02:51.749623%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.8
2020-04-23 13:02:51.750617%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4527091712, percent=64.5, used=8210620416, free=4527091712)
2020-04-23 13:02:51.750617%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:02:51.757601%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:51,764] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:51] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 13:02:53.187439 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/GenerateChatToken [OPTIONS]
2020-04-23 13:02:53.187439%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.7
2020-04-23 13:02:53.187439%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4524548096, percent=64.5, used=8213164032, free=4524548096)
2020-04-23 13:02:53.187439%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:53,190] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:53] "[37mOPTIONS /GenerateChatToken HTTP/1.1[0m" 200 -
2020-04-23 13:02:53.503445 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/GenerateChatToken [POST]
2020-04-23 13:02:53.503445%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.6
2020-04-23 13:02:53.503445%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4524515328, percent=64.5, used=8213196800, free=4524515328)
2020-04-23 13:02:53.504450%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:02:53.504450%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:02:53.514414%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:53,535] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:53] "[37mPOST /GenerateChatToken HTTP/1.1[0m" 200 -
2020-04-23 13:02:58.534212 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getAgentByToken [OPTIONS]
2020-04-23 13:02:58.534212%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.1
2020-04-23 13:02:58.534212%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4287025152, percent=66.3, used=8450686976, free=4287025152)
2020-04-23 13:02:58.535210%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:58,536] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:58] "[37mOPTIONS /getAgentByToken HTTP/1.1[0m" 200 -
2020-04-23 13:02:58.840965 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getAgentByToken [POST]
2020-04-23 13:02:58.840965%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.9
2020-04-23 13:02:58.841961%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4271587328, percent=66.5, used=8466124800, free=4271587328)
2020-04-23 13:02:58.841961%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:02:58,845] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:02:58] "[37mPOST /getAgentByToken HTTP/1.1[0m" 200 -
2020-04-23 13:03:01.283430 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getAgentByToken [POST]
2020-04-23 13:03:01.283430%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:51.6
2020-04-23 13:03:01.283430%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4235898880, percent=66.7, used=8501813248, free=4235898880)
2020-04-23 13:03:01.283430%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:03:01,287] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:03:01] "[37mPOST /getAgentByToken HTTP/1.1[0m" 200 -
2020-04-23 13:03:01.586853 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-23 13:03:01.586853%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:51.9
2020-04-23 13:03:01.586853%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4266078208, percent=66.5, used=8471633920, free=4266078208)
2020-04-23 13:03:01.586853%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:03:01,587] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:03:01] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 13:03:01.894044 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-23 13:03:01.894044%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.8
2020-04-23 13:03:01.894044%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4267036672, percent=66.5, used=8470675456, free=4267036672)
2020-04-23 13:03:01.894044%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:03:01,895] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:03:01] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-23 13:03:17.525577 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [OPTIONS]
2020-04-23 13:03:17.525577%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.9
2020-04-23 13:03:17.526225%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170493952, percent=67.3, used=8567218176, free=4170493952)
2020-04-23 13:03:17.526535%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 13:03:17,531] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:03:17] "[37mOPTIONS /ExternalChat HTTP/1.1[0m" 200 -
2020-04-23 13:03:17.776413 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ExternalChat [POST]
2020-04-23 13:03:17.776413%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.3
2020-04-23 13:03:17.776997%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4154683392, percent=67.4, used=8583028736, free=4154683392)
2020-04-23 13:03:17.776997%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
text :  is it Daraa
old_entities :  []
lower_gazetter_entities :  {}
singular_gazetter_entities :  {}
i
it
daraa
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    476.5 MiB    476.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    476.5 MiB      0.0 MiB           text = message.text
    88    476.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    476.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    476.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    476.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94                                             print("key is ",key,"will lowered")
    95                                             low_key = key.lower()
    96                                             lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    476.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    476.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101                                             singular_key = inflect_engine.singular_noun(key)
   102                                             if( singular_key is False):
   103                                                 singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105                                                 singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    476.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    476.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    476.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    476.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    476.5 MiB      0.0 MiB               entities = old_entities
   114    476.5 MiB      0.0 MiB               words = text.split(' ')
   115    476.5 MiB      0.0 MiB               for w in words:
   116    476.5 MiB      0.0 MiB                   word =w
   117    476.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    476.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    476.5 MiB      0.0 MiB                   if (word_singular is False):
   120    476.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    476.5 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    476.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    476.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    476.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    476.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138                                             low_key = key.lower()
   139                                             if len(key.split(' '))>1 :
   140                                                 start = text.lower().find(low_key)
   141                                                 if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    476.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    476.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    476.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


text :  is it Daraa
old_entities :  []
lower_gazetter_entities :  {}
singular_gazetter_entities :  {}
i
it
daraa
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    476.4 MiB    476.4 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    476.4 MiB      0.0 MiB           text = message.text
    88    476.4 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    476.4 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    476.4 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    476.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94                                             print("key is ",key,"will lowered")
    95                                             low_key = key.lower()
    96                                             lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    476.4 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    476.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101                                             singular_key = inflect_engine.singular_noun(key)
   102                                             if( singular_key is False):
   103                                                 singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105                                                 singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    476.4 MiB      0.0 MiB               old_entities = message.get("entities")
   109    476.4 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    476.4 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    476.4 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    476.4 MiB      0.0 MiB               entities = old_entities
   114    476.4 MiB      0.0 MiB               words = text.split(' ')
   115    476.4 MiB      0.0 MiB               for w in words:
   116    476.4 MiB      0.0 MiB                   word =w
   117    476.4 MiB      0.0 MiB                   word_lower =word.lower()
   118    476.4 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    476.4 MiB      0.0 MiB                   if (word_singular is False):
   120    476.4 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122    476.4 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124    476.4 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    476.4 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    476.4 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    476.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138                                             low_key = key.lower()
   139                                             if len(key.split(' '))>1 :
   140                                                 start = text.lower().find(low_key)
   141                                                 if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    476.4 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    476.4 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    476.4 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 3368 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1587636198.5592978}, {'event': 'session_started', 'timestamp': 1587636198.5592978}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587636198.5592978}, {'event': 'user', 'input_channel': None, 'message_id': 'c51258e680cf440694e778243a0ab6b2', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9973363280296326, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.9973363280296326, 'name': 'Ask_intent'}, {'confidence': 0.0026636424008756876, 'name': 'Intent'}], 'text': 'is it Daraa'}, 'text': 'is it Daraa', 'timestamp': 1587636199.459886}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587636201.8024695}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587636201.8024695, 'value': 'Ask_intent$$0.9973363280296321'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587636204.10315}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587636204.10315}, {'event': 'form', 'name': None, 'timestamp': 1587636204.10315}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587636204.10315, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587636206.3014252}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'hello, How can I assist you?', 'timestamp': 1587636206.3014252}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1587636206.3303487}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587636206.3303487, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9973363280296326, 'name': 'Ask_intent'}, 'intent_ranking': [{'confidence': 0.9973363280296326, 'name': 'Ask_intent'}, {'confidence': 0.0026636424008756876, 'name': 'Intent'}], 'text': 'is it Daraa'}, 'paused': False, 'sender_id': '60::212.102.33.102::Default::bba97a8f4d', 'slots': {'Conversation_finished': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Ask_intent$$0.9973363280296321']
----------------------------------------- intent name when access getFormatedReply Ask_intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1625    476.0 MiB    476.0 MiB   @app.route('/ExternalChat', methods=['post'])
  1626                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1627                             @profile
  1628                             def external_chat():
  1629                                 global loadedAgentsMap
  1630    476.0 MiB      0.0 MiB       try:
  1631    476.0 MiB      0.0 MiB           args = request.args
  1632    476.0 MiB      0.0 MiB           if args is not None and "channel" in args:
  1633                                         if "channel" in args:
  1634                                             Channel = args["channel"].capitalize()
  1635                                         if "token" in args:
  1636                                             token = args["token"]
  1637                                         print(token)
  1638                                         print(Channel)
  1639                                         if Channel == "Telegram":
  1640                                             try :
  1641                             
  1642                                                 agent = Agent.query.filter_by(telegram_token=token).first()
  1643                                                 if(agent is None):
  1644                                                     raise ValueError("There is no agent has telegram_token =" + str(token))
  1645                                                 if agent.activate_telegram is False:
  1646                                                     raise ValueError("This agent is not active with telegram")
  1647                             
  1648                                                 agent_id = agent.id
  1649                             
  1650                                                 data = request.get_json('data')
  1651                             
  1652                                                 print("telegram response: " + str(data))
  1653                                                 # we can get chat id https://core.telegram.org/bots/api#chat
  1654                                                 #conversation_id = data['message']['chat']['id']
  1655                                                 conversation_id = None
  1656                                                 sission_id = data['message']["from"]['id']
  1657                                                 sender = str(Channel) + "_" + str(data['message']['chat']['first_name']) + "_" + str(data['message']['chat']['last_name']) + "_" + str(agent_id)
  1658                                                 userMsg = data['message']['text']
  1659                                                 chat_telegram_id = data['message']['chat']['id']
  1660                                                 # should merge with the orginal external chat with some changes
  1661                                                 chat_url = url + "/chatrestart"
  1662                             
  1663                                                 tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(
  1664                                                     sission_id)  # tracker_id + 1
  1665                             
  1666                                                 _agent = Agent.query.get(agent_id)
  1667                                                 if conversation_id is None:
  1668                                                     default_platform_object = Platform.query.filter_by(name=Channel).first()
  1669                                                     if default_platform_object is None:
  1670                                                         raise ValueError("Unfortunately, This channel/platform is not supported")
  1671                                                     else:
  1672                                                         new_conversation = ConversationHistory(startDateTime=date_time.now(),
  1673                                                                                                creationDate=date.today(),
  1674                                                                                                sessionId=sission_id, userId=sender,
  1675                                                                                                agent_id=agent_id,
  1676                                                                                                platform=Channel)
  1677                                                         new_conversation.sessionId = new_conversation.id
  1678                             
  1679                                                 else:
  1680                                                     new_conversation = ConversationHistory.query.get(conversation_id)
  1681                             
  1682                                                 if _agent is None:
  1683                                                     raise ValueError("there is no agent has id =" + str(agent_id))
  1684                             
  1685                                                 if _agent.enableWebDemo == False:
  1686                                                     raise ValueError(
  1687                                                         " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1688                                                 # asyncio.set_event_loop(asyncio.new_event_loop())
  1689                                                 sender_id = tracker_id
  1690                             
  1691                                                 language = _agent.language
  1692                             
  1693                             
  1694                                                 map_key = str(agent_id) + str(language)
  1695                                                 print("LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL")
  1696                                                 load_agent_to_map(agent_id, language)
  1697                                                 print("2222222222222222222222")
  1698                             
  1699                                                 """
  1700                                                 # if map_key in loadedAgentsMap:
  1701                                                 if not map_key in loadedAgentsMap:
  1702                                                     respons = train_agent(agent_id, language)
  1703                                                     if not respons[0].status_code == 200:
  1704                                                         return respons
  1705                                                 """
  1706                                                 agent_obj = loadedAgentsMap[map_key]["agent"]
  1707                                                 print("ppppppppppppppppppppppppp")
  1708                             
  1709                                                 # loop1 = asyncio.get_event_loop()
  1710                                                 result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1711                                                 response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1712                                                 if "entities" in response:
  1713                             
  1714                                                     for entity in response["entities"]:
  1715                                                         if entity["extractor"] != "CRFEntityExtractor":
  1716                             
  1717                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1718                                                             if entity_obj is not None:
  1719                                                                 entity["entity"] = entity_obj.name
  1720                             
  1721                                                 state = retrieve_tracker(tracker_id, agent_id, language)
  1722                                                 print("state ------------------------------", state)
  1723                                                 state = state[0].json
  1724                             
  1725                                                 print("state ------------------------------", state)
  1726                             
  1727                                                 state_stroy = retrieve_story(tracker_id, agent_id, language)
  1728                                                 state_stroy = state_stroy.json
  1729                             
  1730                                                 final_res = []
  1731                                                 print("444444444")
  1732                             
  1733                                                 if "entities" in response:
  1734                                                     for entity in response["entities"]:
  1735                                                         if entity["extractor"] != "CRFEntityExtractor":
  1736                                                             entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1737                                                             if entity_obj is not None:
  1738                                                                 entity["entity"] = entity_obj.name
  1739                                                 print("5555555555")
  1740                             
  1741                                                 if "events" in state:
  1742                                                     for res in state["events"]:
  1743                                                         if res["event"] == "slot":
  1744                                                             final_res.append({res["name"]: res["value"]})
  1745                                                 print("666666666666")
  1746                             
  1747                                                 if "intent_ranking" in response:
  1748                                                     del response['intent_ranking']
  1749                                                 result = []
  1750                                                 if "name" in response["intent"]:
  1751                                                     try:
  1752                                                         all_intent_name = []
  1753                                                         for slot in final_res:
  1754                                                             if "Current_tracker_intent_name" in slot:
  1755                                                                 all_intent_name.append(slot["Current_tracker_intent_name"])
  1756                                                                 slot["Current_tracker_intent_name"] = \
  1757                                                                 slot["Current_tracker_intent_name"].split('$$')[0]
  1758                                                         print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  1759                                                         intent_name = all_intent_name[-1].split('$$')[0]
  1760                                                         intent_confidence = float(all_intent_name[-1].split('$$')[1])
  1761                             
  1762                                                         # response["intent"]["name"] = intent_name
  1763                                                     except Exception as e:
  1764                                                         intent_name = response["intent"]["name"]
  1765                                                         intent_confidence = float(response["intent"]["confidence"])
  1766                             
  1767                                                     result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1,
  1768                                                                                                                                final_res,
  1769                                                                                                                                agent_id,
  1770                                                                                                                                intent_name,
  1771                                                                                                                                response["entities"])
  1772                                                 if (new_conversation.chattexts is None):
  1773                                                     new_conversation.chattexts = []
  1774                             
  1775                                                 new_conversation.chattexts.append(
  1776                                                     ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  1777                                                              ExtractedEntities=[
  1778                                                                  ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  1779                                                                  for ent in response["entities"]]))
  1780                                                 if response["intent"]["name"] == "out_of_scope":
  1781                                                     """ Get confirmed fallback case"""
  1782                             
  1783                                                     new_conversation.isFallback = True
  1784                                                     new_conversation.endDateTime = date_time.now()
  1785                                                     duration = new_conversation.endDateTime - new_conversation.startDateTime
  1786                                                     duration_in_s = duration.total_seconds()
  1787                                                     minutes = int(divmod(duration_in_s, 60)[0])
  1788                                                     if (minutes < 1):
  1789                                                         new_conversation.duration = str(int(duration_in_s)) + " sec"
  1790                                                     else:
  1791                                                         new_conversation.duration = str(minutes) + " min"
  1792                             
  1793                                                     chattexts = new_conversation.chattexts
  1794                                                     chattexts.reverse()
  1795                                                     print("10000000000000")
  1796                             
  1797                                                     for chat in chattexts:
  1798                                                         print("111111111")
  1799                             
  1800                                                         if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  1801                                                             """Change the last chattext which has intentname to isFallbackIntent = True"""
  1802                                                             chat.isFallBackIntent = True
  1803                                                             break
  1804                             
  1805                                                     for res in result:
  1806                                                         """ Add Rasa response to the history when get confirmed fallback Case"""
  1807                                                         new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  1808                             
  1809                                                     db.session.commit()
  1810                             
  1811                                                     res = requests.post(chat_url,
  1812                                                                         json={"message": "/restart", "language": language, "agent_id": agent_id,
  1813                                                                               "identifier": sission_id, "Channel": Channel, "sender": sender},
  1814                                                                         verify=False)
  1815                                                     res.close()
  1816                                                     """
  1817                                                     deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  1818                                                     db.session.delete(deletet_events)
  1819                                                     db.session.commit()
  1820                                                     """
  1821                             
  1822                                                     telegram_res = send_message_telegram(token,chat_telegram_id,result)
  1823                             
  1824                                                     if telegram_res.status_code == 200:
  1825                                                         return ({}),200
  1826                                                     else:
  1827                                                         return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1828                             
  1829                             
  1830                                                 for res in result:
  1831                                                     new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  1832                             
  1833                                                 db.session.add(new_conversation)
  1834                                                 db.session.commit()
  1835                                                 for final_slot in final_slots_res:
  1836                                                     if "Conversation_finished" in final_slot:
  1837                                                         if final_slot["Conversation_finished"] == "yes":
  1838                                                             new_conversation.endDateTime = date_time.now()
  1839                                                             duration = new_conversation.endDateTime - new_conversation.startDateTime
  1840                                                             duration_in_s = duration.total_seconds()
  1841                                                             minutes = int(divmod(duration_in_s, 60)[0])
  1842                                                             if (minutes < 1):
  1843                                                                 new_conversation.duration = str(int(duration_in_s)) + " sec"
  1844                                                             else:
  1845                                                                 new_conversation.duration = str(minutes) + " min"
  1846                                                             db.session.commit()
  1847                                                             res = requests.post(chat_url,
  1848                                                                                 json={"message": "/restart", "language": language,
  1849                                                                                       "agent_id": agent_id,
  1850                                                                                       "identifier": sission_id, "Channel": Channel,
  1851                                                                                       "sender": sender}, verify=False)
  1852                                                             """
  1853                                                             deletet_events = events.query.filter_by(sender_id = sender_id).all()
  1854                             
  1855                                                             for item in deletet_events:
  1856                                                                 db.session.delete(item)
  1857                                                             db.session.commit()
  1858                                                             print("---------------------- Memory Report At the end of externalchat")
  1859                                                             h = hpy()
  1860                                                             print (h.heap())
  1861                                                             """
  1862                                                             res.close()
  1863                             
  1864                                                             telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1865                             
  1866                                                             if telegram_res.status_code == 200:
  1867                                                                 return ({}), 200
  1868                                                             else:
  1869                                                                 return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1870                             
  1871                             
  1872                                                 """
  1873                                                 print("---------------------- Memory Report At the end of externalchat")
  1874                                                 h = hpy()
  1875                                                 print (h.heap())
  1876                                                 """
  1877                             
  1878                                                 telegram_res = send_message_telegram(token, chat_telegram_id, result)
  1879                             
  1880                                                 if telegram_res.status_code == 200:
  1881                                                     return ({}), 200
  1882                                                 else:
  1883                                                     return jsonify({"message": "Message not received from telegram,send it again"}), 400
  1884                             
  1885                             
  1886                                             except Exception as e:
  1887                                                 return jsonify({"message": str(e)}), 400
  1888                                     else:
  1889                             
  1890    476.0 MiB      0.0 MiB               data = request.get_json('data')
  1891    476.0 MiB      0.0 MiB               token = data['token']
  1892                             
  1893    476.0 MiB      0.0 MiB               try:
  1894    476.0 MiB      0.0 MiB                   decripted_data = jwt.decode(token, app.config['SECRET_KEY'])
  1895                                         except:
  1896                                             return jsonify({'message': 'Token is invalid or expired!'}), 401
  1897                             
  1898    476.0 MiB      0.0 MiB               if not "conversation_id" in data:
  1899                                             conversation_id = None
  1900                                         else:
  1901    476.0 MiB      0.0 MiB                   conversation_id = data["conversation_id"]
  1902                             
  1903    476.0 MiB      0.0 MiB               if not "identifier" in data:
  1904                                             raise ValueError("identifier JSON element is required")
  1905    476.0 MiB      0.0 MiB               if not "Channel" in data:
  1906                                             raise ValueError("Channel JSON element is required")
  1907    476.0 MiB      0.0 MiB               if not "sender" in data:
  1908                                             raise ValueError("sender JSON element is required")
  1909                             
  1910    476.0 MiB      0.0 MiB               Channel = data["Channel"].capitalize()
  1911    476.0 MiB      0.0 MiB               sender = data["sender"]
  1912    476.0 MiB      0.0 MiB               sission_id = data["identifier"]
  1913                             
  1914    476.0 MiB      0.0 MiB               agent_id = decripted_data["agent_id"]
  1915                             
  1916                             
  1917    476.0 MiB      0.0 MiB           chat_url = url + "/chatrestart"
  1918                             
  1919    476.0 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
  1920                             
  1921                             
  1922    476.0 MiB      0.0 MiB           _agent = Agent.query.get(agent_id)
  1923    476.0 MiB      0.0 MiB           if conversation_id is None:
  1924    476.0 MiB      0.0 MiB               default_platform_object = Platform.query.filter_by(name=Channel).first()
  1925    476.0 MiB      0.0 MiB               if default_platform_object is None:
  1926                                             raise ValueError("Unfortunately, This channel/platform is not supported")
  1927                                         else:
  1928    476.0 MiB      0.0 MiB                   new_conversation = ConversationHistory(startDateTime=date_time.now(), creationDate=date.today(),
  1929    476.0 MiB      0.0 MiB                                                          sessionId=sission_id, userId=data["sender"], agent_id=agent_id,
  1930    476.0 MiB      0.0 MiB                                                          platform=Channel)
  1931    476.0 MiB      0.0 MiB                   new_conversation.sessionId = new_conversation.id
  1932                             
  1933                                     else:
  1934                                         new_conversation = ConversationHistory.query.get(conversation_id)
  1935                             
  1936    476.0 MiB      0.0 MiB           if _agent is None:
  1937                                         raise ValueError("there is no agent has id =" + str(agent_id))
  1938                             
  1939    476.0 MiB      0.0 MiB           if _agent.enableWebDemo == False:
  1940                                         raise ValueError(
  1941                                             " we are sorry!, you should ask your Agent to activate External Chatting, then you can try again.")
  1942                                     #asyncio.set_event_loop(asyncio.new_event_loop())
  1943    476.0 MiB      0.0 MiB           sender_id = tracker_id
  1944                             
  1945    476.0 MiB      0.0 MiB           language = _agent.language
  1946                             
  1947    476.0 MiB      0.0 MiB           userMsg = data['message']
  1948    476.0 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
  1949    476.0 MiB      0.0 MiB           load_agent_to_map(agent_id,language)
  1950                                     
  1951                                     """
  1952                                     # if map_key in loadedAgentsMap:
  1953                                     if not map_key in loadedAgentsMap:
  1954                                         respons = train_agent(agent_id, language)
  1955                                         if not respons[0].status_code == 200:
  1956                                             return respons
  1957                                     """
  1958    476.0 MiB      0.0 MiB           agent_obj = loadedAgentsMap[map_key]["agent"]
  1959                                     
  1960                                     #loop1 = asyncio.get_event_loop()
  1961    476.4 MiB      0.4 MiB           result1 = asyncio.run(agent_obj.handle_text(userMsg, sender_id=sender_id))
  1962    476.4 MiB      0.0 MiB           response = asyncio.run(agent_obj.parse_message_using_nlu_interpreter(userMsg))
  1963    476.4 MiB      0.0 MiB           if "entities" in response:
  1964                             
  1965    476.4 MiB      0.0 MiB               for entity in response["entities"]:
  1966                                             if entity["extractor"] != "CRFEntityExtractor":
  1967                             
  1968                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1969                                                 if entity_obj is not None:
  1970                                                     entity["entity"] = entity_obj.name
  1971                             
  1972    476.4 MiB      0.0 MiB           state = retrieve_tracker(tracker_id, agent_id, language)
  1973    476.4 MiB      0.0 MiB           print("state ------------------------------", state)
  1974    476.4 MiB      0.0 MiB           state = state[0].json
  1975                                     
  1976    476.4 MiB      0.0 MiB           print("state ------------------------------", state)
  1977                             
  1978    476.4 MiB      0.0 MiB           state_stroy = retrieve_story(tracker_id, agent_id, language)
  1979    476.4 MiB      0.0 MiB           state_stroy = state_stroy.json
  1980                             
  1981    476.4 MiB      0.0 MiB           final_res = []
  1982                                     
  1983    476.4 MiB      0.0 MiB           if "entities" in response:
  1984    476.4 MiB      0.0 MiB               for entity in response["entities"]:
  1985                                             if entity["extractor"] != "CRFEntityExtractor":
  1986                                                 entity_obj = Entity.query.filter_by(SysName=entity["entity"], isSystetmEntity=1).first()
  1987                                                 if entity_obj is not None:
  1988                                                     entity["entity"] = entity_obj.name
  1989                                     
  1990    476.4 MiB      0.0 MiB           if "events" in state:
  1991    476.4 MiB      0.0 MiB               for res in state["events"]:
  1992    476.4 MiB      0.0 MiB                   if res["event"] == "slot":
  1993    476.4 MiB      0.0 MiB                       final_res.append({res["name"]: res["value"]})
  1994                                     
  1995    476.4 MiB      0.0 MiB           if "intent_ranking" in response:
  1996    476.4 MiB      0.0 MiB               del response['intent_ranking']
  1997    476.4 MiB      0.0 MiB           result = []
  1998    476.4 MiB      0.0 MiB           if "name" in response["intent"]:
  1999    476.4 MiB      0.0 MiB               try:
  2000    476.4 MiB      0.0 MiB                   all_intent_name = []
  2001    476.4 MiB      0.0 MiB                   for slot in final_res:
  2002    476.4 MiB      0.0 MiB                       if "Current_tracker_intent_name" in slot:
  2003    476.4 MiB      0.0 MiB                           all_intent_name.append(slot["Current_tracker_intent_name"])
  2004    476.4 MiB      0.0 MiB                           slot["Current_tracker_intent_name"] = slot["Current_tracker_intent_name"].split('$$')[0]
  2005    476.4 MiB      0.0 MiB                   print("intent_name ----------- +++++++++++++++++= ", all_intent_name)
  2006    476.4 MiB      0.0 MiB                   intent_name = all_intent_name[-1].split('$$')[0]
  2007    476.4 MiB      0.0 MiB                   intent_confidence = float(all_intent_name[-1].split('$$')[1])
  2008                             
  2009                                             # response["intent"]["name"] = intent_name
  2010                                         except Exception as e:
  2011                                             intent_name = response["intent"]["name"]
  2012                                             intent_confidence = float(response["intent"]["confidence"])
  2013                             
  2014    476.4 MiB      0.0 MiB               result, final_slots_res, final_entities_result = get_reply_and_slot_format(Channel, result1, final_res,
  2015    476.4 MiB      0.0 MiB                                                                                          agent_id, intent_name,
  2016    476.4 MiB      0.0 MiB                                                                                          response["entities"])
  2017    476.4 MiB      0.0 MiB           if (new_conversation.chattexts is None):
  2018                                         new_conversation.chattexts = []
  2019                             
  2020    476.4 MiB      0.0 MiB           new_conversation.chattexts.append(ChatText(txt=data, isUserSay=True, extractedIntentName=intent_name,
  2021                                                                                ExtractedEntities=[
  2022    476.4 MiB      0.0 MiB                                                          ExtractedEntity(name=ent["entity"], extractedValue=ent["value"])
  2023    476.4 MiB      0.0 MiB                                                          for ent in response["entities"]]))
  2024    476.4 MiB      0.0 MiB           if response["intent"]["name"] == "out_of_scope":
  2025                                         """ Get confirmed fallback case"""
  2026                             
  2027                                         new_conversation.isFallback = True
  2028                                         new_conversation.endDateTime = date_time.now()
  2029                                         duration = new_conversation.endDateTime - new_conversation.startDateTime
  2030                                         duration_in_s = duration.total_seconds()
  2031                                         minutes = int(divmod(duration_in_s, 60)[0])
  2032                                         if (minutes < 1):
  2033                                             new_conversation.duration = str(int(duration_in_s)) + " sec"
  2034                                         else:
  2035                                             new_conversation.duration = str(minutes) + " min"
  2036                             
  2037                                         chattexts = new_conversation.chattexts
  2038                                         chattexts.reverse()
  2039                                         
  2040                                         for chat in chattexts:
  2041                                             
  2042                                             if chat.extractedIntentName is not None and chat.extractedIntentName != "out_of_scope":
  2043                                                 """Change the last chattext which has intentname to isFallbackIntent = True"""
  2044                                                 chat.isFallBackIntent = True
  2045                                                 break
  2046                             
  2047                                         for res in result:
  2048                                             """ Add Rasa response to the history when get confirmed fallback Case"""
  2049                                             new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False, isFallBackIntent=True))
  2050                             
  2051                                         db.session.commit()
  2052                                         
  2053                                         res = requests.post(chat_url, json={"message": "/restart", "language": language, "agent_id": agent_id,
  2054                                                                             "identifier": sission_id, "Channel": Channel, "sender": sender})
  2055                                         #res.close()
  2056                                         """
  2057                                         deletet_events = Event.query.filter_by(sender_id = sender_id).all()
  2058                                         db.session.delete(deletet_events)
  2059                                         db.session.commit()
  2060                                         """
  2061                                         return jsonify(
  2062                                             {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2063                                              "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence} , "entities": final_entities_result,
  2064                                              "entities1": response["entities"], "text": response["text"]}), 200
  2065                             
  2066    476.4 MiB      0.0 MiB           for res in result:
  2067    476.4 MiB      0.0 MiB               new_conversation.chattexts.append(ChatText(txt=res, isUserSay=False))
  2068                             
  2069    476.4 MiB      0.0 MiB           db.session.add(new_conversation)
  2070    476.4 MiB      0.0 MiB           db.session.commit()
  2071    476.4 MiB      0.0 MiB           for final_slot in final_slots_res:
  2072    476.4 MiB      0.0 MiB               if "Conversation_finished" in final_slot:
  2073                                             if final_slot["Conversation_finished"] == "yes":
  2074                                                 new_conversation.endDateTime = date_time.now()
  2075                                                 duration = new_conversation.endDateTime - new_conversation.startDateTime
  2076                                                 duration_in_s = duration.total_seconds()
  2077                                                 minutes = int(divmod(duration_in_s, 60)[0])
  2078                                                 if (minutes < 1):
  2079                                                     new_conversation.duration = str(int(duration_in_s)) + " sec"
  2080                                                 else:
  2081                                                     new_conversation.duration = str(minutes) + " min"
  2082                                                 db.session.commit()
  2083                                                 res = requests.post(chat_url,
  2084                                                                     json={"message": "/restart", "language": language, "agent_id": agent_id,
  2085                                                                           "identifier": sission_id, "Channel": Channel, "sender": sender})
  2086                                                 """
  2087                                                 deletet_events = events.query.filter_by(sender_id = sender_id).all()
  2088                                                 
  2089                                                 for item in deletet_events:
  2090                                                     db.session.delete(item)
  2091                                                 db.session.commit()
  2092                                                 print("---------------------- Memory Report At the end of externalchat")
  2093                                                 h = hpy()
  2094                                                 print (h.heap())
  2095                                                 """
  2096                                                 #res.close()
  2097                                                 return jsonify(
  2098                                                     {"story": state_stroy, "conversation_id": None, "slots1": final_res, "slots": final_slots_res,
  2099                                                      "reply1": result1, "reply": result, "intent": {'name':intent_name,'confidence':intent_confidence},
  2100                                                      "entities": final_entities_result, "entities1": response["entities"],
  2101                                                      "text": response["text"]}), 200
  2102                                     """
  2103                                     print("---------------------- Memory Report At the end of externalchat")
  2104                                     h = hpy()
  2105                                     print (h.heap())
  2106                                     """
  2107    476.4 MiB      0.0 MiB           return jsonify({"story": state_stroy, "conversation_id": new_conversation.id, "reply": result, "slots1": final_res,
  2108    476.4 MiB      0.0 MiB                           "slots": final_slots_res, "intent": {'name':intent_name,'confidence':intent_confidence}, "entities": final_entities_result,
  2109    476.4 MiB      0.0 MiB                           "entities1": response["entities"], "text": response["text"]}), 200
  2110                             
  2111                             
  2112                                 except Exception as e:
  2113                                     db.session.rollback()
  2114                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:03:27,351] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:03:27] "[37mPOST /ExternalChat HTTP/1.1[0m" 200 -
2020-04-23 13:04:59.062344 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:04:59.062344%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.3
2020-04-23 13:04:59.063398%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4277604352, percent=66.4, used=8460107776, free=4277604352)
2020-04-23 13:04:59.064332%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:04:59.064332%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    476.3 MiB    476.3 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    476.3 MiB      0.0 MiB       try:
   660    476.3 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    476.3 MiB      0.0 MiB           data = request.get_json('data')
   662    476.3 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    476.3 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    476.3 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    476.3 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    476.3 MiB      0.0 MiB           sender = data["sender"]
   672    476.3 MiB      0.0 MiB           if not "conversation_id" in data:
   673    476.3 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    476.3 MiB      0.0 MiB           sission_id = data["identifier"]
   677    476.3 MiB      0.0 MiB           Channel = data["Channel"]
   678    476.3 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    476.3 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    476.3 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    476.3 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    476.3 MiB      0.0 MiB           language = data["language"]
   685                             
   686    476.3 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    476.3 MiB      0.0 MiB           userMsg = data["message"]
   690    476.3 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    476.3 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    476.3 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    476.3 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    476.4 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    476.4 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:05:01,580] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:05:01] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 13:05:06.865172 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:05:06.865172%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.6
2020-04-23 13:05:06.865172%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4231995392, percent=66.8, used=8505716736, free=4231995392)
2020-04-23 13:05:06.865172%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:05:06.865172%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    476.3 MiB    476.3 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    476.3 MiB      0.0 MiB       try:
   660    476.3 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    476.3 MiB      0.0 MiB           data = request.get_json('data')
   662    476.3 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    476.3 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    476.3 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    476.3 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    476.3 MiB      0.0 MiB           sender = data["sender"]
   672    476.3 MiB      0.0 MiB           if not "conversation_id" in data:
   673    476.3 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    476.3 MiB      0.0 MiB           sission_id = data["identifier"]
   677    476.3 MiB      0.0 MiB           Channel = data["Channel"]
   678    476.3 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    476.3 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    476.3 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    476.3 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    476.3 MiB      0.0 MiB           language = data["language"]
   685                             
   686    476.3 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    476.3 MiB      0.0 MiB           userMsg = data["message"]
   690    476.3 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    476.3 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    476.3 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    476.3 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    476.4 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    476.4 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:05:09,035] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:05:09] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 13:05:15.091302 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:05:15.091302%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.7
2020-04-23 13:05:15.091720%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4459945984, percent=65.0, used=8277766144, free=4459945984)
2020-04-23 13:05:15.092298%%%%%%%%%%%%%%%%%%  Agent ID 30 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:05:15.092298%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    419.9 MiB    419.9 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    419.9 MiB      0.0 MiB       try:
   660    419.9 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    419.9 MiB      0.0 MiB           data = request.get_json('data')
   662    419.9 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    419.9 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    419.9 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    419.9 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    419.9 MiB      0.0 MiB           sender = data["sender"]
   672    419.9 MiB      0.0 MiB           if not "conversation_id" in data:
   673    419.9 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    419.9 MiB      0.0 MiB           sission_id = data["identifier"]
   677    419.9 MiB      0.0 MiB           Channel = data["Channel"]
   678    419.9 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    419.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    419.9 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    419.9 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    419.9 MiB      0.0 MiB           language = data["language"]
   685                             
   686    419.9 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    419.9 MiB      0.0 MiB           userMsg = data["message"]
   690    419.9 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    419.9 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694                                         agent_obj = loadedAgentsMap[map_key]["agent"]
   695                                         loop1 = asyncio.get_event_loop()
   696                                         result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    419.9 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:05:15,128] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:05:15] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 13:05:18.543850 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:05:18.543850%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.8
2020-04-23 13:05:18.543850%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4446642176, percent=65.1, used=8291069952, free=4446642176)
2020-04-23 13:05:18.543850%%%%%%%%%%%%%%%%%%  Agent ID 30 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:05:18.543850%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    419.9 MiB    419.9 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    419.9 MiB      0.0 MiB       try:
   660    419.9 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    419.9 MiB      0.0 MiB           data = request.get_json('data')
   662    419.9 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    419.9 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    419.9 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    419.9 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    419.9 MiB      0.0 MiB           sender = data["sender"]
   672    419.9 MiB      0.0 MiB           if not "conversation_id" in data:
   673    419.9 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    419.9 MiB      0.0 MiB           sission_id = data["identifier"]
   677    419.9 MiB      0.0 MiB           Channel = data["Channel"]
   678    419.9 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    419.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    419.9 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    419.9 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    419.9 MiB      0.0 MiB           language = data["language"]
   685                             
   686    419.9 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    419.9 MiB      0.0 MiB           userMsg = data["message"]
   690    419.9 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    419.9 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694                                         agent_obj = loadedAgentsMap[map_key]["agent"]
   695                                         loop1 = asyncio.get_event_loop()
   696                                         result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    419.9 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:05:18,562] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:05:18] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
2020-04-23 13:05:21.483519 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:05:21.484516%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.2
2020-04-23 13:05:21.484699%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4446756864, percent=65.1, used=8290955264, free=4446756864)
2020-04-23 13:05:21.484699%%%%%%%%%%%%%%%%%%  Agent ID 30 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:05:21.484699%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    419.9 MiB    419.9 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    419.9 MiB      0.0 MiB       try:
   660    419.9 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    419.9 MiB      0.0 MiB           data = request.get_json('data')
   662    419.9 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    419.9 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    419.9 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    419.9 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    419.9 MiB      0.0 MiB           sender = data["sender"]
   672    419.9 MiB      0.0 MiB           if not "conversation_id" in data:
   673    419.9 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    419.9 MiB      0.0 MiB           sission_id = data["identifier"]
   677    419.9 MiB      0.0 MiB           Channel = data["Channel"]
   678    419.9 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    419.9 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    419.9 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    419.9 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    419.9 MiB      0.0 MiB           language = data["language"]
   685                             
   686    419.9 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    419.9 MiB      0.0 MiB           userMsg = data["message"]
   690    419.9 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    419.9 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694                                         agent_obj = loadedAgentsMap[map_key]["agent"]
   695                                         loop1 = asyncio.get_event_loop()
   696                                         result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    419.9 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:05:21,518] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:05:21] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
[2020-04-23 13:59:36,054] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-23 13:59:36.054533
2020-04-23 13:59:38.086826 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-23 13:59:38.086826%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.7
2020-04-23 13:59:38.086826%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4689985536, percent=63.2, used=8047726592, free=4689985536)
2020-04-23 13:59:38.086826%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:59:38.086826%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:59:38.091814%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2658 2658
 2- default platform is not  Null 
map_key in loadedAgentsMap == True
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    418.5 MiB    418.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    418.5 MiB      0.0 MiB           entity = {"value": value,
    75    418.5 MiB      0.0 MiB                     "start": start,
    76    418.5 MiB      0.0 MiB                     "end": end,
    77    418.5 MiB      0.0 MiB                     "confidence": 1.0,
    78    418.5 MiB      0.0 MiB                     "entity": name,
    79    418.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    418.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    418.5 MiB    418.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    418.5 MiB      0.0 MiB           text = message.text
    88    418.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    418.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    418.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    418.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    418.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    418.5 MiB      0.0 MiB                   low_key = key.lower()
    96    418.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    418.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    418.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    418.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    418.5 MiB      0.0 MiB                   if( singular_key is False):
   103    418.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    418.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    418.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109    418.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    418.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    418.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    418.5 MiB      0.0 MiB               entities = old_entities
   114    418.5 MiB      0.0 MiB               words = text.split(' ')
   115    418.5 MiB      0.0 MiB               for w in words:
   116    418.5 MiB      0.0 MiB                   word =w
   117    418.5 MiB      0.0 MiB                   word_lower =word.lower()
   118    418.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    418.5 MiB      0.0 MiB                   if (word_singular is False):
   120    418.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    418.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    418.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    418.5 MiB      0.0 MiB                       start = text.find(w)
   128    418.5 MiB      0.0 MiB                       end = start + len(w)
   129    418.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    418.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    418.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    418.5 MiB      0.0 MiB                   low_key = key.lower()
   139    418.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    418.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    418.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    418.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    418.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    418.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  keep alive
key is  day will lowered
key is  alive will lowered
key is  r2 will lowered
key is  r1 will lowered
key is  3 will lowered
key is  2 will lowered
key is  Tea will lowered
key is  Daraa will lowered
key is  Damascus will lowered
key is  Syria will lowered
key is  dodo will lowered
key is  Damascus? will lowered
key is  t5 will lowered
key is  t4 will lowered
key is  Jan will lowered
key is  may will lowered
key is  y7 will lowered
key is  y6 will lowered
key is  7:00 will lowered
key is  9 oclock will lowered
key is  6 oclock will lowered
key is  oclock will lowered
key is  homs will lowered
key is  9 will lowered
key is  1 will lowered
key is  Google will lowered
key is  HCI will lowered
key is  IBM will lowered
key is  AI will lowered
key is  Mohammad will lowered
key is  Sharaf3 will lowered
old_entities :  []
lower_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascus': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'homs': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
singular_gazetter_entities :  {'day': 'Keep_alive_entity', 'alive': 'Keep_alive_entity', 'r2': 'CARDINAL', 'r1': 'CARDINAL', '3': 'CARDINAL', '2': 'ORG', 'tea': 'LOC', 'daraa': 'LOC', 'damascu': 'LOC', 'syria': 'LOC', 'dodo': 'LOC', 'damascus?': 'LOC', 't5': 'LAW', 't4': 'LAW', 'jan': 'DATE', 'may': 'DATE', 'y7': 'TIME', 'y6': 'TIME', '7:00': 'TIME', '9 oclock': 'TIME', '6 oclock': 'TIME', 'oclock': 'TIME', 'hom': 'GPE', '9': 'GPE', '1': 'ORG', 'google': 'ORG', 'hci': 'ORG', 'ibm': 'ORG', 'ai': 'FAC', 'mohammad': 'PERSON', 'sharaf3': 'PERSON'}
keep
alive
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70    419.6 MiB    419.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74    419.6 MiB      0.0 MiB           entity = {"value": value,
    75    419.6 MiB      0.0 MiB                     "start": start,
    76    419.6 MiB      0.0 MiB                     "end": end,
    77    419.6 MiB      0.0 MiB                     "confidence": 1.0,
    78    419.6 MiB      0.0 MiB                     "entity": name,
    79    419.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81    419.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83    419.6 MiB    419.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87    419.6 MiB      0.0 MiB           text = message.text
    88    419.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90    419.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92    419.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94    419.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95    419.6 MiB      0.0 MiB                   low_key = key.lower()
    96    419.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99    419.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101    419.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102    419.6 MiB      0.0 MiB                   if( singular_key is False):
   103    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105    419.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108    419.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109    419.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110    419.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111    419.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113    419.6 MiB      0.0 MiB               entities = old_entities
   114    419.6 MiB      0.0 MiB               words = text.split(' ')
   115    419.6 MiB      0.0 MiB               for w in words:
   116    419.6 MiB      0.0 MiB                   word =w
   117    419.6 MiB      0.0 MiB                   word_lower =word.lower()
   118    419.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119    419.6 MiB      0.0 MiB                   if (word_singular is False):
   120    419.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124    419.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126    419.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127    419.6 MiB      0.0 MiB                       start = text.find(w)
   128    419.6 MiB      0.0 MiB                       end = start + len(w)
   129    419.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130    419.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137    419.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138    419.6 MiB      0.0 MiB                   low_key = key.lower()
   139    419.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140    419.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141    419.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145    419.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147    419.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148    419.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 4215 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1587636070.0261455}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587636070.0261455}, {'event': 'user', 'input_channel': None, 'message_id': '2da8954bfdc04c10a84686b1216f7d91', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587639578.1915717}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587639578.1915717, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639580.4011457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587639580.4011457, 'value': 'Keep_alive$$0.904667524197289'}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639582.5322263}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587639582.5322263}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587639582.5322263, 'value': 'alive'}, {'event': 'form', 'name': None, 'timestamp': 1587639582.5322263}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587639582.5322263, 'value': None}, {'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639584.5796142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'here is the response of keep alive intent ', 'timestamp': 1587639584.5796142}, {'event': 'slot', 'name': 'Conversation_finished', 'timestamp': 1587639584.5796142, 'value': 'yes'}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639584.5825758}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587639584.5825758, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': 'yes', 'Current_tracker_intent_name': 'Keep_alive$$0.904667524197289', 'Keep_alive_entity': 'alive', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1587636070.0261455}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1587636070.0261455}, {'event': 'user', 'input_channel': None, 'message_id': '2da8954bfdc04c10a84686b1216f7d91', 'metadata': {}, 'parse_data': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'text': 'keep alive', 'timestamp': 1587639578.1915717}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587639578.1915717, 'value': 'alive'}, {'confidence': 0.9797738790512085, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639580.4011457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1587639580.4011457, 'value': 'Keep_alive$$0.904667524197289'}, {'confidence': 0.9790478944778442, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639582.5322263}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1587639582.5322263}, {'event': 'slot', 'name': 'Keep_alive_entity', 'timestamp': 1587639582.5322263, 'value': 'alive'}, {'event': 'form', 'name': None, 'timestamp': 1587639582.5322263}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1587639582.5322263, 'value': None}, {'confidence': 0.9547483921051025, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639584.5796142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'here is the response of keep alive intent ', 'timestamp': 1587639584.5796142}, {'event': 'slot', 'name': 'Conversation_finished', 'timestamp': 1587639584.5796142, 'value': 'yes'}, {'confidence': 0.9564258456230164, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1587639584.5825758}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1587639584.5825758, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, 'intent_ranking': [{'confidence': 0.9046675241972898, 'name': 'Keep_alive'}, {'confidence': 0.09533247580271025, 'name': 'Default welcome intent'}], 'text': 'keep alive'}, 'paused': False, 'sender_id': '59::1.1.1.1::Default::any', 'slots': {'Conversation_finished': 'yes', 'Current_tracker_intent_name': 'Keep_alive$$0.904667524197289', 'Keep_alive_entity': 'alive', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Keep_alive$$0.904667524197289']
++++++++++++++++++++++++++++++++++++++++ Keep_alive +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Keep_alive
getFormatedEntity -------------------------  [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
updated_entities ---------------------------------------- [{'value': 'alive', 'start': 5, 'end': 10, 'confidence': 1.0, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity'}]
2020-04-23 13:59:46.711701 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatrestart [POST]
2020-04-23 13:59:46.711701%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.2
2020-04-23 13:59:46.711701%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4713660416, percent=63.0, used=8024051712, free=4713660416)
2020-04-23 13:59:46.711701%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-23 13:59:46.711701%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
   652    419.6 MiB    419.6 MiB   @app.route('/chatrestart', methods=['POST'])
   653                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
   654                             @profile
   655                             def chatrestart():
   656                                 global current_model
   657                                 global tracker_id
   658                                 global loadedAgentsMap
   659    419.6 MiB      0.0 MiB       try:
   660    419.6 MiB      0.0 MiB           asyncio.set_event_loop(asyncio.new_event_loop())
   661    419.6 MiB      0.0 MiB           data = request.get_json('data')
   662    419.6 MiB      0.0 MiB           if not "agent_id" in data:
   663                                         raise ValueError("agent_id JSON element is required")
   664    419.6 MiB      0.0 MiB           if not "identifier" in data:
   665                                         raise ValueError("identifier JSON element is required")
   666    419.6 MiB      0.0 MiB           if not "Channel" in data:
   667                                         raise ValueError("Channel JSON element is required")
   668    419.6 MiB      0.0 MiB           if not "sender" in data:
   669                                         raise ValueError("sender JSON element is required")
   670                             
   671    419.6 MiB      0.0 MiB           sender = data["sender"]
   672    419.6 MiB      0.0 MiB           if not "conversation_id" in data:
   673    419.6 MiB      0.0 MiB               conversation_id = None
   674                                     else:
   675                                         conversation_id = data["conversation_id"]
   676    419.6 MiB      0.0 MiB           sission_id = data["identifier"]
   677    419.6 MiB      0.0 MiB           Channel = data["Channel"]
   678    419.6 MiB      0.0 MiB           agent_id = data["agent_id"]
   679    419.6 MiB      0.0 MiB           tracker_id = str(agent_id) + "::" + str(sender) + "::" + str(Channel) + "::" + str(sission_id)  # tracker_id + 1
   680    419.6 MiB      0.0 MiB           sender_id = tracker_id
   681                             
   682    419.6 MiB      0.0 MiB           if not "language" in data:
   683                                         raise ValueError("language JSON element is required")
   684    419.6 MiB      0.0 MiB           language = data["language"]
   685                             
   686    419.6 MiB      0.0 MiB           if not "message" in data:
   687                                         raise ValueError("message JSON element is required")
   688                             
   689    419.6 MiB      0.0 MiB           userMsg = data["message"]
   690    419.6 MiB      0.0 MiB           map_key = str(agent_id) + str(language)
   691                                     # if training_data_changed == False and map_key in loadedAgentsMap:
   692                             
   693    419.6 MiB      0.0 MiB           if map_key in loadedAgentsMap:
   694    419.6 MiB      0.0 MiB               agent_obj = loadedAgentsMap[map_key]["agent"]
   695    419.6 MiB      0.0 MiB               loop1 = asyncio.get_event_loop()
   696    419.7 MiB      0.1 MiB               result1 = loop1.run_until_complete(agent_obj.handle_message(userMsg, sender_id=sender_id))
   697                             
   698    419.7 MiB      0.0 MiB           return jsonify({}), 200
   699                                 except Exception as e:
   700                                     return jsonify({"message": str(e)}), 400


[2020-04-23 13:59:48,913] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:59:48] "[37mPOST /chatrestart HTTP/1.1[0m" 200 -
action_restart -------------------------------- {}

[2020-04-23 13:59:48,915] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 13:59:48] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-23 13:59:48,921] ERROR in GenericChatbotController: keep alive chatting Response:  {'conversation_id': None, 'entities': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'entities1': [{'confidence': 1.0, 'end': 10, 'entity': 'Keep_alive_entity', 'extractor': 'CustomGazetteerEntity', 'start': 5, 'value': 'alive'}], 'intent': {'confidence': 0.904667524197289, 'name': 'Keep_alive'}, 'next_actions': [{'confidence': 0.9547483921051025, 'name': 'action_SetContextSlots'}, {'confidence': 0.9564258456230164, 'name': 'action_listen'}], 'reply': [{'_order': 1, 'recipient_id': '59::1.1.1.1::Default::any', 'text': 'here is the response of keep alive intent', 'type': 'text'}], 'reply1': [{'recipient_id': '59::1.1.1.1::Default::any', 'text': 'here is the response of keep alive intent'}], 'slots': [{'Current_tracker_intent_name': 'Keep_alive'}, {'Keep_alive_entity': 'alive'}, {'Conversation_finished': 'yes'}], 'slots1': [{'Keep_alive_entity': 'alive'}, {'Current_tracker_intent_name': 'Keep_alive'}, {'Keep_alive_entity': 'alive'}, {'requested_slot': None}, {'Conversation_finished': 'yes'}], 'story': '## 59::1.1.1.1::Default::any\n    - reset_slots\n* Keep_alive: keep [alive](Keep_alive_entity)\n    - slot{"Keep_alive_entity": "alive"}\n    - action_setIntent_id\n    - slot{"Current_tracker_intent_name": "Keep_alive$$0.904667524197289"}\n    - hci_form\n    - form{"name": "hci_form"}\n    - slot{"Keep_alive_entity": "alive"}\n    - form{"name": null}\n    - slot{"requested_slot": null}\n    - action_SetContextSlots\n    - slot{"Conversation_finished": "yes"}\n', 'text': 'keep alive'}, Status_code: 200
2020-04-23 14:17:40.464758 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-23 14:17:40.464758%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.5
2020-04-23 14:17:40.465752%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4588306432, percent=64.0, used=8149405696, free=4588306432)
2020-04-23 14:17:40.465752%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.465752%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,466] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mOPTIONS /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:40.470739 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-23 14:17:40.470739%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 14:17:40.471737%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4588302336, percent=64.0, used=8149409792, free=4588302336)
2020-04-23 14:17:40.471737%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.471737%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,473] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mOPTIONS /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:40.476724 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-23 14:17:40.476724%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 14:17:40.476724%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4588294144, percent=64.0, used=8149417984, free=4588294144)
2020-04-23 14:17:40.476724%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,477] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-23 14:17:40.479716 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 14:17:40.479716%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 14:17:40.479716%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4588285952, percent=64.0, used=8149426176, free=4588285952)
2020-04-23 14:17:40.479716%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,480] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:40.715302 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-23 14:17:40.715302%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.2
2020-04-23 14:17:40.715302%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4614234112, percent=63.8, used=8123478016, free=4614234112)
2020-04-23 14:17:40.715302%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.715302%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.721286%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,729] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mGET /intentReport/1/15/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:40.774251 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-23 14:17:40.774251%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.8
2020-04-23 14:17:40.774251%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616687616, percent=63.8, used=8121024512, free=4616687616)
2020-04-23 14:17:40.775247%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.775247%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.778237%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.781258 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-23 14:17:40.781258%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 14:17:40.781258%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616671232, percent=63.8, used=8121040896, free=4616671232)
2020-04-23 14:17:40.781258%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.789211 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 14:17:40.789211%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-23 14:17:40.789211%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616646656, percent=63.8, used=8121065472, free=4616646656)
2020-04-23 14:17:40.789211%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,810] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mGET /intentReport/1/100000000/en?agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:40.813144%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:40.817134%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:40,824] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-23 14:17:40,828] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:40] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:42.881005 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 14:17:42.881005%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.7
2020-04-23 14:17:42.881005%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4727107584, percent=62.9, used=8010604544, free=4727107584)
2020-04-23 14:17:42.882001%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:42.882001%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:42,882] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:42] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:43.184693 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 14:17:43.184693%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.4
2020-04-23 14:17:43.184693%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4738764800, percent=62.8, used=7998947328, free=4738764800)
2020-04-23 14:17:43.185691%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:43.185691%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:43,186] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:43] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:43.189680 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 14:17:43.189680%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 14:17:43.189680%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4738740224, percent=62.8, used=7998971904, free=4738740224)
2020-04-23 14:17:43.189680%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:43.189680%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:43.193671 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 14:17:43.193671%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 14:17:43.193671%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4738740224, percent=62.8, used=7998971904, free=4738740224)
2020-04-23 14:17:43.193671%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:43.195665%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:43,199] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:43] "[37mGET /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:43.201648%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:43,208] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:43] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:43.492502 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 14:17:43.492502%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.7
2020-04-23 14:17:43.492502%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4738719744, percent=62.8, used=7998992384, free=4738719744)
2020-04-23 14:17:43.492502%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:43.492502%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:43.495490%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:43,499] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:43] "[37mGET /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:49.089275 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 14:17:49.089275%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.7
2020-04-23 14:17:49.089275%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4542672896, percent=64.3, used=8195039232, free=4542672896)
2020-04-23 14:17:49.089275%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:49,090] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:49] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:49.343923 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 14:17:49.343923%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-23 14:17:49.343923%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4542730240, percent=64.3, used=8194981888, free=4542730240)
2020-04-23 14:17:49.344917%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:49.355928%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:49,366] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:49] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:17:52.527535 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportEntities [OPTIONS]
2020-04-23 14:17:52.527535%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:66.1
2020-04-23 14:17:52.527535%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4501417984, percent=64.7, used=8236294144, free=4501417984)
2020-04-23 14:17:52.528532%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:52.528532%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:52,529] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:52] "[37mOPTIONS /ImportEntities?agentId=60&language=en HTTP/1.1[0m" 200 -
2020-04-23 14:17:52.838702 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportEntities [POST]
2020-04-23 14:17:52.838702%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-23 14:17:52.838702%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4507971584, percent=64.6, used=8229740544, free=4507971584)
2020-04-23 14:17:52.839700%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:52.839700%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:52.848675%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:54.878377 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-23 14:17:54.878377%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:70.3
2020-04-23 14:17:54.878377%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4497928192, percent=64.7, used=8239783936, free=4497928192)
2020-04-23 14:17:54.878377%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:54.878377%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:54.884361%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:56.900858 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-23 14:17:56.900858%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.3
2020-04-23 14:17:56.900858%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4497367040, percent=64.7, used=8240345088, free=4497367040)
2020-04-23 14:17:56.900858%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:56.900858%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:17:56,961] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:56] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-23 14:17:56,969] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:17:56] "[37mPOST /addentity HTTP/1.1[0m" 201 -
2020-04-23 14:17:58.980181 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-23 14:17:58.980181%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.0
2020-04-23 14:17:58.980181%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4511604736, percent=64.6, used=8226107392, free=4511604736)
2020-04-23 14:17:58.980181%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:58.980181%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:17:58.984171%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:18:00.995328 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-23 14:18:00.995328%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.4
2020-04-23 14:18:00.995328%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4514725888, percent=64.6, used=8222986240, free=4514725888)
2020-04-23 14:18:00.995328%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:18:00.995328%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:18:01,019] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:18:01] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-23 14:18:01,026] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:18:01] "[37mPOST /addentity HTTP/1.1[0m" 201 -
[2020-04-23 14:18:01,028] ERROR in ImportEntities: 'list' object has no attribute 'status_code'
[2020-04-23 14:18:01,029] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:18:01] "[31m[1mPOST /ImportEntities?agentId=60&language=en HTTP/1.1[0m" 400 -
2020-04-23 14:29:19.734639 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 14:29:19.734639%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:6.0
2020-04-23 14:29:19.734639%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691787776, percent=63.2, used=8045924352, free=4691787776)
2020-04-23 14:29:19.734639%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:19.734639%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:19,735] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:19] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:19.739657 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-23 14:29:19.739657%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 14:29:19.739657%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691759104, percent=63.2, used=8045953024, free=4691759104)
2020-04-23 14:29:19.739657%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:19.739657%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:19,740] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:19] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:19.747603 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 14:29:19.747603%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-23 14:29:19.748602%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691763200, percent=63.2, used=8045948928, free=4691763200)
2020-04-23 14:29:19.748602%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:19,750] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:19] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:19.985569 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 14:29:19.985569%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.7
2020-04-23 14:29:19.985569%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691771392, percent=63.2, used=8045940736, free=4691771392)
2020-04-23 14:29:19.985569%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:19.985569%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:19.990587%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:19,994] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:19] "[37mGET /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=false&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:20.057376 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 14:29:20.057376%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-23 14:29:20.057376%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691677184, percent=63.2, used=8046034944, free=4691677184)
2020-04-23 14:29:20.058373%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:20.066353 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-23 14:29:20.066353%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-23 14:29:20.066353%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4691677184, percent=63.2, used=8046034944, free=4691677184)
2020-04-23 14:29:20.067350%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:20.067350%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:20.070354%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:20,077] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:20] "[37mGET /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=true&agentId=60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:20.079319%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:20,085] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:20] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:21.643203 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [OPTIONS]
2020-04-23 14:29:21.643203%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.9
2020-04-23 14:29:21.644200%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4686880768, percent=63.2, used=8050831360, free=4686880768)
2020-04-23 14:29:21.644200%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:21,645] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:21] "[37mOPTIONS /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:21.950276 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/60 [GET]
2020-04-23 14:29:21.950276%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.1
2020-04-23 14:29:21.950276%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4681916416, percent=63.2, used=8055795712, free=4681916416)
2020-04-23 14:29:21.950276%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:21.953267%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:21,956] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:21] "[37mGET /agent/60 HTTP/1.1[0m" 200 -
2020-04-23 14:29:25.289684 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportEntities [OPTIONS]
2020-04-23 14:29:25.289684%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:65.9
2020-04-23 14:29:25.289684%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4649549824, percent=63.5, used=8088162304, free=4649549824)
2020-04-23 14:29:25.289684%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:25.289684%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:25,291] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:25] "[37mOPTIONS /ImportEntities?agentId=60&language=en HTTP/1.1[0m" 200 -
2020-04-23 14:29:25.600849 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportEntities [POST]
2020-04-23 14:29:25.600849%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:93.8
2020-04-23 14:29:25.600849%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4650401792, percent=63.5, used=8087310336, free=4650401792)
2020-04-23 14:29:25.601843%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:25.601843%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:25.610823%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:27.623556 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-23 14:29:27.623556%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.4
2020-04-23 14:29:27.623556%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4660252672, percent=63.4, used=8077459456, free=4660252672)
2020-04-23 14:29:27.623556%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:27.623556%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:27.625550%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:29.635859 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-23 14:29:29.635859%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.4
2020-04-23 14:29:29.635859%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4669362176, percent=63.3, used=8068349952, free=4669362176)
2020-04-23 14:29:29.636854%%%%%%%%%%%%%%%%%%  Agent ID 60 %%%%%%%%%%%%%%%%%%:
2020-04-23 14:29:29.636854%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-23 14:29:29,659] ERROR in views: (pymysql.err.IntegrityError) (1062, "Duplicate entry 'Paramtype1-60' for key 'Entity_name_agent_id'")
[SQL: INSERT INTO entity (name, `SysName`, description, `regExpEntity`, `defineSynonyms`, `pipelineId`, `isSystetmEntity`, `isIntentApiEntity`, agent_id) VALUES (%(name)s, %(SysName)s, %(description)s, %(regExpEntity)s, %(defineSynonyms)s, %(pipelineId)s, %(isSystetmEntity)s, %(isIntentApiEntity)s, %(agent_id)s)]
[parameters: {'name': 'Paramtype1', 'SysName': None, 'description': None, 'regExpEntity': 0, 'defineSynonyms': 1, 'pipelineId': None, 'isSystetmEntity': 0, 'isIntentApiEntity': 0, 'agent_id': '60'}]
(Background on this error at: http://sqlalche.me/e/gkpj)
Traceback (most recent call last):
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1248, in _execute_context
    cursor, statement, parameters, context
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\default.py", line 590, in do_execute
    cursor.execute(statement, parameters)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\cursors.py", line 170, in execute
    result = self._query(query)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\cursors.py", line 328, in _query
    conn.query(q)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 517, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 732, in _read_query_result
    result.read()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 1075, in read
    first_packet = self.connection._read_packet()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 684, in _read_packet
    packet.check_error()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry 'Paramtype1-60' for key 'Entity_name_agent_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask_restless\views.py", line 189, in wrapped
    return func(*args, **kw)
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask_restless\views.py", line 1450, in post
    self.session.commit()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 1036, in commit
    self.transaction.commit()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 503, in commit
    self._prepare_impl()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 482, in _prepare_impl
    self.session.flush()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 2496, in flush
    self._flush(objects)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 2637, in _flush
    transaction.rollback(_capture_exception=True)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 2597, in _flush
    flush_context.execute()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 422, in execute
    rec.execute(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 589, in execute
    uow,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\persistence.py", line 245, in save_obj
    insert,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 984, in execute
    return meth(self, multiparams, params)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1103, in _execute_clauseelement
    distilled_params,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1288, in _execute_context
    e, statement, parameters, cursor, context
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1482, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1248, in _execute_context
    cursor, statement, parameters, context
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\default.py", line 590, in do_execute
    cursor.execute(statement, parameters)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\cursors.py", line 170, in execute
    result = self._query(query)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\cursors.py", line 328, in _query
    conn.query(q)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 517, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 732, in _read_query_result
    result.read()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 1075, in read
    first_packet = self.connection._read_packet()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 684, in _read_packet
    packet.check_error()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry 'Paramtype1-60' for key 'Entity_name_agent_id'")
[SQL: INSERT INTO entity (name, `SysName`, description, `regExpEntity`, `defineSynonyms`, `pipelineId`, `isSystetmEntity`, `isIntentApiEntity`, agent_id) VALUES (%(name)s, %(SysName)s, %(description)s, %(regExpEntity)s, %(defineSynonyms)s, %(pipelineId)s, %(isSystetmEntity)s, %(isIntentApiEntity)s, %(agent_id)s)]
[parameters: {'name': 'Paramtype1', 'SysName': None, 'description': None, 'regExpEntity': 0, 'defineSynonyms': 1, 'pipelineId': None, 'isSystetmEntity': 0, 'isIntentApiEntity': 0, 'agent_id': '60'}]
(Background on this error at: http://sqlalche.me/e/gkpj)
[2020-04-23 14:29:29,848] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:29] "[31m[1mPOST /entity HTTP/1.1[0m" 400 -
[2020-04-23 14:29:29,850] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:29] "[31m[1mPOST /addentity HTTP/1.1[0m" 400 -
ressssssssssssssssssssss 400 b'{\n  "message": "Paramtype1 is duplicated entity, or it is reserved for your Intent API uses{\'message\': \'IntegrityError\'}"\n}\n'
{'message': "Paramtype1 is duplicated entity, or it is reserved for your Intent API uses{'message': 'IntegrityError'}"}
after ressssssssss
exceptionnnnnnnnnnnnnnn
str(e) Paramtype1 is duplicated entity, or it is reserved for your Intent API uses{'message': 'IntegrityError'}
[2020-04-23 14:29:29,852] ERROR in Support: the JSON object must be str, bytes or bytearray, not tuple
responseeeeeeeeeeeeee
[2020-04-23 14:29:29,854] INFO in _internal: 127.0.0.1 - - [23/Apr/2020 14:29:29] "[37mPOST /ImportEntities?agentId=60&language=en HTTP/1.1[0m" 200 -
[2020-04-30 09:31:50,461] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-30 09:49:20.398101 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-30 09:49:20.398101%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.9
2020-04-30 09:49:20.398101%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4737990656, percent=62.8, used=7999721472, free=4737990656)
2020-04-30 09:49:20.398101%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:20,400] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:20] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-30 09:49:20.579609 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-30 09:49:20.579609%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.4
2020-04-30 09:49:20.579609%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4737650688, percent=62.8, used=8000061440, free=4737650688)
2020-04-30 09:49:20.579609%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:24,618] ERROR in GenericChatbotController: An exception accured : (pymysql.err.OperationalError) (2003, "Can't connect to MySQL server on 'localhost' ([WinError 10061] No connection could be made because the target machine actively refused it)")
(Background on this error at: http://sqlalche.me/e/e3q8)
Filename: C:\Users\Dell\Chatbot\front\final_merge\controller\GenericChatbotController.py

Line #    Mem usage    Increment   Line Contents
================================================
   969    124.8 MiB    124.8 MiB   @profile
   970                             def keepSystemAlive():
   971    124.8 MiB      0.0 MiB       try:
   972    124.8 MiB      0.0 MiB           with app.app_context():
   973                                             
   974    124.8 MiB      0.0 MiB               secs=3500
   975    124.8 MiB      0.0 MiB               delete_agent_time_in_second = 3000
   976    124.8 MiB      0.0 MiB               delete_old_tracker_by_days = 3
   977    124.8 MiB      0.0 MiB               chatUrl= url+"/chatAgent"
   978    124.8 MiB      0.0 MiB               server_situation_update_by_hour = 12
   979    124.8 MiB      0.0 MiB               Keep_alive_name = "Keep_alive"
   980    125.7 MiB      1.0 MiB               admin_user = User.query.filter_by(first_name= Keep_alive_name).first()
   981                                         if admin_user is not None:
   982                                             agent_id = admin_user.agents[0].id
   983                                             access_token = jwt.encode({'email' : admin_user.email, 'exp' : datetime.datetime.utcnow() + datetime.timedelta(days=99999)}, app.config['SECRET_KEY'])
   984                                             access_token = access_token.decode('UTF-8')
   985                                         else:
   986                             
   987                                             register_url = url +  '/register'
   988                                             register_date ={"email":Keep_alive_name,"password":Keep_alive_name,"firstname":Keep_alive_name,"lastname":Keep_alive_name,"username":Keep_alive_name,"language":"en"}
   989                                             register_response = requests.post(register_url,json = register_date)
   990                                             if register_response.status_code not in [200,201]:
   991                                                 raise ValueError(str(register_response.content))
   992                                             register_response = register_response.json()
   993                                             agent_id = register_response["defaultAgent"]["id"]
   994                                             access_token = jwt.encode({'email' : Keep_alive_name, 'exp' : datetime.datetime.utcnow() + datetime.timedelta(days=99999)}, app.config['SECRET_KEY'])
   995                                             print("access_token -------------------- " )
   996                                             access_token = access_token.decode('UTF-8')
   997                                             headers = {"x-access-token":access_token,"Content-Type":"application/json"}
   998                                             add_intent_url = url + "/addintent"
   999                                             add_entity_url = url + "/addentity"
  1000                                             add_entity_url = url + "/addentity"
  1001                                             add_entityinstance_url = url + "/entityinstance"
  1002                                             
  1003                                             keep_alive_entity_json = {"name":"Keep_alive_entity","regExpEntity":False,"defineSynonyms":False,"agent_id":agent_id}
  1004                                             entity_obj = requests.post(add_entity_url,json = keep_alive_entity_json,headers = headers)
  1005                                             entity_obj = entity_obj.json()
  1006                                             print("entity_obj",entity_obj)
  1007                                             keep_alive_instance_json = {"txt":"alive","entityid":entity_obj["id"],"agent_id":agent_id,"language":"en"}
  1008                                             instance1_obj = requests.post(add_entityinstance_url,json = keep_alive_instance_json,headers = headers)
  1009                                             instance1_obj = instance1_obj.json()
  1010                                             print("instance1_obj",instance1_obj)
  1011                                             
  1012                                             keep_alive_instance_json_2 = {"txt":"day","entityid":entity_obj["id"],"agent_id":agent_id,"language":"en"}
  1013                                             instance2_obj = requests.post(add_entityinstance_url,json = keep_alive_instance_json_2,headers = headers)
  1014                                             instance2_obj = instance2_obj.json()
  1015                                             print("instance2_obj",instance2_obj)
  1016                                             
  1017                                             keep_alive_intent_json = {"intent":"keep_alive","language":"en","agent_id":agent_id,
  1018                                             "intentAPI":{"url":"","isActive":0,"params":""},"trainingExample":[{"txt":"Keep alive","example_entitiy":
  1019                                             [{"startPosition":6,"endPosition":10,"Parameter_name":"Keep_alive_entity","entitiy_instance_id":instance1_obj["id"]}]},
  1020                                             {"txt":"keep alive for a day","example_entitiy":[{"startPosition":18,"endPosition":20,
  1021                                             "Parameter_name":"Keep_alive_entity","entitiy_instance_id":instance2_obj["id"]}]}],
  1022                                             "parameters":[{"EntityId":entity_obj["id"],"type":"text","value":"$Keep_alive_entity","name":"Keep_alive_entity",
  1023                                             "isRequired":True,"prompts":[{"text":"is it keep alive?"}],"isIntentApiParameter":False}],
  1024                                             "Responses":[{"txt":"here is the response of keep alive intent::","type":"text","image":"","_order":1,"Buttons":[]}],
  1025                                             "endOfConversation":True,"inputContext":"","outputContext":""}
  1026                                             
  1027                                             res = requests.post(add_intent_url,json = keep_alive_intent_json,headers = headers)
  1028                                             
  1029                                         token = jwt.encode({'agent_id' : agent_id, 'exp' : date_time.utcnow() + datetime.timedelta(days=99999)}, app.config['SECRET_KEY'])
  1030                                         headers = {"x-access-token":access_token,"Content-Type":"application/json"}
  1031                                         
  1032                                         generated_token = token.decode('UTF-8')
  1033                                         chat_date={"sender": "1.1.1.1","message":"keep alive","language":"en","agent_id":agent_id,"token":generated_token,"sessionId": "keep_alive_session","identifier":"any","Channel":"default"}
  1034                                         while True:
  1035                                             app.logger.error(str('keep alive request for Agent :'+str(agent_id)+' on time : '+ str(date_time.now())))
  1036                                             
  1037                                             
  1038                                             """ Keep Alive Chat Each Hour"""
  1039                                             respons = requests.post(chatUrl,json = chat_date,headers = headers)
  1040                                             app.logger.error(str('keep alive chatting Response:  ' + str(respons.json()) + ", Status_code: "+str(respons.status_code)))
  1041                                             respons.close()
  1042                                             
  1043                                             """    Delete the Agent from The Mape   """
  1044                                             current_time = time.time()
  1045                                             for key in list(loadedAgentsMap.keys()):
  1046                                                 diff = current_time - loadedAgentsMap[key]["last_use"]
  1047                                                 if diff >= delete_agent_time_in_second:
  1048                                                     del loadedAgentsMap[key] 
  1049                                             
  1050                                             """ Delete Old Trackers """
  1051                                             date_delete_threshold  = date_time.now() - timedelta(days=delete_old_tracker_by_days)
  1052                                             delete_events = events.query.filter(events.update_date <= date_delete_threshold).all()
  1053                                             for item in delete_events:
  1054                                                 db.session.delete(item)
  1055                                             db.session.commit()
  1056                             
  1057                                             """ send server situation info"""
  1058                                             if(server_situation_update_by_hour > 11):
  1059                                                 server_situation_update_threshold = date_time.now() - timedelta(hours=server_situation_update_by_hour)
  1060                                                 server_situation_update_by_hour = 0
  1061                                                 send_server_situation_info(server_situation_update_threshold)
  1062                             
  1063                                             server_situation_update_by_hour = server_situation_update_by_hour + 1
  1064                             
  1065                                             time.sleep(secs) 
  1066                                             
  1067                                     return 
  1068    125.7 MiB      0.0 MiB       except Exception as e:
  1069                                     
  1070    125.7 MiB      0.0 MiB           with app.app_context():
  1071    125.8 MiB      0.0 MiB               db.session.rollback()    
  1072                                         
  1073    125.9 MiB      0.1 MiB           app.logger.error(str('An exception accured : '+ str(e)))


[2020-04-30 09:49:24,624] ERROR in app: Exception on /login [POST]
Traceback (most recent call last):
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 583, in connect
    **kwargs)
  File "C:\Users\Dell\AppData\Local\Programs\Python\Python37\lib\socket.py", line 727, in create_connection
    raise err
  File "C:\Users\Dell\AppData\Local\Programs\Python\Python37\lib\socket.py", line 716, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2285, in _wrap_pool_connect
    return fn()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 363, in connect
    return _ConnectionFairy._checkout(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 773, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 492, in checkout
    rec = pool._do_get()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 139, in _do_get
    self._dec_overflow()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 136, in _do_get
    return self._create_connection()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 308, in _create_connection
    return _ConnectionRecord(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 437, in __init__
    self.__connect(first_connect_check=True)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 657, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 652, in __connect
    connection = pool._invoke_creator(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\default.py", line 490, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 325, in __init__
    self.connect()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on 'localhost' ([WinError 10061] No connection could be made because the target machine actively refused it)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask\app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask\app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask_cors\extension.py", line 161, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask_cors\extension.py", line 161, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask_cors\extension.py", line 161, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  [Previous line repeated 39 more times]
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask\app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask\app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask\app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "c:\users\dell\rasa99\venv\lib\site-packages\flask_cors\decorator.py", line 128, in wrapped_function
    resp = make_response(f(*args, **kwargs))
  File "c:\users\dell\rasa99\venv\lib\site-packages\memory_profiler.py", line 1113, in wrapper
    val = prof(func)(*args, **kwargs)
  File "c:\users\dell\rasa99\venv\lib\site-packages\memory_profiler.py", line 699, in f
    return func(*args, **kwds)
  File "C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py", line 1485, in log_in
    _user = User.query.filter_by(userName=auth["email"]).first()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\query.py", line 3300, in first
    ret = list(self[0:1])
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\query.py", line 3078, in __getitem__
    return list(res)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\query.py", line 3405, in __iter__
    return self._execute_and_instances(context)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\query.py", line 3427, in _execute_and_instances
    querycontext, self._connection_from_session, close_with_result=True
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\query.py", line 3442, in _get_bind_args
    mapper=self._bind_mapper(), clause=querycontext.statement, **kw
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\query.py", line 3420, in _connection_from_session
    conn = self.session.connection(**kw)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 1133, in connection
    execution_options=execution_options,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 1139, in _connection_for_bind
    engine, execution_options
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\orm\session.py", line 432, in _connection_for_bind
    conn = bind._contextual_connect()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2251, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2289, in _wrap_pool_connect
    e, dialect, self
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1555, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2285, in _wrap_pool_connect
    return fn()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 363, in connect
    return _ConnectionFairy._checkout(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 773, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 492, in checkout
    rec = pool._do_get()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 139, in _do_get
    self._dec_overflow()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 136, in _do_get
    return self._create_connection()
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 308, in _create_connection
    return _ConnectionRecord(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 437, in __init__
    self.__connect(first_connect_check=True)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 657, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\pool\base.py", line 652, in __connect
    connection = pool._invoke_creator(self)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "c:\users\dell\rasa99\venv\lib\site-packages\sqlalchemy\engine\default.py", line 490, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 325, in __init__
    self.connect()
  File "c:\users\dell\rasa99\venv\lib\site-packages\pymysql\connections.py", line 630, in connect
    raise exc
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2003, "Can't connect to MySQL server on 'localhost' ([WinError 10061] No connection could be made because the target machine actively refused it)")
(Background on this error at: http://sqlalche.me/e/e3q8)
[2020-04-30 09:49:24,659] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:24] "[35m[1mPOST /login HTTP/1.1[0m" 500 -
2020-04-30 09:49:45.302338 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [OPTIONS]
2020-04-30 09:49:45.302338%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.0
2020-04-30 09:49:45.302338%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4674093056, percent=63.3, used=8063619072, free=4674093056)
2020-04-30 09:49:45.303336%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:45,305] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:45] "[37mOPTIONS /login HTTP/1.1[0m" 200 -
2020-04-30 09:49:45.553949 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/login [POST]
2020-04-30 09:49:45.553949%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.0
2020-04-30 09:49:45.553949%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4674039808, percent=63.3, used=8063672320, free=4674039808)
2020-04-30 09:49:45.553949%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Filename: C:\Users\Dell\Chatbot\front\final_merge\view\GenericChatbotApi.py

Line #    Mem usage    Increment   Line Contents
================================================
  1475    127.7 MiB    127.7 MiB   @app.route('/login', methods=['post'])
  1476                             @cross_origin(origin='localhost', headers=['Content- Type', 'Authorization'])
  1477                             @profile
  1478                             def log_in():
  1479    127.7 MiB      0.0 MiB       data = request.get_json('data')
  1480                             
  1481    127.7 MiB      0.0 MiB       auth = data
  1482    127.7 MiB      0.0 MiB       if '@' in auth["email"]:
  1483                                     _user = User.query.filter_by(email=auth["email"]).first()
  1484                                 else:
  1485    127.9 MiB      0.3 MiB           _user = User.query.filter_by(userName=auth["email"]).first()
  1486                             
  1487    127.9 MiB      0.0 MiB       if not _user:
  1488                                     # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1489                                     return jsonify({"message": "Your email or username is wrong"}), 401
  1490    128.0 MiB      0.1 MiB       if verify_password(auth["password"], _user.password):
  1491    128.0 MiB      0.0 MiB           token = jwt.encode({'email': _user.email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=1000)},
  1492    128.0 MiB      0.0 MiB                              app.config['SECRET_KEY'])
  1493                             
  1494    128.0 MiB      0.0 MiB           agent_obj = {}
  1495    128.1 MiB      0.1 MiB           for agent in _user.agents:
  1496    128.1 MiB      0.0 MiB               if agent.isDefault == True:
  1497    128.1 MiB      0.0 MiB                   agent_obj = {"id": agent.id, "isDefault": agent.isDefault, "language": agent.language,
  1498    128.1 MiB      0.0 MiB                                "name": agent.name}
  1499    128.1 MiB      0.0 MiB                   break
  1500    128.1 MiB      0.0 MiB           return jsonify(
  1501    128.1 MiB      0.0 MiB               {'token': token.decode('UTF-8'), "UserId": _user.id, "userName": _user.userName, "defaultAgent": agent_obj,
  1502    128.1 MiB      0.0 MiB                "isAdmin": _user.isAdmin})
  1503                                 # return make_response('Could not verify', 401, {'WWW-Authenticate' : 'Basic realm="Login required!"'})
  1504                                 return jsonify({"message": "your password is wrong"}), 401


[2020-04-30 09:49:45,742] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:45] "[37mPOST /login HTTP/1.1[0m" 200 -
2020-04-30 09:49:45.871120 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 09:49:45.871120%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.7
2020-04-30 09:49:45.872117%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4661583872, percent=63.4, used=8076128256, free=4661583872)
2020-04-30 09:49:45.872117%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:45.872117%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:45,874] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:45] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.173434 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 09:49:46.173434%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.2
2020-04-30 09:49:46.173434%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4655644672, percent=63.4, used=8082067456, free=4655644672)
2020-04-30 09:49:46.173434%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.173434%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,174] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.176398 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 09:49:46.176398%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 09:49:46.177395%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4655644672, percent=63.4, used=8082067456, free=4655644672)
2020-04-30 09:49:46.177395%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,178] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.185374 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [OPTIONS]
2020-04-30 09:49:46.185374%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 09:49:46.186370%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4659818496, percent=63.4, used=8077893632, free=4659818496)
2020-04-30 09:49:46.186370%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,189] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mOPTIONS /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.194349 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 09:49:46.194349%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 09:49:46.194349%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4659765248, percent=63.4, used=8077946880, free=4659765248)
2020-04-30 09:49:46.199340%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,201] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.204325 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 09:49:46.204325%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 09:49:46.204325%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4655722496, percent=63.4, used=8081989632, free=4655722496)
2020-04-30 09:49:46.204325%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.204325%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.208313%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,223] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.485276 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 09:49:46.485276%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.8
2020-04-30 09:49:46.485276%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4656459776, percent=63.4, used=8081252352, free=4656459776)
2020-04-30 09:49:46.486269%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.486269%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.495209 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 09:49:46.495209%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 09:49:46.495209%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4656394240, percent=63.4, used=8081317888, free=4656394240)
2020-04-30 09:49:46.496209%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.505184%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.512164 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/generateIdentifier [GET]
2020-04-30 09:49:46.512164%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 09:49:46.513161%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4655730688, percent=63.4, used=8081981440, free=4655730688)
2020-04-30 09:49:46.513161%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,515] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mGET /generateIdentifier HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.521139 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 09:49:46.521139%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 09:49:46.521139%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4654747648, percent=63.5, used=8082964480, free=4654747648)
2020-04-30 09:49:46.522136%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,527] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:46.534105%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:46.543080%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:46,549] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-30 09:49:46,553] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:46] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:52.679104 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/416 [OPTIONS]
2020-04-30 09:49:52.679104%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.3
2020-04-30 09:49:52.679104%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4642095104, percent=63.6, used=8095617024, free=4642095104)
2020-04-30 09:49:52.680102%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:52,680] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:52] "[37mOPTIONS /intent/416 HTTP/1.1[0m" 200 -
2020-04-30 09:49:52.930433 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/416 [DELETE]
2020-04-30 09:49:52.930433%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:52.3
2020-04-30 09:49:52.930433%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4644143104, percent=63.5, used=8093569024, free=4644143104)
2020-04-30 09:49:52.931430%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:52.935426%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:52,950] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:52] "[37mDELETE /intent/416 HTTP/1.1[0m" 204 -
2020-04-30 09:49:57.179176 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 09:49:57.179176%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.5
2020-04-30 09:49:57.180170%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4646068224, percent=63.5, used=8091643904, free=4646068224)
2020-04-30 09:49:57.181166%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:57,182] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:57] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 09:49:57.490558 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 09:49:57.490558%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.6
2020-04-30 09:49:57.490558%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4642439168, percent=63.6, used=8095272960, free=4642439168)
2020-04-30 09:49:57.490558%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:49:57.494545%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:49:57,497] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:49:57] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 09:50:08.539174 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportIntents [OPTIONS]
2020-04-30 09:50:08.539174%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:59.1
2020-04-30 09:50:08.539174%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4546023424, percent=64.3, used=8191688704, free=4546023424)
2020-04-30 09:50:08.539174%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:08.539174%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:08,540] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:08] "[37mOPTIONS /ImportIntents?agentId=61&language=en HTTP/1.1[0m" 200 -
2020-04-30 09:50:08.792045 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportIntents [POST]
2020-04-30 09:50:08.792045%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.7
2020-04-30 09:50:08.792045%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4540350464, percent=64.4, used=8197361664, free=4540350464)
2020-04-30 09:50:08.797030%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:08.797030%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:08.801020%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:08.802045 current_import_export_operation =  1
1111111111111111----------------------------------
22222222222222222----------------------------------
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'just going to say hi', 'example_entitiy': []}, {'txt': 'heya', 'example_entitiy': []}, {'txt': 'hello hi', 'example_entitiy': []}, {'txt': 'howdy', 'example_entitiy': []}, {'txt': 'hey there', 'example_entitiy': []}, {'txt': 'hi there', 'example_entitiy': []}, {'txt': 'greetings', 'example_entitiy': []}, {'txt': 'hey', 'example_entitiy': []}, {'txt': 'long time no see', 'example_entitiy': []}, {'txt': 'hello', 'example_entitiy': []}, {'txt': "lovely day isn't it", 'example_entitiy': []}, {'txt': 'I greet you', 'example_entitiy': []}, {'txt': 'hello again', 'example_entitiy': []}, {'txt': 'hi', 'example_entitiy': []}, {'txt': 'hello there', 'example_entitiy': []}, {'txt': 'a good day', 'example_entitiy': []}]
------
[]
------
{'intent': 'Default welcome intent', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'I am Glad to Chat you::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}], '_order': 3, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'txt': 'How Can I help you?', 'type': 'card'}], 'trainingExample': [{'txt': 'just going to say hi', 'example_entitiy': []}, {'txt': 'heya', 'example_entitiy': []}, {'txt': 'hello hi', 'example_entitiy': []}, {'txt': 'howdy', 'example_entitiy': []}, {'txt': 'hey there', 'example_entitiy': []}, {'txt': 'hi there', 'example_entitiy': []}, {'txt': 'greetings', 'example_entitiy': []}, {'txt': 'hey', 'example_entitiy': []}, {'txt': 'long time no see', 'example_entitiy': []}, {'txt': 'hello', 'example_entitiy': []}, {'txt': "lovely day isn't it", 'example_entitiy': []}, {'txt': 'I greet you', 'example_entitiy': []}, {'txt': 'hello again', 'example_entitiy': []}, {'txt': 'hi', 'example_entitiy': []}, {'txt': 'hello there', 'example_entitiy': []}, {'txt': 'a good day', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 09:50:10.831382 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:50:10.831382%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.7
2020-04-30 09:50:10.831382%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4498489344, percent=64.7, used=8239222784, free=4498489344)
2020-04-30 09:50:10.831382%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:10.831382%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:10.835373%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:12.851195 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:50:12.851195%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.8
2020-04-30 09:50:12.851195%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4502765568, percent=64.7, used=8234946560, free=4502765568)
2020-04-30 09:50:12.851195%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:12.851195%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:12,909] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:12] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:50:14.921481 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:14.921481%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.8
2020-04-30 09:50:14.921481%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4507340800, percent=64.6, used=8230371328, free=4507340800)
2020-04-30 09:50:14.922481%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:14,975] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:14] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:16.986990 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:16.986990%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.5
2020-04-30 09:50:16.986990%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4507873280, percent=64.6, used=8229838848, free=4507873280)
2020-04-30 09:50:16.986990%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:17,005] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:17] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:19.021187 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:19.021187%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.2
2020-04-30 09:50:19.022181%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4520239104, percent=64.5, used=8217473024, free=4520239104)
2020-04-30 09:50:19.022181%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:19,071] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:19] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:21.085931 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:21.085931%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.1
2020-04-30 09:50:21.085931%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4533985280, percent=64.4, used=8203726848, free=4533985280)
2020-04-30 09:50:21.085931%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:21,110] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:21] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:23.131466 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:23.131466%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.4
2020-04-30 09:50:23.131466%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4554420224, percent=64.2, used=8183291904, free=4554420224)
2020-04-30 09:50:23.131466%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:23,158] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:23] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:25.173571 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:25.173571%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.5
2020-04-30 09:50:25.173571%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4568125440, percent=64.1, used=8169586688, free=4568125440)
2020-04-30 09:50:25.173571%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:25,214] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:25] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:27.230799 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:27.230799%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.1
2020-04-30 09:50:27.231795%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4574040064, percent=64.1, used=8163672064, free=4574040064)
2020-04-30 09:50:27.231795%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:27,282] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:27] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:29.300982 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:29.300982%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.7
2020-04-30 09:50:29.301962%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4577484800, percent=64.1, used=8160227328, free=4577484800)
2020-04-30 09:50:29.301962%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:29,364] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:29] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:31.381936 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:31.381936%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.6
2020-04-30 09:50:31.382931%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4577771520, percent=64.1, used=8159940608, free=4577771520)
2020-04-30 09:50:31.382931%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:31,404] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:31] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:33.414464 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:33.414464%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.5
2020-04-30 09:50:33.414464%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585951232, percent=64.0, used=8151760896, free=4585951232)
2020-04-30 09:50:33.414464%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:33,440] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:33] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:35.451019 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:35.451019%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:72.3
2020-04-30 09:50:35.451019%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4622458880, percent=63.7, used=8115253248, free=4622458880)
2020-04-30 09:50:35.451019%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:35,469] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:35] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:37.491564 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:37.491564%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:67.8
2020-04-30 09:50:37.491564%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4620439552, percent=63.7, used=8117272576, free=4620439552)
2020-04-30 09:50:37.491564%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:37,516] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:37] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:39.530677 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:39.530677%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.9
2020-04-30 09:50:39.530677%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4605865984, percent=63.8, used=8131846144, free=4605865984)
2020-04-30 09:50:39.530677%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:39,562] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:39] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:41.573431 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:41.573431%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.3
2020-04-30 09:50:41.573431%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4607664128, percent=63.8, used=8130048000, free=4607664128)
2020-04-30 09:50:41.574429%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:41,608] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:41] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:43.626047 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:43.626047%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.0
2020-04-30 09:50:43.626047%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4609589248, percent=63.8, used=8128122880, free=4609589248)
2020-04-30 09:50:43.626047%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:43,674] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:43] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:50:45.690681 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:50:45.690681%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.9
2020-04-30 09:50:45.691671%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4609994752, percent=63.8, used=8127717376, free=4609994752)
2020-04-30 09:50:45.692668%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:45,735] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:45] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 09:50:45,741] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:45] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'I am Glad to Chat you::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}], '_order': 3, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'txt': 'How Can I help you?', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 417, 'inputContext': '', 'intent': 'Default welcome intent', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'just going to say hi'}, {'example_entitiy': [], 'txt': 'heya'}, {'example_entitiy': [], 'txt': 'hello hi'}, {'example_entitiy': [], 'txt': 'howdy'}, {'example_entitiy': [], 'txt': 'hey there'}, {'example_entitiy': [], 'txt': 'hi there'}, {'example_entitiy': [], 'txt': 'greetings'}, {'example_entitiy': [], 'txt': 'hey'}, {'example_entitiy': [], 'txt': 'long time no see'}, {'example_entitiy': [], 'txt': 'hello'}, {'example_entitiy': [], 'txt': "lovely day isn't it"}, {'example_entitiy': [], 'txt': 'I greet you'}, {'example_entitiy': [], 'txt': 'hello again'}, {'example_entitiy': [], 'txt': 'hi'}, {'example_entitiy': [], 'txt': 'hello there'}, {'example_entitiy': [], 'txt': 'a good day'}]}}
====
33333333333333333333----------------------------------
========================================
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Departure_city', 'name': 'Departure_city', 'prompts': [{'text': 'Please enter the city of departure'}], 'type': 'text', 'value': '$Departure_city'}
inside
inside
Departure_city
entity_object -------------- is None None
2020-04-30 09:50:47.770491 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-30 09:50:47.770491%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.6
2020-04-30 09:50:47.771488%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4608782336, percent=63.8, used=8128929792, free=4608782336)
2020-04-30 09:50:47.771488%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:47.771488%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:47.784455%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:49.804513 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-30 09:50:49.804513%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.7
2020-04-30 09:50:49.805512%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4623462400, percent=63.7, used=8114249728, free=4623462400)
2020-04-30 09:50:49.805512%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:49.805512%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:49,839] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:49] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-30 09:50:49,848] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:49] "[37mPOST /addentity HTTP/1.1[0m" 201 -
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}]
{'Departure_city': 423}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Destination_city', 'name': 'Destination_city', 'prompts': [{'text': 'Please enter the city of Destination'}], 'type': 'text', 'value': '$Destination_city'}
inside
inside
Destination_city
entity_object -------------- is None None
2020-04-30 09:50:51.863008 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-30 09:50:51.864008%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:71.8
2020-04-30 09:50:51.864008%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4632170496, percent=63.6, used=8105541632, free=4632170496)
2020-04-30 09:50:51.864008%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:51.864008%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:51.866000%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:53.876625 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-30 09:50:53.876625%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:70.6
2020-04-30 09:50:53.876625%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4634189824, percent=63.6, used=8103522304, free=4634189824)
2020-04-30 09:50:53.877620%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:53.877620%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:53,902] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:53] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-30 09:50:53,910] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:53] "[37mPOST /addentity HTTP/1.1[0m" 201 -
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}]
{'Departure_city': 423, 'Destination_city': 424}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Departure_date', 'name': 'Departure_date', 'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'type': 'text', 'value': '$Departure_date'}
inside
inside
Departure_date
entity_object -------------- is None None
2020-04-30 09:50:55.928093 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-30 09:50:55.928093%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.9
2020-04-30 09:50:55.928093%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4616605696, percent=63.8, used=8121106432, free=4616605696)
2020-04-30 09:50:55.929090%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:55.929090%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:55.931086%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:57.943308 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-30 09:50:57.943308%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.0
2020-04-30 09:50:57.944304%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4618407936, percent=63.7, used=8119304192, free=4618407936)
2020-04-30 09:50:57.945304%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:50:57.945304%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:50:57,992] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:57] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-30 09:50:58,002] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:50:58] "[37mPOST /addentity HTTP/1.1[0m" 201 -
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]
{'Departure_city': 423, 'Destination_city': 424, 'Departure_date': 425}
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]
Departure_city
2020-04-30 09:51:00.018021 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:00.018021%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.4
2020-04-30 09:51:00.018021%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4618600448, percent=63.7, used=8119111680, free=4618600448)
2020-04-30 09:51:00.018021%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:00.018021%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:00.028993%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:00,054] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:00] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Destination_city
2020-04-30 09:51:02.069431 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:02.069431%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.9
2020-04-30 09:51:02.069431%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4510629888, percent=64.6, used=8227082240, free=4510629888)
2020-04-30 09:51:02.069431%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:02.069431%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:02.074419%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:02,096] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:02] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_city
2020-04-30 09:51:04.116450 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:04.116450%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:67.3
2020-04-30 09:51:04.116450%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4523167744, percent=64.5, used=8214544384, free=4523167744)
2020-04-30 09:51:04.116450%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:04.116450%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:04.122434%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:04,141] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:04] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Destination_city
2020-04-30 09:51:06.153032 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:06.153032%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.0
2020-04-30 09:51:06.153032%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4570497024, percent=64.1, used=8167215104, free=4570497024)
2020-04-30 09:51:06.153032%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:06.153032%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:06.155996%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:06,169] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:06] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_date
2020-04-30 09:51:08.180583 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:08.180583%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.3
2020-04-30 09:51:08.181580%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4566990848, percent=64.1, used=8170721280, free=4566990848)
2020-04-30 09:51:08.181580%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:08.181580%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:08.187564%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:08,206] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:08] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_date
2020-04-30 09:51:10.218802 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:10.218802%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.4
2020-04-30 09:51:10.218802%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4582514688, percent=64.0, used=8155197440, free=4582514688)
2020-04-30 09:51:10.218802%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:10.218802%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:10.223789%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:10,243] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:10] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_date
2020-04-30 09:51:12.267469 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:51:12.267469%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.3
2020-04-30 09:51:12.267469%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4556980224, percent=64.2, used=8180731904, free=4556980224)
2020-04-30 09:51:12.267469%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:12.267469%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:12.274482%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:12,303] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:12] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
------
[{'txt': 'i want to book a one way flight', 'example_entitiy': []}, {'txt': 'I am looking for flight', 'example_entitiy': []}, {'txt': 'I want to book a return flight', 'example_entitiy': []}, {'txt': 'I want to book flight', 'example_entitiy': []}, {'txt': 'can you help me with flight booking?', 'example_entitiy': []}, {'txt': 'I want to fly from Mumbai to Pune', 'example_entitiy': [{'startPosition': 20, 'endPosition': 25, 'entitiy_instance_id': 1230, 'Parameter_name': 'Departure_city'}, {'startPosition': 30, 'endPosition': 33, 'entitiy_instance_id': 1231, 'Parameter_name': 'Destination_city'}]}, {'txt': 'Looking for a oneway flight', 'example_entitiy': []}, {'txt': 'Help me in booking flight', 'example_entitiy': []}, {'txt': 'I want to book a flight ticket', 'example_entitiy': []}, {'txt': 'i want to book a two way flight', 'example_entitiy': []}, {'txt': 'I want to fly from Syria to Paris', 'example_entitiy': [{'startPosition': 20, 'endPosition': 24, 'entitiy_instance_id': 1232, 'Parameter_name': 'Departure_city'}, {'startPosition': 29, 'endPosition': 33, 'entitiy_instance_id': 1233, 'Parameter_name': 'Destination_city'}]}, {'txt': 'on 11/2/2020', 'example_entitiy': [{'startPosition': 4, 'endPosition': 12, 'entitiy_instance_id': 1234, 'Parameter_name': 'Departure_date'}]}, {'txt': 'on 5-July', 'example_entitiy': [{'startPosition': 4, 'endPosition': 9, 'entitiy_instance_id': 1235, 'Parameter_name': 'Departure_date'}]}, {'txt': '5/July', 'example_entitiy': [{'startPosition': 1, 'endPosition': 6, 'entitiy_instance_id': 1236, 'Parameter_name': 'Departure_date'}]}]
------
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]
------
{'intent': 'Flight booking', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Thank you for your request, I will show you all available flights match your request.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://116.202.231.60:5001/testcardset', 'type': 'CardSet'}], 'trainingExample': [{'txt': 'i want to book a one way flight', 'example_entitiy': []}, {'txt': 'I am looking for flight', 'example_entitiy': []}, {'txt': 'I want to book a return flight', 'example_entitiy': []}, {'txt': 'I want to book flight', 'example_entitiy': []}, {'txt': 'can you help me with flight booking?', 'example_entitiy': []}, {'txt': 'I want to fly from Mumbai to Pune', 'example_entitiy': [{'startPosition': 20, 'endPosition': 25, 'entitiy_instance_id': 1230, 'Parameter_name': 'Departure_city'}, {'startPosition': 30, 'endPosition': 33, 'entitiy_instance_id': 1231, 'Parameter_name': 'Destination_city'}]}, {'txt': 'Looking for a oneway flight', 'example_entitiy': []}, {'txt': 'Help me in booking flight', 'example_entitiy': []}, {'txt': 'I want to book a flight ticket', 'example_entitiy': []}, {'txt': 'i want to book a two way flight', 'example_entitiy': []}, {'txt': 'I want to fly from Syria to Paris', 'example_entitiy': [{'startPosition': 20, 'endPosition': 24, 'entitiy_instance_id': 1232, 'Parameter_name': 'Departure_city'}, {'startPosition': 29, 'endPosition': 33, 'entitiy_instance_id': 1233, 'Parameter_name': 'Destination_city'}]}, {'txt': 'on 11/2/2020', 'example_entitiy': [{'startPosition': 4, 'endPosition': 12, 'entitiy_instance_id': 1234, 'Parameter_name': 'Departure_date'}]}, {'txt': 'on 5-July', 'example_entitiy': [{'startPosition': 4, 'endPosition': 9, 'entitiy_instance_id': 1235, 'Parameter_name': 'Departure_date'}]}, {'txt': '5/July', 'example_entitiy': [{'startPosition': 1, 'endPosition': 6, 'entitiy_instance_id': 1236, 'Parameter_name': 'Departure_date'}]}], 'parameters': [{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]}
-------------- add intent
2020-04-30 09:51:14.318392 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:51:14.318392%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.9
2020-04-30 09:51:14.318392%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4598304768, percent=63.9, used=8139407360, free=4598304768)
2020-04-30 09:51:14.318392%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:14.318392%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:14.327365%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:16.350513 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:51:16.350513%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.4
2020-04-30 09:51:16.350513%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4593401856, percent=63.9, used=8144310272, free=4593401856)
2020-04-30 09:51:16.351511%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:51:16.351511%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:16,390] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:16] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:51:18.403001 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 09:51:18.403001%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.9
2020-04-30 09:51:18.403001%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4630749184, percent=63.6, used=8106962944, free=4630749184)
2020-04-30 09:51:18.403001%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Departure_city
[2020-04-30 09:51:18,459] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:18] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 09:51:20.468119 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 09:51:20.469116%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.9
2020-04-30 09:51:20.469116%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4639215616, percent=63.6, used=8098496512, free=4639215616)
2020-04-30 09:51:20.469116%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Destination_city
[2020-04-30 09:51:20,520] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:20] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 09:51:22.537506 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 09:51:22.537506%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.9
2020-04-30 09:51:22.537506%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4642955264, percent=63.5, used=8094756864, free=4642955264)
2020-04-30 09:51:22.537506%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Departure_date
[2020-04-30 09:51:22,570] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:22] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 09:51:24.581041 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:24.581041%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.3
2020-04-30 09:51:24.581041%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4639789056, percent=63.6, used=8097923072, free=4639789056)
2020-04-30 09:51:24.581041%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:24,608] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:24] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:26.622585 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:26.622585%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:53.2
2020-04-30 09:51:26.622585%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4636958720, percent=63.6, used=8100753408, free=4636958720)
2020-04-30 09:51:26.622585%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:26,652] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:26] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:28.667142 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:28.667142%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:74.9
2020-04-30 09:51:28.667142%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4626370560, percent=63.7, used=8111341568, free=4626370560)
2020-04-30 09:51:28.667142%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:28,693] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:28] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:30.709651 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:30.709651%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:65.9
2020-04-30 09:51:30.709651%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4627521536, percent=63.7, used=8110190592, free=4627521536)
2020-04-30 09:51:30.709651%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:30,736] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:30] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:32.748592 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:32.748592%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.5
2020-04-30 09:51:32.748592%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4612894720, percent=63.8, used=8124817408, free=4612894720)
2020-04-30 09:51:32.748592%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:32,770] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:32] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:34.788137 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:34.788137%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.9
2020-04-30 09:51:34.789134%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4625448960, percent=63.7, used=8112263168, free=4625448960)
2020-04-30 09:51:34.789134%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:34,811] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:34] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:36.823695 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:51:36.823695%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.1
2020-04-30 09:51:36.823695%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4611866624, percent=63.8, used=8125845504, free=4611866624)
2020-04-30 09:51:36.823695%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:36,854] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:36] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:51:38.876678 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:51:38.876678%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.0
2020-04-30 09:51:38.876678%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4599287808, percent=63.9, used=8138424320, free=4599287808)
2020-04-30 09:51:38.876678%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:38,894] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:38] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:51:40.907084 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:40.907084%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:71.6
2020-04-30 09:51:40.907084%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4622176256, percent=63.7, used=8115535872, free=4622176256)
2020-04-30 09:51:40.908054%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:40,930] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:40] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:42.941838 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:42.941838%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.8
2020-04-30 09:51:42.942835%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4623147008, percent=63.7, used=8114565120, free=4623147008)
2020-04-30 09:51:42.942835%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:42,971] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:42] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:44.979513 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:44.979513%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.3
2020-04-30 09:51:44.979513%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4623355904, percent=63.7, used=8114356224, free=4623355904)
2020-04-30 09:51:44.979513%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:44,999] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:44] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:47.012049 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:47.012049%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.2
2020-04-30 09:51:47.012049%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4607860736, percent=63.8, used=8129851392, free=4607860736)
2020-04-30 09:51:47.013009%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:47,065] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:47] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:49.082917 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:49.082917%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.0
2020-04-30 09:51:49.082917%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4608167936, percent=63.8, used=8129544192, free=4608167936)
2020-04-30 09:51:49.082917%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:49,108] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:49] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:51.132551 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:51:51.132551%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:81.0
2020-04-30 09:51:51.132551%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4659752960, percent=63.4, used=8077959168, free=4659752960)
2020-04-30 09:51:51.132551%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:51,155] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:51] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:51:53.182627 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:51:53.182627%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:54.3
2020-04-30 09:51:53.182627%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4658413568, percent=63.4, used=8079298560, free=4658413568)
2020-04-30 09:51:53.182627%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:53,213] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:53] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:51:55.228840 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:55.228840%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.8
2020-04-30 09:51:55.228840%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4668665856, percent=63.3, used=8069046272, free=4668665856)
2020-04-30 09:51:55.228840%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:55,280] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:55] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:51:57.303567 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:51:57.303567%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.4
2020-04-30 09:51:57.303567%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4652548096, percent=63.5, used=8085164032, free=4652548096)
2020-04-30 09:51:57.303567%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:57,320] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:57] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:51:59.342476 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:51:59.342476%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.0
2020-04-30 09:51:59.342476%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4673073152, percent=63.3, used=8064638976, free=4673073152)
2020-04-30 09:51:59.342476%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:51:59,384] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:51:59] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:01.397554 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:52:01.397554%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.9
2020-04-30 09:52:01.397554%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4657299456, percent=63.4, used=8080412672, free=4657299456)
2020-04-30 09:52:01.397554%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:01,419] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:01] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:52:03.429679 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:03.429679%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.1
2020-04-30 09:52:03.429679%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4683722752, percent=63.2, used=8053989376, free=4683722752)
2020-04-30 09:52:03.429679%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:03,462] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:03] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:05.475784 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:52:05.475784%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:2.3
2020-04-30 09:52:05.475784%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4684091392, percent=63.2, used=8053620736, free=4684091392)
2020-04-30 09:52:05.475784%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:05,510] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:05] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
[2020-04-30 09:52:05,519] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:05] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Thank you for your request, I will show you all available flights match your request.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://116.202.231.60:5001/testcardset', 'type': 'CardSet'}], 'agent_id': '61', 'endOfConversation': False, 'id': 418, 'inputContext': '', 'intent': 'Flight booking', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 423, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_city', 'prompts': [{'text': 'Please enter the city of departure'}], 'type': 'text', 'value': '$Departure_city'}, {'EntityId': 424, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Destination_city', 'prompts': [{'text': 'Please enter the city of Destination'}], 'type': 'text', 'value': '$Destination_city'}, {'EntityId': 425, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_date', 'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'type': 'text', 'value': '$Departure_date'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'i want to book a one way flight'}, {'example_entitiy': [], 'txt': 'I am looking for flight'}, {'example_entitiy': [], 'txt': 'I want to book a return flight'}, {'example_entitiy': [], 'txt': 'I want to book flight'}, {'example_entitiy': [], 'txt': 'can you help me with flight booking?'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 25, 'entitiy_instance_id': 1230, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1231, 'startPosition': 30}], 'txt': 'I want to fly from Mumbai to Pune'}, {'example_entitiy': [], 'txt': 'Looking for a oneway flight'}, {'example_entitiy': [], 'txt': 'Help me in booking flight'}, {'example_entitiy': [], 'txt': 'I want to book a flight ticket'}, {'example_entitiy': [], 'txt': 'i want to book a two way flight'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 24, 'entitiy_instance_id': 1232, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1233, 'startPosition': 29}], 'txt': 'I want to fly from Syria to Paris'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 12, 'entitiy_instance_id': 1234, 'startPosition': 4}], 'txt': 'on 11/2/2020'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 9, 'entitiy_instance_id': 1235, 'startPosition': 4}], 'txt': 'on 5-July'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 6, 'entitiy_instance_id': 1236, 'startPosition': 1}], 'txt': '5/July'}]}}
====
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'show me the details of flight number 1', 'example_entitiy': []}, {'txt': 'flight_number_1', 'example_entitiy': []}]
------
[]
------
{'intent': 'Flight_number_1', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': 'Flight_number_1_followup', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [{'payloadText': 'book', 'title': 'book'}, {'payloadText': 'back', 'title': '/restart'}, {'payloadText': '/Flight_number_2', 'title': '/Flight_number_2'}], '_order': 1, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'card'}], 'trainingExample': [{'txt': 'show me the details of flight number 1', 'example_entitiy': []}, {'txt': 'flight_number_1', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 09:52:07.541465 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:52:07.541465%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.9
2020-04-30 09:52:07.541465%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4684115968, percent=63.2, used=8053596160, free=4684115968)
2020-04-30 09:52:07.541465%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:07.541465%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:07.549443%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:09.568866 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:52:09.568866%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.1
2020-04-30 09:52:09.569863%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585603072, percent=64.0, used=8152109056, free=4585603072)
2020-04-30 09:52:09.569863%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:09.569863%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:09,624] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:09] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:52:11.639445 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:11.639445%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:19.8
2020-04-30 09:52:11.640441%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4598370304, percent=63.9, used=8139341824, free=4598370304)
2020-04-30 09:52:11.640441%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:11,675] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:11] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:13.689178 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:13.689178%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.4
2020-04-30 09:52:13.690175%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4598124544, percent=63.9, used=8139587584, free=4598124544)
2020-04-30 09:52:13.690175%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:13,732] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:13] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 09:52:13,741] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:13] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [{'payloadText': 'book', 'title': 'book'}, {'payloadText': 'back', 'title': '/restart'}, {'payloadText': '/Flight_number_2', 'title': '/Flight_number_2'}], '_order': 1, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 419, 'inputContext': '', 'intent': 'Flight_number_1', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': 'Flight_number_1_followup', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 1'}, {'example_entitiy': [], 'txt': 'flight_number_1'}]}}
====
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'show me the details of flight number 2', 'example_entitiy': []}, {'txt': 'flight_number_2', 'example_entitiy': []}]
------
[]
------
{'intent': 'Flight_number_2', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': 'https://www.telegraph.co.uk/content/dam/Travel/hotels/europe/france/paris/paris-cityscape-overview-guide.jpg', 'txt': 'this flight from Damascus to Paris', 'type': 'image'}, {'Buttons': [{'payloadText': 'Book', 'title': 'Book'}, {'payloadText': '/restart', 'title': '/restart'}, {'payloadText': '/Flight_number_1', 'title': '/Flight_number_1'}], '_order': 2, 'image': '', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'quick'}], 'trainingExample': [{'txt': 'show me the details of flight number 2', 'example_entitiy': []}, {'txt': 'flight_number_2', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 09:52:15.761382 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:52:15.761382%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.5
2020-04-30 09:52:15.762380%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4568137728, percent=64.1, used=8169574400, free=4568137728)
2020-04-30 09:52:15.762380%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:15.762380%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:15.766370%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:17.777728 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:52:17.777728%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.4
2020-04-30 09:52:17.777728%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4578353152, percent=64.1, used=8159358976, free=4578353152)
2020-04-30 09:52:17.778725%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:17.778725%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:17,824] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:17] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:52:19.844553 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:19.844553%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.7
2020-04-30 09:52:19.844553%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4507152384, percent=64.6, used=8230559744, free=4507152384)
2020-04-30 09:52:19.845550%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:19,882] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:19] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:21.893768 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:21.893768%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.3
2020-04-30 09:52:21.893768%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4411236352, percent=65.4, used=8326475776, free=4411236352)
2020-04-30 09:52:21.893768%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:21,919] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:21] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 09:52:21,929] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:21] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': 'https://www.telegraph.co.uk/content/dam/Travel/hotels/europe/france/paris/paris-cityscape-overview-guide.jpg', 'txt': 'this flight from Damascus to Paris', 'type': 'image'}, {'Buttons': [{'payloadText': 'Book', 'title': 'Book'}, {'payloadText': '/restart', 'title': '/restart'}, {'payloadText': '/Flight_number_1', 'title': '/Flight_number_1'}], '_order': 2, 'image': '', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 420, 'inputContext': '', 'intent': 'Flight_number_2', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 2'}, {'example_entitiy': [], 'txt': 'flight_number_2'}]}}
====
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'book', 'example_entitiy': []}, {'txt': 'Booking', 'example_entitiy': []}]
------
[]
------
{'intent': 'Book', 'language': 'en', 'agent_id': '61', 'endOfConversation': True, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'thank you for choosing our lines.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'your Flight has been booked successfully,\nFlight details\n:From: $Departure_city\nTo: $Destination_city \nDate: $Departure_date::', 'type': 'text'}, {'Buttons': [{'payloadText': '1 Star', 'title': '1 Star'}, {'payloadText': '2 Star', 'title': '2 Star'}, {'payloadText': '3 Star', 'title': '3 Star'}, {'payloadText': '4 Star', 'title': '4 Star'}, {'payloadText': '5 Star', 'title': '5 Star'}], '_order': 3, 'image': '', 'txt': 'Rate our Customer Service please.', 'type': 'quick'}], 'trainingExample': [{'txt': 'book', 'example_entitiy': []}, {'txt': 'Booking', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 09:52:23.952263 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:52:23.952263%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.3
2020-04-30 09:52:23.952263%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4415950848, percent=65.3, used=8321761280, free=4415950848)
2020-04-30 09:52:23.952263%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:23.952263%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:23.957246%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:25.968199 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:52:25.968199%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.7
2020-04-30 09:52:25.968199%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4402982912, percent=65.4, used=8334729216, free=4402982912)
2020-04-30 09:52:25.968199%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:25.968199%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:26,010] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:26] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:52:28.023673 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:28.023673%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.0
2020-04-30 09:52:28.023673%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4410032128, percent=65.4, used=8327680000, free=4410032128)
2020-04-30 09:52:28.023673%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:28,040] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:28] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:30.053242 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:30.053242%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.3
2020-04-30 09:52:30.053242%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4429053952, percent=65.2, used=8308658176, free=4429053952)
2020-04-30 09:52:30.053242%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:30,074] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:30] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 09:52:30,082] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:30] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'thank you for choosing our lines.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'your Flight has been booked successfully,\nFlight details\n:From: $Departure_city\nTo: $Destination_city \nDate: $Departure_date::', 'type': 'text'}, {'Buttons': [{'payloadText': '1 Star', 'title': '1 Star'}, {'payloadText': '2 Star', 'title': '2 Star'}, {'payloadText': '3 Star', 'title': '3 Star'}, {'payloadText': '4 Star', 'title': '4 Star'}, {'payloadText': '5 Star', 'title': '5 Star'}], '_order': 3, 'image': '', 'txt': 'Rate our Customer Service please.', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': True, 'id': 421, 'inputContext': '', 'intent': 'Book', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'book'}, {'example_entitiy': [], 'txt': 'Booking'}]}}
====
33333333333333333333----------------------------------
========================================
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Email', 'name': 'Email', 'prompts': [{'text': 'enter your email which will receive our response.'}], 'type': 'text', 'value': '$Email'}
inside
inside
Email
entity_object -------------- is None None
2020-04-30 09:52:32.107204 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addentity [POST]
2020-04-30 09:52:32.107204%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.2
2020-04-30 09:52:32.107204%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4419842048, percent=65.3, used=8317870080, free=4419842048)
2020-04-30 09:52:32.107204%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:32.107204%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:32.119141%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:34.141997 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity [POST]
2020-04-30 09:52:34.141997%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:6.7
2020-04-30 09:52:34.141997%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4504399872, percent=64.6, used=8233312256, free=4504399872)
2020-04-30 09:52:34.141997%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:34.141997%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:34,183] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:34] "[37mPOST /entity HTTP/1.1[0m" 201 -
[2020-04-30 09:52:34,190] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:34] "[37mPOST /addentity HTTP/1.1[0m" 201 -
[{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]
{'Email': 426}
[{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]
Email
2020-04-30 09:52:36.202724 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:52:36.202724%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.9
2020-04-30 09:52:36.202724%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4505669632, percent=64.6, used=8232042496, free=4505669632)
2020-04-30 09:52:36.202724%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:36.202724%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:36.211666%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:36,237] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:36] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Email
2020-04-30 09:52:38.256368 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 09:52:38.256368%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.4
2020-04-30 09:52:38.256368%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4408295424, percent=65.4, used=8329416704, free=4408295424)
2020-04-30 09:52:38.257365%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:38.257365%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:38.261357%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:38,280] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:38] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
------
[{'txt': 'I wanna send you an Email', 'example_entitiy': []}, {'txt': 'I need to contact you', 'example_entitiy': []}, {'txt': 'I need to send an email to a human', 'example_entitiy': []}, {'txt': 'Can I get the Manager', 'example_entitiy': []}, {'txt': 'mohammad@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 18, 'entitiy_instance_id': 1237, 'Parameter_name': 'Email'}]}, {'txt': 'Client@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 16, 'entitiy_instance_id': 1238, 'Parameter_name': 'Email'}]}]
------
[{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]
------
{'intent': 'Email_us', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a response on your Email ASAP.::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}, {'payloadText': '/Add_Suggestion', 'title': '/Add_Suggestion'}], '_order': 2, 'image': '', 'txt': 'do you need any thing else', 'type': 'quick'}], 'trainingExample': [{'txt': 'I wanna send you an Email', 'example_entitiy': []}, {'txt': 'I need to contact you', 'example_entitiy': []}, {'txt': 'I need to send an email to a human', 'example_entitiy': []}, {'txt': 'Can I get the Manager', 'example_entitiy': []}, {'txt': 'mohammad@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 18, 'entitiy_instance_id': 1237, 'Parameter_name': 'Email'}]}, {'txt': 'Client@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 16, 'entitiy_instance_id': 1238, 'Parameter_name': 'Email'}]}], 'parameters': [{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]}
-------------- add intent
2020-04-30 09:52:40.303896 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:52:40.303896%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:54.4
2020-04-30 09:52:40.303896%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4422340608, percent=65.3, used=8315371520, free=4422340608)
2020-04-30 09:52:40.303896%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:40.303896%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:40.306888%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:42.316537 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:52:42.316537%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.3
2020-04-30 09:52:42.316537%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4419129344, percent=65.3, used=8318582784, free=4419129344)
2020-04-30 09:52:42.316537%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:52:42.316537%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:42,348] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:42] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:52:44.360033 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 09:52:44.360033%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.8
2020-04-30 09:52:44.360033%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439687168, percent=65.1, used=8298024960, free=4439687168)
2020-04-30 09:52:44.360033%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Email
[2020-04-30 09:52:44,419] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:44] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 09:52:46.431594 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:46.431594%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:2.3
2020-04-30 09:52:46.431594%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4440035328, percent=65.1, used=8297676800, free=4440035328)
2020-04-30 09:52:46.431594%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:46,473] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:46] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:48.488775 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:48.488775%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:5.9
2020-04-30 09:52:48.488775%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4454428672, percent=65.0, used=8283283456, free=4454428672)
2020-04-30 09:52:48.488775%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:48,525] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:48] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:50.537550 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:50.537550%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:2.1
2020-04-30 09:52:50.537550%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4451295232, percent=65.1, used=8286416896, free=4451295232)
2020-04-30 09:52:50.538549%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:50,572] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:50] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:52.592926 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:52.592926%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.2
2020-04-30 09:52:52.592926%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4449398784, percent=65.1, used=8288313344, free=4449398784)
2020-04-30 09:52:52.592926%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:52,617] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:52] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:54.635488 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:54.635488%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:49.8
2020-04-30 09:52:54.635488%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489162752, percent=64.8, used=8248549376, free=4489162752)
2020-04-30 09:52:54.635488%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:54,675] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:54] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:52:56.686394 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:52:56.686394%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.4
2020-04-30 09:52:56.686394%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4489269248, percent=64.8, used=8248442880, free=4489269248)
2020-04-30 09:52:56.686394%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:56,709] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:56] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 09:52:58.718845 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:52:58.718845%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.1
2020-04-30 09:52:58.718845%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4483358720, percent=64.8, used=8254353408, free=4483358720)
2020-04-30 09:52:58.718845%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:52:58,740] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:52:58] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:53:00.757646 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 09:53:00.757646%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.1
2020-04-30 09:53:00.758644%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4469960704, percent=64.9, used=8267751424, free=4469960704)
2020-04-30 09:53:00.758644%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:53:00,793] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:00] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
[2020-04-30 09:53:00,800] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:00] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a response on your Email ASAP.::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}, {'payloadText': '/Add_Suggestion', 'title': '/Add_Suggestion'}], '_order': 2, 'image': '', 'txt': 'do you need any thing else', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 422, 'inputContext': '', 'intent': 'Email_us', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 426, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Email', 'prompts': [{'text': 'enter your email which will receive our response.'}], 'type': 'text', 'value': '$Email'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'I wanna send you an Email'}, {'example_entitiy': [], 'txt': 'I need to contact you'}, {'example_entitiy': [], 'txt': 'I need to send an email to a human'}, {'example_entitiy': [], 'txt': 'Can I get the Manager'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 18, 'entitiy_instance_id': 1237, 'startPosition': 1}], 'txt': 'mohammad@gmail.com'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 16, 'entitiy_instance_id': 1238, 'startPosition': 1}], 'txt': 'Client@gmail.com'}]}}
====
========================================
[]
------
[{'txt': 'sub1', 'example_entitiy': []}, {'txt': 'sub2', 'example_entitiy': []}]
------
[]
------
{'intent': 'Flight_number_1_sub', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': 'Flight_number_1_followup', 'outputContext': '', 'parent': {'name': 'Flight_number_1', 'agent_id': '61'}, 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'here is sub reply::', 'type': 'text'}], 'trainingExample': [{'txt': 'sub1', 'example_entitiy': []}, {'txt': 'sub2', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 09:53:02.818445 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 09:53:02.818445%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.5
2020-04-30 09:53:02.818445%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4478550016, percent=64.8, used=8259162112, free=4478550016)
2020-04-30 09:53:02.819478%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:53:02.819478%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:53:02.825460%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 09:53:04.851406 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 09:53:04.851406%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.9
2020-04-30 09:53:04.852403%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4478636032, percent=64.8, used=8259076096, free=4478636032)
2020-04-30 09:53:04.852403%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 09:53:04.852403%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:53:04,899] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:04] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 09:53:06.912901 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:53:06.912901%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.6
2020-04-30 09:53:06.912901%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4478443520, percent=64.8, used=8259268608, free=4478443520)
2020-04-30 09:53:06.912901%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:53:06,950] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:06] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 09:53:08.962389 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 09:53:08.962389%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.3
2020-04-30 09:53:08.962389%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4474302464, percent=64.9, used=8263409664, free=4474302464)
2020-04-30 09:53:08.962389%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 09:53:08,987] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:08] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 09:53:08,994] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:08] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'here is sub reply::', 'type': 'text'}], 'agent_id': '61', 'endOfConversation': False, 'id': 423, 'inputContext': 'Flight_number_1_followup', 'intent': 'Flight_number_1_sub', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'parent': {'agent_id': '61', 'name': 'Flight_number_1'}, 'trainingExample': [{'example_entitiy': [], 'txt': 'sub1'}, {'example_entitiy': [], 'txt': 'sub2'}]}}
[{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'I am Glad to Chat you::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}], '_order': 3, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'txt': 'How Can I help you?', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 417, 'inputContext': '', 'intent': 'Default welcome intent', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'just going to say hi'}, {'example_entitiy': [], 'txt': 'heya'}, {'example_entitiy': [], 'txt': 'hello hi'}, {'example_entitiy': [], 'txt': 'howdy'}, {'example_entitiy': [], 'txt': 'hey there'}, {'example_entitiy': [], 'txt': 'hi there'}, {'example_entitiy': [], 'txt': 'greetings'}, {'example_entitiy': [], 'txt': 'hey'}, {'example_entitiy': [], 'txt': 'long time no see'}, {'example_entitiy': [], 'txt': 'hello'}, {'example_entitiy': [], 'txt': "lovely day isn't it"}, {'example_entitiy': [], 'txt': 'I greet you'}, {'example_entitiy': [], 'txt': 'hello again'}, {'example_entitiy': [], 'txt': 'hi'}, {'example_entitiy': [], 'txt': 'hello there'}, {'example_entitiy': [], 'txt': 'a good day'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Thank you for your request, I will show you all available flights match your request.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://116.202.231.60:5001/testcardset', 'type': 'CardSet'}], 'agent_id': '61', 'endOfConversation': False, 'id': 418, 'inputContext': '', 'intent': 'Flight booking', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 423, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_city', 'prompts': [{'text': 'Please enter the city of departure'}], 'type': 'text', 'value': '$Departure_city'}, {'EntityId': 424, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Destination_city', 'prompts': [{'text': 'Please enter the city of Destination'}], 'type': 'text', 'value': '$Destination_city'}, {'EntityId': 425, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_date', 'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'type': 'text', 'value': '$Departure_date'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'i want to book a one way flight'}, {'example_entitiy': [], 'txt': 'I am looking for flight'}, {'example_entitiy': [], 'txt': 'I want to book a return flight'}, {'example_entitiy': [], 'txt': 'I want to book flight'}, {'example_entitiy': [], 'txt': 'can you help me with flight booking?'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 25, 'entitiy_instance_id': 1230, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1231, 'startPosition': 30}], 'txt': 'I want to fly from Mumbai to Pune'}, {'example_entitiy': [], 'txt': 'Looking for a oneway flight'}, {'example_entitiy': [], 'txt': 'Help me in booking flight'}, {'example_entitiy': [], 'txt': 'I want to book a flight ticket'}, {'example_entitiy': [], 'txt': 'i want to book a two way flight'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 24, 'entitiy_instance_id': 1232, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1233, 'startPosition': 29}], 'txt': 'I want to fly from Syria to Paris'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 12, 'entitiy_instance_id': 1234, 'startPosition': 4}], 'txt': 'on 11/2/2020'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 9, 'entitiy_instance_id': 1235, 'startPosition': 4}], 'txt': 'on 5-July'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 6, 'entitiy_instance_id': 1236, 'startPosition': 1}], 'txt': '5/July'}]}}, {'response': {'Responses': [{'Buttons': [{'payloadText': 'book', 'title': 'book'}, {'payloadText': 'back', 'title': '/restart'}, {'payloadText': '/Flight_number_2', 'title': '/Flight_number_2'}], '_order': 1, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 419, 'inputContext': '', 'intent': 'Flight_number_1', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': 'Flight_number_1_followup', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 1'}, {'example_entitiy': [], 'txt': 'flight_number_1'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': 'https://www.telegraph.co.uk/content/dam/Travel/hotels/europe/france/paris/paris-cityscape-overview-guide.jpg', 'txt': 'this flight from Damascus to Paris', 'type': 'image'}, {'Buttons': [{'payloadText': 'Book', 'title': 'Book'}, {'payloadText': '/restart', 'title': '/restart'}, {'payloadText': '/Flight_number_1', 'title': '/Flight_number_1'}], '_order': 2, 'image': '', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 420, 'inputContext': '', 'intent': 'Flight_number_2', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 2'}, {'example_entitiy': [], 'txt': 'flight_number_2'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'thank you for choosing our lines.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'your Flight has been booked successfully,\nFlight details\n:From: $Departure_city\nTo: $Destination_city \nDate: $Departure_date::', 'type': 'text'}, {'Buttons': [{'payloadText': '1 Star', 'title': '1 Star'}, {'payloadText': '2 Star', 'title': '2 Star'}, {'payloadText': '3 Star', 'title': '3 Star'}, {'payloadText': '4 Star', 'title': '4 Star'}, {'payloadText': '5 Star', 'title': '5 Star'}], '_order': 3, 'image': '', 'txt': 'Rate our Customer Service please.', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': True, 'id': 421, 'inputContext': '', 'intent': 'Book', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'book'}, {'example_entitiy': [], 'txt': 'Booking'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a response on your Email ASAP.::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}, {'payloadText': '/Add_Suggestion', 'title': '/Add_Suggestion'}], '_order': 2, 'image': '', 'txt': 'do you need any thing else', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 422, 'inputContext': '', 'intent': 'Email_us', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 426, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Email', 'prompts': [{'text': 'enter your email which will receive our response.'}], 'type': 'text', 'value': '$Email'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'I wanna send you an Email'}, {'example_entitiy': [], 'txt': 'I need to contact you'}, {'example_entitiy': [], 'txt': 'I need to send an email to a human'}, {'example_entitiy': [], 'txt': 'Can I get the Manager'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 18, 'entitiy_instance_id': 1237, 'startPosition': 1}], 'txt': 'mohammad@gmail.com'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 16, 'entitiy_instance_id': 1238, 'startPosition': 1}], 'txt': 'Client@gmail.com'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'here is sub reply::', 'type': 'text'}], 'agent_id': '61', 'endOfConversation': False, 'id': 423, 'inputContext': 'Flight_number_1_followup', 'intent': 'Flight_number_1_sub', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'parent': {'agent_id': '61', 'name': 'Flight_number_1'}, 'trainingExample': [{'example_entitiy': [], 'txt': 'sub1'}, {'example_entitiy': [], 'txt': 'sub2'}]}}]
444444444444444444----------------------------------
2020-04-30 09:53:08.996298 current_import_export_operation =  0
[2020-04-30 09:53:09,001] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 09:53:09] "[37mPOST /ImportIntents?agentId=61&language=en HTTP/1.1[0m" 200 -
2020-04-30 10:13:33.866128 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:13:33.866128%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.3
2020-04-30 10:13:33.866128%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4904648704, percent=61.5, used=7833063424, free=4904648704)
2020-04-30 10:13:33.867129%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:33.867129%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:33,868] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:33] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:13:33.870120 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:13:33.870120%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:13:33.871115%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4904640512, percent=61.5, used=7833071616, free=4904640512)
2020-04-30 10:13:33.871115%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:33.871115%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:33,874] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:33] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:13:33.886075 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:13:33.886075%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:13:33.886075%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4904599552, percent=61.5, used=7833112576, free=4904599552)
2020-04-30 10:13:33.886075%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:33,888] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:33] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:13:34.116064 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:13:34.116064%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.3
2020-04-30 10:13:34.116064%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4904517632, percent=61.5, used=7833194496, free=4904517632)
2020-04-30 10:13:34.116064%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:34.116064%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:34.123047%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:34,140] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:34] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:13:34.188869 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:13:34.188869%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:13:34.189866%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4905738240, percent=61.5, used=7831973888, free=4905738240)
2020-04-30 10:13:34.189866%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:34.189866%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:34.194853 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:13:34.194853%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:13:34.194853%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4902592512, percent=61.5, used=7835119616, free=4902592512)
2020-04-30 10:13:34.194853%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:34.203829%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:34.218790%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:34,225] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:34] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:13:34,234] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:34] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:13:38.721468 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 10:13:38.721468%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.9
2020-04-30 10:13:38.721468%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4904013824, percent=61.5, used=7833698304, free=4904013824)
2020-04-30 10:13:38.721468%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:38.721468%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:38,725] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:13:38] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:13:39.035198 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:13:39.035198%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.9
2020-04-30 10:13:39.035198%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4904075264, percent=61.5, used=7833636864, free=4904075264)
2020-04-30 10:13:39.035198%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:39.035198%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:13:39.039158%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:13:39,363] ERROR in GenericChatbotController: opening the pipeline config for agent  61
keys ['model']
keys ['case_sensitive']
keys ['features']
keys ['case_sensitive']
keys ['max_history']
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en_sm"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpira0v2d1\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpira0v2d1\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpira0v2d1 model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 10:14:18,121] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:14:19,666] INFO in spacy_utils: Trying to load spacy model with name 'en_sm'
training Status Code 200  ---------------------  61 {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}
[2020-04-30 10:14:19,719] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:14:19] "[35m[1mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 500 -
2020-04-30 10:15:32.135235 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:15:32.135235%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.5
2020-04-30 10:15:32.136239%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4729888768, percent=62.9, used=8007823360, free=4729888768)
2020-04-30 10:15:32.136239%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:15:32,139] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:15:32] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:15:32.385695 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:15:32.385695%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:4.7
2020-04-30 10:15:32.386688%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4736524288, percent=62.8, used=8001187840, free=4736524288)
2020-04-30 10:15:32.386688%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:15:32.386688%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:15:32.396673%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2662 2662
 2- default platform is not  Null 
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en_sm"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpzlo0ng53\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpzlo0ng53\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpzlo0ng53 model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 10:15:56,574] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:15:56,849] INFO in spacy_utils: Trying to load spacy model with name 'en_sm'
training Status Code 200  ---------------------  61 {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}
2020-04-30 10:15:58.902545 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:15:58.902545%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:67.2
2020-04-30 10:15:58.902545%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4687974400, percent=63.2, used=8049737728, free=4687974400)
2020-04-30 10:15:58.902545%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:15:58.902545%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:15:58.912550%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en_sm"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpy15q4176\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpy15q4176\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpy15q4176 model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 10:16:24,617] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:16:25,004] INFO in spacy_utils: Trying to load spacy model with name 'en_sm'
training Status Code 200  ---------------------  61 {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}
[2020-04-30 10:16:25,041] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:16:25] "[35m[1mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 500 -
[2020-04-30 10:16:25,047] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:16:25] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
2020-04-30 10:17:10.252260 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:17:10.252260%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.8
2020-04-30 10:17:10.252260%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4572430336, percent=64.1, used=8165281792, free=4572430336)
2020-04-30 10:17:10.252260%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:17:10,254] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:17:10] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:17:10.502599 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:17:10.502599%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:79.7
2020-04-30 10:17:10.502599%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4592140288, percent=63.9, used=8145571840, free=4592140288)
2020-04-30 10:17:10.502599%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:17:10.507578%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:17:10,513] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:17:10] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:18:30.647587 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 10:18:30.647587%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.4
2020-04-30 10:18:30.647587%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4580069376, percent=64.0, used=8157642752, free=4580069376)
2020-04-30 10:18:30.647587%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:18:30.647587%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:18:30,649] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:18:30] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:18:30.898917 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:18:30.898917%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.1
2020-04-30 10:18:30.898917%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4580057088, percent=64.0, used=8157655040, free=4580057088)
2020-04-30 10:18:30.898917%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:18:30.898917%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:18:30.903901%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en_sm"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpsr67edqq\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpsr67edqq\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpsr67edqq model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 10:19:00,524] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:19:01,280] INFO in spacy_utils: Trying to load spacy model with name 'en_sm'
training Status Code 200  ---------------------  61 {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}
[2020-04-30 10:19:01,340] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:19:01] "[35m[1mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 500 -
[2020-04-30 10:20:12,322] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-30 10:20:17.121184 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 10:20:17.121184%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.3
2020-04-30 10:20:17.121184%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4768022528, percent=62.6, used=7969689600, free=4768022528)
2020-04-30 10:20:17.121184%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:20:17.122218%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:20:17,124] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:20:17] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:20:17.306692 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:20:17.306692%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.8
2020-04-30 10:20:17.306692%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4765372416, percent=62.6, used=7972339712, free=4765372416)
2020-04-30 10:20:17.306692%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:20:17.306692%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:20:17.341599%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:20:17,654] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-30 10:20:17.654760
[2020-04-30 10:20:17,760] ERROR in GenericChatbotController: opening the pipeline config for agent  61
keys ['model']
keys ['case_sensitive']
keys ['features']
keys ['case_sensitive']
keys ['max_history']
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpg_rnp431\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpg_rnp431\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpg_rnp431 model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
2020-04-30 10:20:19.681152 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:20:19.681152%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.8
2020-04-30 10:20:19.681152%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4668592128, percent=63.3, used=8069120000, free=4668592128)
2020-04-30 10:20:19.682149%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:20:19.682149%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:20:19.689129%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2663 2663
 2- default platform is not  Null 
[2020-04-30 10:20:25,558] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:20:25] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
[2020-04-30 10:20:25,564] ERROR in GenericChatbotController: keep alive chatting Response:  {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}, Status_code: 400
['admin@admin.com', 'walaa.mahfoud@gmail.com']
2
0
Content-Type: multipart/mixed; boundary="===============2745073828580324281=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============2745073828580324281==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 69.4 percent

- RAM Usage : 63.5 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 2
--===============2745073828580324281==--

Email sent!
[2020-04-30 10:20:50,506] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:20:50,703] INFO in spacy_utils: Trying to load spacy model with name 'en'
training Status Code 200  ---------------------  61 {'message': "Model 'en' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}
[2020-04-30 10:20:50,734] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:20:50] "[35m[1mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 500 -
[2020-04-30 10:23:25,651] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-30 10:23:27.916854 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 10:23:27.916854%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.6
2020-04-30 10:23:27.916854%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4810829824, percent=62.2, used=7926882304, free=4810829824)
2020-04-30 10:23:27.916854%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:23:27.916854%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:23:27,917] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:23:27] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:23:28.115341 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:23:28.115341%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.5
2020-04-30 10:23:28.115341%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4809871360, percent=62.2, used=7927840768, free=4809871360)
2020-04-30 10:23:28.115341%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:23:28.115341%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:23:28.139290%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:23:28,162] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-30 10:23:28.161224
[2020-04-30 10:23:28,467] ERROR in GenericChatbotController: opening the pipeline config for agent  61
keys ['model']
keys ['case_sensitive']
keys ['features']
keys ['case_sensitive']
keys ['max_history']
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmp6stssx5j\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmp6stssx5j\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmp6stssx5j model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
2020-04-30 10:23:30.194106 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:23:30.194106%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.1
2020-04-30 10:23:30.194106%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4734488576, percent=62.8, used=8003223552, free=4734488576)
2020-04-30 10:23:30.194106%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:23:30.194106%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:23:30.201089%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2664 2664
 2- default platform is not  Null 
[2020-04-30 10:23:35,013] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:23:35] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
[2020-04-30 10:23:35,019] ERROR in GenericChatbotController: keep alive chatting Response:  {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}, Status_code: 400
['admin@admin.com', 'walaa.mahfoud@gmail.com']
3
0
Content-Type: multipart/mixed; boundary="===============6302185750247533330=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============6302185750247533330==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 39.5 percent

- RAM Usage : 63.4 percent

- Count Of Training Request During Last 12 Hours: 0

- Count Of Conversations During Last 12 Hours: 3
--===============6302185750247533330==--

Email sent!
[2020-04-30 10:24:03,401] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:24:03,674] INFO in spacy_utils: Trying to load spacy model with name 'en'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43   1126.6 MiB   1126.6 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45   1126.6 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31   1126.6 MiB   1126.6 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36   1126.6 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
61/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47   1130.2 MiB   1130.2 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56   1130.2 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57   1130.2 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58   1130.2 MiB      0.0 MiB           print(self.gazetteer_path )
    59   1130.2 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60   1130.2 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64   1130.2 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65   1130.2 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66   1130.2 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179   1130.4 MiB   1130.4 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183   1130.4 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184   1130.4 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185   1130.4 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187   1130.4 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200430-102433.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200430-102433.tar.gz
training Status Code 200  ---------------------  61 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192   1126.5 MiB   1126.5 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204   1126.5 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207   1126.5 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208   1126.5 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209   1126.5 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210   1126.5 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x000001BC62393088>
[2020-04-30 10:25:02,698] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:25:02] "[37mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:25.060191 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 10:28:25.060191%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.5
2020-04-30 10:28:25.060191%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3945054208, percent=69.0, used=8792657920, free=3945054208)
2020-04-30 10:28:25.061151%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.061151%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:25,062] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:25] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:25.066136 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 10:28:25.066136%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:28:25.067144%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3945021440, percent=69.0, used=8792690688, free=3945021440)
2020-04-30 10:28:25.067144%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.067144%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:25,068] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:25] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:25.084087 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:28:25.084087%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.8
2020-04-30 10:28:25.085084%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3945021440, percent=69.0, used=8792690688, free=3945021440)
2020-04-30 10:28:25.085084%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:25,085] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:25] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:25.315336 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 10:28:25.315336%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.9
2020-04-30 10:28:25.316327%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3945037824, percent=69.0, used=8792674304, free=3945037824)
2020-04-30 10:28:25.316327%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.316327%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.324327%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:25,335] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:25] "[37mGET /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:25.372179 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 10:28:25.372179%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:88.2
2020-04-30 10:28:25.372179%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3945017344, percent=69.0, used=8792694784, free=3945017344)
2020-04-30 10:28:25.373175%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.373175%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.377163%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.385143 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:28:25.385143%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:28:25.385143%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3945013248, percent=69.0, used=8792698880, free=3945013248)
2020-04-30 10:28:25.385143%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:25.393122%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:25,401] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:25] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:28:25,403] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:25] "[37mGET /entitiesReport?page_num=1&item_per_page=15&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:40.130424 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:28:40.130424%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.3
2020-04-30 10:28:40.130424%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4037214208, percent=68.3, used=8700497920, free=4037214208)
2020-04-30 10:28:40.130424%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.130424%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:40,131] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:40] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:40.134411 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:28:40.134411%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:28:40.135416%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4037197824, percent=68.3, used=8700514304, free=4037197824)
2020-04-30 10:28:40.135416%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.135416%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:40,137] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:40] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:40.148407 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:28:40.148407%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:28:40.148407%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4037189632, percent=68.3, used=8700522496, free=4037189632)
2020-04-30 10:28:40.148407%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:40,149] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:40] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:40.381055 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:28:40.381055%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.0
2020-04-30 10:28:40.381055%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4037312512, percent=68.3, used=8700399616, free=4037312512)
2020-04-30 10:28:40.381055%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.381055%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.389001%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:40,419] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:40] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:40.439864 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:28:40.439864%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.1
2020-04-30 10:28:40.439864%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4037550080, percent=68.3, used=8700162048, free=4037550080)
2020-04-30 10:28:40.439864%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.439864%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.445848%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.449839 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:28:40.449839%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:28:40.449839%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4037550080, percent=68.3, used=8700162048, free=4037550080)
2020-04-30 10:28:40.449839%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:40.460808%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:40,465] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:40] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:28:40,479] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:40] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:28:44.279914 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:28:44.279914%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:10.3
2020-04-30 10:28:44.279914%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4032249856, percent=68.3, used=8705462272, free=4032249856)
2020-04-30 10:28:44.279914%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:44,281] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:44] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:28:44.592763 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:28:44.592763%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:10.0
2020-04-30 10:28:44.592763%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4032749568, percent=68.3, used=8704962560, free=4032749568)
2020-04-30 10:28:44.592763%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:44.593769%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:44.600749%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2665 2665
 2- default platform is not  Null 
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.2 MiB   1130.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.2 MiB      0.0 MiB           text = message.text
    88   1130.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.2 MiB      0.0 MiB               entities = old_entities
   114   1130.2 MiB      0.0 MiB               words = text.split(' ')
   115   1130.2 MiB      0.0 MiB               for w in words:
   116   1130.2 MiB      0.0 MiB                   word =w
   117   1130.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1130.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.5 MiB   1130.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.5 MiB      0.0 MiB           text = message.text
    88   1130.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.5 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.5 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.5 MiB      0.0 MiB               entities = old_entities
   114   1130.5 MiB      0.0 MiB               words = text.split(' ')
   115   1130.5 MiB      0.0 MiB               for w in words:
   116   1130.5 MiB      0.0 MiB                   word =w
   117   1130.5 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.5 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.5 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1130.5 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.5 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 5711 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231731.0656228, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9356744286692481', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231731.0656228, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9356744286692481', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:28:51,287] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:51] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:28:55.167203 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:28:55.167203%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.3
2020-04-30 10:28:55.167203%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3834044416, percent=69.9, used=8903667712, free=3834044416)
2020-04-30 10:28:55.168200%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:28:55,169] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:55] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:28:55.420527 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:28:55.420527%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:28:55.420527%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3833872384, percent=69.9, used=8903839744, free=3833872384)
2020-04-30 10:28:55.420527%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:55.420527%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:28:55.424513%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 7383 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231739.6502614, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_date'}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231739.6502614, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_date'}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:28:59,717] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:28:59] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:16.133762 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:29:16.133762%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.9
2020-04-30 10:29:16.133762%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3943059456, percent=69.0, used=8794652672, free=3943059456)
2020-04-30 10:29:16.134752%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:29:16,136] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:16] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:16.385430 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:29:16.385430%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:29:16.385430%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3943067648, percent=69.0, used=8794644480, free=3943067648)
2020-04-30 10:29:16.385430%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:16.385430%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:16.393413%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  11/2/2020
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
11/2/2020
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1130.4 MiB   1130.4 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1130.4 MiB      0.0 MiB           entity = {"value": value,
    75   1130.4 MiB      0.0 MiB                     "start": start,
    76   1130.4 MiB      0.0 MiB                     "end": end,
    77   1130.4 MiB      0.0 MiB                     "confidence": 1.0,
    78   1130.4 MiB      0.0 MiB                     "entity": name,
    79   1130.4 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1130.4 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.4 MiB   1130.4 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.4 MiB      0.0 MiB           text = message.text
    88   1130.4 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.4 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.4 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.4 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.4 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.4 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.4 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.4 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.4 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.4 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.4 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.4 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.4 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.4 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.4 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.4 MiB      0.0 MiB               entities = old_entities
   114   1130.4 MiB      0.0 MiB               words = text.split(' ')
   115   1130.4 MiB      0.0 MiB               for w in words:
   116   1130.4 MiB      0.0 MiB                   word =w
   117   1130.4 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.4 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.4 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.4 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.4 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.4 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1130.4 MiB      0.0 MiB                       start = text.find(w)
   128   1130.4 MiB      0.0 MiB                       end = start + len(w)
   129   1130.4 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.4 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.4 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.4 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.4 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.4 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.4 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.4 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  11/2/2020
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
11/2/2020
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1130.4 MiB   1130.4 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1130.4 MiB      0.0 MiB           entity = {"value": value,
    75   1130.4 MiB      0.0 MiB                     "start": start,
    76   1130.4 MiB      0.0 MiB                     "end": end,
    77   1130.4 MiB      0.0 MiB                     "confidence": 1.0,
    78   1130.4 MiB      0.0 MiB                     "entity": name,
    79   1130.4 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1130.4 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.4 MiB   1130.4 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.4 MiB      0.0 MiB           text = message.text
    88   1130.4 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.4 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.4 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.4 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.4 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.4 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.4 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.4 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.4 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.4 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.4 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.4 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.4 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.4 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.4 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.4 MiB      0.0 MiB               entities = old_entities
   114   1130.4 MiB      0.0 MiB               words = text.split(' ')
   115   1130.4 MiB      0.0 MiB               for w in words:
   116   1130.4 MiB      0.0 MiB                   word =w
   117   1130.4 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.4 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.4 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.4 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.4 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.4 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1130.4 MiB      0.0 MiB                       start = text.find(w)
   128   1130.4 MiB      0.0 MiB                       end = start + len(w)
   129   1130.4 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.4 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.4 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.4 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.4 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.4 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.4 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.4 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 11316 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231758.7156022, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Destination_city'}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231758.7156022, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Destination_city'}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'} ---------- {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}
updated_entities ---------------------------------------- [{'confidence': None, 'end': 9, 'start': 0, 'extractor': 'SpacyEntityExtractor', 'entity': 'System.cardinal', 'value': '11/2/2020'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-30 10:29:18,816] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:18] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:22.375735 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:29:22.375735%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:8.5
2020-04-30 10:29:22.375735%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3939090432, percent=69.1, used=8798621696, free=3939090432)
2020-04-30 10:29:22.375735%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:29:22,378] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:22] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:22.687140 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:29:22.687140%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.5
2020-04-30 10:29:22.688137%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3939094528, percent=69.1, used=8798617600, free=3939094528)
2020-04-30 10:29:22.688137%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:22.688137%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:22.696119%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  Paris
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
pari
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1130.5 MiB   1130.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1130.5 MiB      0.0 MiB           entity = {"value": value,
    75   1130.5 MiB      0.0 MiB                     "start": start,
    76   1130.5 MiB      0.0 MiB                     "end": end,
    77   1130.5 MiB      0.0 MiB                     "confidence": 1.0,
    78   1130.5 MiB      0.0 MiB                     "entity": name,
    79   1130.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1130.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.5 MiB   1130.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.5 MiB      0.0 MiB           text = message.text
    88   1130.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.5 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.5 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.5 MiB      0.0 MiB               entities = old_entities
   114   1130.5 MiB      0.0 MiB               words = text.split(' ')
   115   1130.5 MiB      0.0 MiB               for w in words:
   116   1130.5 MiB      0.0 MiB                   word =w
   117   1130.5 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.5 MiB      0.0 MiB                   if (word_singular is False):
   120                                                 word_singular = word_lower
   121                                             else:
   122   1130.5 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124   1130.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1130.5 MiB      0.0 MiB                       start = text.find(w)
   128   1130.5 MiB      0.0 MiB                       end = start + len(w)
   129   1130.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.5 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  Paris
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
pari
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1130.5 MiB   1130.5 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1130.5 MiB      0.0 MiB           entity = {"value": value,
    75   1130.5 MiB      0.0 MiB                     "start": start,
    76   1130.5 MiB      0.0 MiB                     "end": end,
    77   1130.5 MiB      0.0 MiB                     "confidence": 1.0,
    78   1130.5 MiB      0.0 MiB                     "entity": name,
    79   1130.5 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1130.5 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.5 MiB   1130.5 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.5 MiB      0.0 MiB           text = message.text
    88   1130.5 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.5 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.5 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.5 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.5 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.5 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.5 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.5 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.5 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.5 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.5 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.5 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.5 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.5 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.5 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.5 MiB      0.0 MiB               entities = old_entities
   114   1130.5 MiB      0.0 MiB               words = text.split(' ')
   115   1130.5 MiB      0.0 MiB               for w in words:
   116   1130.5 MiB      0.0 MiB                   word =w
   117   1130.5 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.5 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.5 MiB      0.0 MiB                   if (word_singular is False):
   120                                                 word_singular = word_lower
   121                                             else:
   122   1130.5 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124   1130.5 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.5 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1130.5 MiB      0.0 MiB                       start = text.find(w)
   128   1130.5 MiB      0.0 MiB                       end = start + len(w)
   129   1130.5 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.5 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.5 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.5 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.5 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.5 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.5 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.5 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.5 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 14262 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231765.1022148, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_city'}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231765.1022148, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_city'}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'} ---------- {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}
updated_entities ---------------------------------------- [{'confidence': None, 'end': 5, 'start': 0, 'extractor': 'SpacyEntityExtractor', 'entity': 'System.gpe', 'value': 'Paris'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-30 10:29:25,230] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:25] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:28.863104 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:29:28.863104%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:9.3
2020-04-30 10:29:28.863104%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3939516416, percent=69.1, used=8798195712, free=3939516416)
2020-04-30 10:29:28.863104%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:29:28,865] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:28] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:29.171120 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:29:29.171120%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.0
2020-04-30 10:29:29.171120%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3939524608, percent=69.1, used=8798187520, free=3939524608)
2020-04-30 10:29:29.171120%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:29.171120%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:29.179104%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  Syria
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
syria
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1130.6 MiB   1130.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1130.6 MiB      0.0 MiB           entity = {"value": value,
    75   1130.6 MiB      0.0 MiB                     "start": start,
    76   1130.6 MiB      0.0 MiB                     "end": end,
    77   1130.6 MiB      0.0 MiB                     "confidence": 1.0,
    78   1130.6 MiB      0.0 MiB                     "entity": name,
    79   1130.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1130.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.6 MiB   1130.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.6 MiB      0.0 MiB           text = message.text
    88   1130.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.6 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.6 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.6 MiB      0.0 MiB               entities = old_entities
   114   1130.6 MiB      0.0 MiB               words = text.split(' ')
   115   1130.6 MiB      0.0 MiB               for w in words:
   116   1130.6 MiB      0.0 MiB                   word =w
   117   1130.6 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.6 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1130.6 MiB      0.0 MiB                       start = text.find(w)
   128   1130.6 MiB      0.0 MiB                       end = start + len(w)
   129   1130.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.6 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  Syria
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
syria
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1130.6 MiB   1130.6 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1130.6 MiB      0.0 MiB           entity = {"value": value,
    75   1130.6 MiB      0.0 MiB                     "start": start,
    76   1130.6 MiB      0.0 MiB                     "end": end,
    77   1130.6 MiB      0.0 MiB                     "confidence": 1.0,
    78   1130.6 MiB      0.0 MiB                     "entity": name,
    79   1130.6 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1130.6 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.6 MiB   1130.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.6 MiB      0.0 MiB           text = message.text
    88   1130.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.6 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.6 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.6 MiB      0.0 MiB               entities = old_entities
   114   1130.6 MiB      0.0 MiB               words = text.split(' ')
   115   1130.6 MiB      0.0 MiB               for w in words:
   116   1130.6 MiB      0.0 MiB                   word =w
   117   1130.6 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.6 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1130.6 MiB      0.0 MiB                       start = text.find(w)
   128   1130.6 MiB      0.0 MiB                       end = start + len(w)
   129   1130.6 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.6 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 17320 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231773.4569867, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231773.4569867, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
CardSettttttttttttttttttttttttttt http://116.202.231.60:5001/testcardset
CardSettttttttttttttttttttttttttt http://116.202.231.60:5001/testcardse
CardSettttttttttttttttttttttttttt <Response [200]>
-------------------- response [{'buttons': [{'payload': 'payload1', 'title': 'title1'}], 'image': 'https://i.imgur.com/nGF1K8f.jpg', 'text': 'card1'}, {'buttons': [{'payload': 'payload2', 'title': 'title2'}, {'payload': 'payload3', 'title': 'title3'}], 'image': 'https://i.imgur.com/nGF1K8f.jpg    ', 'text': 'card2'}]
++++++++++++++++++++++++++++++++++++++++
[][]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
[][]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
---------------------------------------------------
getFormatedEntity -------------------------  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'} ---------- {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}
updated_entities ---------------------------------------- [{'confidence': None, 'end': 5, 'start': 0, 'extractor': 'SpacyEntityExtractor', 'entity': 'System.gpe', 'value': 'Syria'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-30 10:29:34,098] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:34] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:44.631095 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:29:44.631095%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:57.8
2020-04-30 10:29:44.631095%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3918200832, percent=69.2, used=8819511296, free=3918200832)
2020-04-30 10:29:44.631095%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:29:44,632] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:44] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:29:44.881424 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:29:44.881424%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 10:29:44.881424%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3916898304, percent=69.2, used=8820813824, free=3916898304)
2020-04-30 10:29:44.881424%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:44.881424%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:29:44.884417%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 19148 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}, {'event': 'user', 'input_channel': None, 'message_id': '3695825f580f4aada404dd288257f13f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588231784.907354}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231786.955877}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231786.955877, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': None, 'timestamp': 1588231789.017391}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231789.017391, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231791.0519218}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': '/Flight_number_2', 'title': '/Flight_number_2'}, {'payload': 'back', 'title': '/restart'}, {'payload': 'book', 'title': 'book'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588231791.0519218}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588231791.0519218, 'value': 'yes'}, {'confidence': 0.9589923620223999, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231791.0589037}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231791.0589037, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}, {'event': 'user', 'input_channel': None, 'message_id': '3695825f580f4aada404dd288257f13f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588231784.907354}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231786.955877}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231786.955877, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': None, 'timestamp': 1588231789.017391}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231789.017391, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231791.0519218}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': '/Flight_number_2', 'title': '/Flight_number_2'}, {'payload': 'back', 'title': '/restart'}, {'payload': 'book', 'title': 'book'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588231791.0519218}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588231791.0519218, 'value': 'yes'}, {'confidence': 0.9589923620223999, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231791.0589037}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231791.0589037, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0', 'Flight_number_1$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight_number_1 +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight_number_1
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:29:51,133] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:29:51] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:30:09.220170 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:30:09.220170%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:60.9
2020-04-30 10:30:09.220170%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3808124928, percent=70.1, used=8929587200, free=3808124928)
2020-04-30 10:30:09.220170%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:09,221] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:09] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:30:09.473490 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:30:09.473490%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.2
2020-04-30 10:30:09.473490%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3806732288, percent=70.1, used=8930979840, free=3806732288)
2020-04-30 10:30:09.473490%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:09.473490%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:09.477486%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.6 MiB   1130.6 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.6 MiB      0.0 MiB           text = message.text
    88   1130.6 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.6 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.6 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.6 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.6 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.6 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.6 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.6 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.6 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.6 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.6 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.6 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.6 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.6 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.6 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.6 MiB      0.0 MiB               entities = old_entities
   114   1130.6 MiB      0.0 MiB               words = text.split(' ')
   115   1130.6 MiB      0.0 MiB               for w in words:
   116   1130.6 MiB      0.0 MiB                   word =w
   117   1130.6 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.6 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.6 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.6 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.6 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.6 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1130.6 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.6 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.6 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.6 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.6 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.6 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.6 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.6 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.6 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1130.4 MiB   1130.4 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1130.4 MiB      0.0 MiB           text = message.text
    88   1130.4 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1130.4 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1130.4 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1130.4 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1130.4 MiB      0.0 MiB                   low_key = key.lower()
    96   1130.4 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1130.4 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1130.4 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1130.4 MiB      0.0 MiB                   if( singular_key is False):
   103   1130.4 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1130.4 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1130.4 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1130.4 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1130.4 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1130.4 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1130.4 MiB      0.0 MiB               entities = old_entities
   114   1130.4 MiB      0.0 MiB               words = text.split(' ')
   115   1130.4 MiB      0.0 MiB               for w in words:
   116   1130.4 MiB      0.0 MiB                   word =w
   117   1130.4 MiB      0.0 MiB                   word_lower =word.lower()
   118   1130.4 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1130.4 MiB      0.0 MiB                   if (word_singular is False):
   120   1130.4 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1130.4 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1130.4 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1130.4 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1130.4 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1130.4 MiB      0.0 MiB                   low_key = key.lower()
   139   1130.4 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1130.4 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1130.4 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1130.4 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1130.4 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1130.4 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 23604 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}, {'event': 'user', 'input_channel': None, 'message_id': '3695825f580f4aada404dd288257f13f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588231784.907354}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231786.955877}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231786.955877, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': None, 'timestamp': 1588231789.017391}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231789.017391, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231791.0519218}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': '/Flight_number_2', 'title': '/Flight_number_2'}, {'payload': 'back', 'title': '/restart'}, {'payload': 'book', 'title': 'book'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588231791.0519218}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588231791.0519218, 'value': 'yes'}, {'confidence': 0.9589923620223999, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231791.0589037}, {'event': 'user', 'input_channel': None, 'message_id': '244c73f76b97468ca0a778a77e8cbf1a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231809.5672386}, {'confidence': 0.945233941078186, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231811.606518}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231811.606518, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 0.9797893166542053, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': None, 'timestamp': 1588231813.6700006}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231813.6700006, 'value': None}, {'confidence': 0.9635184407234192, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231815.700573}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231815.700573}, {'confidence': 0.9612420797348022, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.7055557}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231815.7055557, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9356744286692481', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}, {'event': 'user', 'input_channel': None, 'message_id': '3695825f580f4aada404dd288257f13f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588231784.907354}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231786.955877}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231786.955877, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': None, 'timestamp': 1588231789.017391}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231789.017391, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231791.0519218}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': '/Flight_number_2', 'title': '/Flight_number_2'}, {'payload': 'back', 'title': '/restart'}, {'payload': 'book', 'title': 'book'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588231791.0519218}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588231791.0519218, 'value': 'yes'}, {'confidence': 0.9589923620223999, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231791.0589037}, {'event': 'user', 'input_channel': None, 'message_id': '244c73f76b97468ca0a778a77e8cbf1a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231809.5672386}, {'confidence': 0.945233941078186, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231811.606518}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231811.606518, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 0.9797893166542053, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': None, 'timestamp': 1588231813.6700006}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231813.6700006, 'value': None}, {'confidence': 0.9635184407234192, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231815.700573}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231815.700573}, {'confidence': 0.9612420797348022, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.7055557}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588231815.7055557, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9356744286692481', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9356744286692481']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:30:15,814] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:15] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:30:36.110499 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 10:30:36.110499%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.3
2020-04-30 10:30:36.110499%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3827666944, percent=70.0, used=8910045184, free=3827666944)
2020-04-30 10:30:36.110499%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:36,113] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:36] "[37mOPTIONS /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:30:36.117480 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 10:30:36.117480%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:30:36.118477%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3827642368, percent=70.0, used=8910069760, free=3827642368)
2020-04-30 10:30:36.118477%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:36,119] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:36] "[37mOPTIONS /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:30:36.132440 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:30:36.132440%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 10:30:36.132440%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3827773440, percent=69.9, used=8909938688, free=3827773440)
2020-04-30 10:30:36.132440%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:36,135] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:36] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:30:36.362564 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 10:30:36.362564%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:16.1
2020-04-30 10:30:36.362564%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3827773440, percent=69.9, used=8909938688, free=3827773440)
2020-04-30 10:30:36.362564%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:36.368582%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:36,381] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:36] "[37mGET /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:30:36.422403 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 10:30:36.422403%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:52.9
2020-04-30 10:30:36.423399%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3827777536, percent=69.9, used=8909934592, free=3827777536)
2020-04-30 10:30:36.423399%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:36.432375 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:30:36.432375%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:30:36.432375%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3827777536, percent=69.9, used=8909934592, free=3827777536)
2020-04-30 10:30:36.432375%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:36.435370%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:36.437374%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:36,448] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:36] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:30:36,448] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:36] "[37mGET /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:30:39.356909 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:30:39.356909%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.3
2020-04-30 10:30:39.357906%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3843608576, percent=69.8, used=8894103552, free=3843608576)
2020-04-30 10:30:39.357906%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:39,358] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:39] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:30:39.665294 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 10:30:39.665294%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.2
2020-04-30 10:30:39.665294%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3844333568, percent=69.8, used=8893378560, free=3844333568)
2020-04-30 10:30:39.665294%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:39,666] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:39] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:30:39.670251 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:30:39.670251%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:30:39.670251%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3844374528, percent=69.8, used=8893337600, free=3844374528)
2020-04-30 10:30:39.671247%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:39.676233%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:39,682] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:39] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:30:39.690197 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:30:39.690197%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:30:39.690197%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3844386816, percent=69.8, used=8893325312, free=3844386816)
2020-04-30 10:30:39.690197%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:39,692] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:39] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:30:39.919200 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 10:30:39.919200%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.3
2020-04-30 10:30:39.921198%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3844169728, percent=69.8, used=8893542400, free=3844169728)
2020-04-30 10:30:39.921198%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:39.930176%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:39,944] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:39] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:30:39.975052 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:30:39.975052%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-30 10:30:39.975052%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3844190208, percent=69.8, used=8893521920, free=3844190208)
2020-04-30 10:30:39.975052%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:30:39.980041%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:30:39,986] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:30:39] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:31:02.007560 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:31:02.007560%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.7
2020-04-30 10:31:02.007560%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3836620800, percent=69.9, used=8901091328, free=3836620800)
2020-04-30 10:31:02.007560%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:02,009] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:02] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:31:02.260882 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [PUT]
2020-04-30 10:31:02.260882%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:02.260882%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3836682240, percent=69.9, used=8901029888, free=3836682240)
2020-04-30 10:31:02.260882%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:02.265869%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:04.280490 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/api/agent/61 [PUT]
2020-04-30 10:31:04.280490%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.7
2020-04-30 10:31:04.280490%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3825172480, percent=70.0, used=8912539648, free=3825172480)
2020-04-30 10:31:04.281479%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:04,340] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:04] "[37mPUT /api/agent/61 HTTP/1.1[0m" 200 -
11111111111111 <Response [200]>
2020-04-30 10:31:06.422755 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:31:06.422755%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.4
2020-04-30 10:31:06.422755%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3851730944, percent=69.8, used=8885981184, free=3851730944)
2020-04-30 10:31:06.422755%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:06.422755%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:06.425747%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:08.435391 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:31:08.435391%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.3
2020-04-30 10:31:08.436370%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3825815552, percent=70.0, used=8911896576, free=3825815552)
2020-04-30 10:31:08.436370%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:08.436370%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:08,481] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:08] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:31:10.496860 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:10.496860%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.1
2020-04-30 10:31:10.496860%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3817820160, percent=70.0, used=8919891968, free=3817820160)
2020-04-30 10:31:10.496860%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:10,517] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:10] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:12.538401 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:12.538401%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:63.7
2020-04-30 10:31:12.538401%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3822194688, percent=70.0, used=8915517440, free=3822194688)
2020-04-30 10:31:12.538401%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:12,564] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:12] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:14.579941 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:14.579941%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.3
2020-04-30 10:31:14.579941%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3832340480, percent=69.9, used=8905371648, free=3832340480)
2020-04-30 10:31:14.579941%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:14,598] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:14] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:16.616494 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:16.616494%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:70.5
2020-04-30 10:31:16.616494%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3844091904, percent=69.8, used=8893620224, free=3844091904)
2020-04-30 10:31:16.616494%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:16,644] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:16] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:18.657037 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:18.657037%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:46.4
2020-04-30 10:31:18.657037%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3826335744, percent=70.0, used=8911376384, free=3826335744)
2020-04-30 10:31:18.657037%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:18,683] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:18] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:20.709550 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:20.709550%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:69.4
2020-04-30 10:31:20.709550%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3847401472, percent=69.8, used=8890310656, free=3847401472)
2020-04-30 10:31:20.709550%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:20,729] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:20] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:22.759139 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:22.759139%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.3
2020-04-30 10:31:22.759139%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3830378496, percent=69.9, used=8907333632, free=3830378496)
2020-04-30 10:31:22.759139%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:22,800] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:22] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:24.812909 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:24.812909%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.3
2020-04-30 10:31:24.812909%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3830386688, percent=69.9, used=8907325440, free=3830386688)
2020-04-30 10:31:24.812909%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:24,840] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:24] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:26.854984 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:26.854984%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:48.0
2020-04-30 10:31:26.854984%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3652984832, percent=71.3, used=9084727296, free=3652984832)
2020-04-30 10:31:26.854984%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:26,885] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:26] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:28.899593 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:28.899593%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.2
2020-04-30 10:31:28.899593%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3662991360, percent=71.2, used=9074720768, free=3662991360)
2020-04-30 10:31:28.899593%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:28,925] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:28] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:30.943128 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:30.943128%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.7
2020-04-30 10:31:30.944126%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3678146560, percent=71.1, used=9059565568, free=3678146560)
2020-04-30 10:31:30.944126%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:30,970] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:30] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:32.994970 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:32.994970%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:72.4
2020-04-30 10:31:32.994970%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3685294080, percent=71.1, used=9052418048, free=3685294080)
2020-04-30 10:31:32.994970%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:33,015] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:33] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:35.026538 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:35.026538%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.2
2020-04-30 10:31:35.026538%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3699568640, percent=71.0, used=9038143488, free=3699568640)
2020-04-30 10:31:35.026538%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:35,051] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:35] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:37.069580 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:37.069580%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:54.8
2020-04-30 10:31:37.069580%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3685937152, percent=71.1, used=9051774976, free=3685937152)
2020-04-30 10:31:37.070577%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:37,093] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:37] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:39.111053 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:39.111053%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.8
2020-04-30 10:31:39.111053%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3774971904, percent=70.4, used=8962740224, free=3774971904)
2020-04-30 10:31:39.111053%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:39,162] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:39] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:31:41.172495 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:31:41.172495%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.7
2020-04-30 10:31:41.172495%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3775270912, percent=70.4, used=8962441216, free=3775270912)
2020-04-30 10:31:41.173492%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,199] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 10:31:41,208] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mPOST /addintent HTTP/1.1[0m" 200 -
[2020-04-30 10:31:41,212] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mPUT /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.527547 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 10:31:41.527547%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.528541%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3746664448, percent=70.6, used=8991047680, free=3746664448)
2020-04-30 10:31:41.528541%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,529] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.580404 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 10:31:41.580404%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.580404%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3743494144, percent=70.6, used=8994217984, free=3743494144)
2020-04-30 10:31:41.580404%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,582] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mOPTIONS /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.587384 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 10:31:41.587384%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.587384%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3743256576, percent=70.6, used=8994455552, free=3743256576)
2020-04-30 10:31:41.587384%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,589] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mOPTIONS /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.607333 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:31:41.607333%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.607333%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3743154176, percent=70.6, used=8994557952, free=3743154176)
2020-04-30 10:31:41.607333%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,609] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.778873 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 10:31:41.778873%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.779869%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3745255424, percent=70.6, used=8992456704, free=3745255424)
2020-04-30 10:31:41.779869%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:41.783860%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,792] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.837717 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 10:31:41.837717%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.837717%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3740823552, percent=70.6, used=8996888576, free=3740823552)
2020-04-30 10:31:41.837717%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:41.843701%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,850] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mGET /agent?page_num=1&item_per_page=15&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 10:31:41.889576 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 10:31:41.890578%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.890578%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3738996736, percent=70.6, used=8998715392, free=3738996736)
2020-04-30 10:31:41.890578%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:41.896558 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:31:41.896558%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:31:41.896558%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3738718208, percent=70.6, used=8998993920, free=3738718208)
2020-04-30 10:31:41.896558%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:41.900547%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:31:41.907530%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:31:41,918] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mGET /agent?page_num=1&item_per_page=1000000&userId=1 HTTP/1.1[0m" 200 -
[2020-04-30 10:31:41,919] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:31:41] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:32:04.589663 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 10:32:04.589663%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.7
2020-04-30 10:32:04.589663%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3750428672, percent=70.6, used=8987283456, free=3750428672)
2020-04-30 10:32:04.589663%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:32:04.589663%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:32:04,590] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:32:04] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:32:04.840993 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:32:04.840993%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.6
2020-04-30 10:32:04.840993%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3750465536, percent=70.6, used=8987246592, free=3750465536)
2020-04-30 10:32:04.840993%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:32:04.840993%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:32:04.843985%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmptjmaet0i\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmptjmaet0i\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmptjmaet0i model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 10:32:36,489] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:32:36,853] INFO in spacy_utils: Trying to load spacy model with name 'en'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43   1140.1 MiB   1140.1 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45   1140.1 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31   1140.1 MiB   1140.1 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36   1140.1 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
61/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47   1142.5 MiB   1142.5 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56   1142.5 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57   1142.5 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58   1142.5 MiB      0.0 MiB           print(self.gazetteer_path )
    59   1142.5 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60   1142.5 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64   1142.5 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65   1142.5 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66   1142.5 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179   1142.8 MiB   1142.8 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183   1142.8 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184   1142.8 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185   1142.8 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187   1142.8 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200430-103306.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200430-103306.tar.gz
training Status Code 200  ---------------------  61 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192   1136.9 MiB   1136.9 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204   1136.9 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207   1136.9 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208   1136.9 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209   1136.9 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210   1136.9 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x000001BC68DDF788>
[2020-04-30 10:33:33,411] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:33:33] "[37mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:36:21.796187 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:36:21.796187%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.7
2020-04-30 10:36:21.796187%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4139311104, percent=67.5, used=8598401024, free=4139311104)
2020-04-30 10:36:21.797186%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:36:21,799] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:36:21] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:36:22.048041 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:36:22.048041%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.1
2020-04-30 10:36:22.048041%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4139356160, percent=67.5, used=8598355968, free=4139356160)
2020-04-30 10:36:22.048041%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:36:22.048041%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:36:22.056026%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1140.0 MiB   1140.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1140.0 MiB      0.0 MiB           text = message.text
    88   1140.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1140.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1140.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1140.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1140.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1140.0 MiB      0.0 MiB                   low_key = key.lower()
    96   1140.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1140.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1140.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1140.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1140.0 MiB      0.0 MiB                   if( singular_key is False):
   103   1140.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1140.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1140.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1140.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1140.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1140.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1140.0 MiB      0.0 MiB               entities = old_entities
   114   1140.0 MiB      0.0 MiB               words = text.split(' ')
   115   1140.0 MiB      0.0 MiB               for w in words:
   116   1140.0 MiB      0.0 MiB                   word =w
   117   1140.0 MiB      0.0 MiB                   word_lower =word.lower()
   118   1140.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1140.0 MiB      0.0 MiB                   if (word_singular is False):
   120   1140.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1140.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1140.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1140.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1140.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1140.0 MiB      0.0 MiB                   low_key = key.lower()
   139   1140.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1140.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1140.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1140.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1140.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1140.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1140.0 MiB   1140.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1140.0 MiB      0.0 MiB           text = message.text
    88   1140.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1140.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1140.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1140.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1140.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1140.0 MiB      0.0 MiB                   low_key = key.lower()
    96   1140.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1140.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1140.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1140.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1140.0 MiB      0.0 MiB                   if( singular_key is False):
   103   1140.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1140.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1140.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1140.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1140.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1140.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1140.0 MiB      0.0 MiB               entities = old_entities
   114   1140.0 MiB      0.0 MiB               words = text.split(' ')
   115   1140.0 MiB      0.0 MiB               for w in words:
   116   1140.0 MiB      0.0 MiB                   word =w
   117   1140.0 MiB      0.0 MiB                   word_lower =word.lower()
   118   1140.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1140.0 MiB      0.0 MiB                   if (word_singular is False):
   120   1140.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1140.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1140.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1140.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1140.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1140.0 MiB      0.0 MiB                   low_key = key.lower()
   139   1140.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1140.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1140.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1140.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1140.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1140.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 26445 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}, {'event': 'user', 'input_channel': None, 'message_id': '3695825f580f4aada404dd288257f13f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588231784.907354}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231786.955877}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231786.955877, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': None, 'timestamp': 1588231789.017391}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231789.017391, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231791.0519218}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': '/Flight_number_2', 'title': '/Flight_number_2'}, {'payload': 'back', 'title': '/restart'}, {'payload': 'book', 'title': 'book'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588231791.0519218}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588231791.0519218, 'value': 'yes'}, {'confidence': 0.9589923620223999, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231791.0589037}, {'event': 'user', 'input_channel': None, 'message_id': '244c73f76b97468ca0a778a77e8cbf1a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231809.5672386}, {'confidence': 0.945233941078186, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231811.606518}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231811.606518, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 0.9797893166542053, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': None, 'timestamp': 1588231813.6700006}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231813.6700006, 'value': None}, {'confidence': 0.9635184407234192, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231815.700573}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231815.700573}, {'confidence': 0.9612420797348022, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.7055557}, {'event': 'user', 'input_channel': None, 'message_id': 'a456dfd381c74bbc8e48fa234aa5fc21', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232182.152762}, {'confidence': 0.9916678071022034, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232184.2000644}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232184.2000644, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 0.9768322110176086, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232186.2937877}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232186.2937877}, {'event': 'form', 'name': None, 'timestamp': 1588232186.2937877}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232186.2937877, 'value': None}, {'confidence': 0.9871312379837036, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232188.358897}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Greetings! How can I assist? ', 'timestamp': 1588232188.358897}, {'confidence': 0.967536211013794, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232188.3718617}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232188.3718617, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.936114452414295', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'confidence': None, 'event': 'action', 'name': 'action_session_start', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'session_started', 'timestamp': 1588231724.6555953}, {'confidence': None, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588231724.6555953}, {'event': 'user', 'input_channel': None, 'message_id': '6683e34fbc7e4d72b7c102a5f633a005', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231724.7174304}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231726.9668443}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231726.9668443, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231729.0213234}, {'event': 'form', 'name': None, 'timestamp': 1588231729.0213234}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231729.0213234, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231731.0596454}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231731.0596454}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231731.0656228}, {'event': 'user', 'input_channel': None, 'message_id': '52219c3d20834816b430aac21aa01e9e', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588231735.4564307}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231737.5128584}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231737.5128584, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231739.6452725}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588231739.6452725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231739.6452725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231739.6452725, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231739.6502614}, {'event': 'user', 'input_channel': None, 'message_id': '97bd09659f634b79a7d7f304ba7d1c16', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5348029221846048, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5348029221846048, 'name': 'Email_us'}, {'confidence': 0.12513945410302743, 'name': 'Flight_number_1_sub'}, {'confidence': 0.10452354205138188, 'name': 'Flight booking'}, {'confidence': 0.06956220438394872, 'name': 'Flight_number_2'}, {'confidence': 0.06606686545353523, 'name': 'Flight_number_1'}, {'confidence': 0.061356578646605174, 'name': 'Book'}, {'confidence': 0.03854843317689644, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588231756.485177}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231756.485177, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7106142}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588231758.7106142}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588231758.7106142, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231758.7106142, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231758.7156022}, {'event': 'user', 'input_channel': None, 'message_id': '50c98bbc943e4d6092e2b93829c536d1', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6353005345263446, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6353005345263446, 'name': 'Flight booking'}, {'confidence': 0.12902228524945678, 'name': 'Book'}, {'confidence': 0.05791534824781555, 'name': 'Flight_number_2'}, {'confidence': 0.05760110983314539, 'name': 'Flight_number_1_sub'}, {'confidence': 0.05687100404310564, 'name': 'Flight_number_1'}, {'confidence': 0.0332748859704407, 'name': 'Default welcome intent'}, {'confidence': 0.030014832129691003, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588231762.787453}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231762.787453, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.094079}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588231765.094079}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588231765.094079, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231765.094079, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231765.1022148}, {'event': 'user', 'input_channel': None, 'message_id': '3f3125002085496fab42d9ff515db4af', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5450341680177389, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5450341680177389, 'name': 'Flight booking'}, {'confidence': 0.10553151267710262, 'name': 'Flight_number_1_sub'}, {'confidence': 0.08977738521766623, 'name': 'Email_us'}, {'confidence': 0.07717646541084758, 'name': 'Flight_number_2'}, {'confidence': 0.07027501928743021, 'name': 'Flight_number_1'}, {'confidence': 0.05648252792693779, 'name': 'Book'}, {'confidence': 0.055722921462276725, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588231769.2655845}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231769.2655845, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588231771.4252524, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588231771.4252524}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231771.4252524, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588231773.448999}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588231773.448999}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231773.4569867}, {'event': 'user', 'input_channel': None, 'message_id': '3695825f580f4aada404dd288257f13f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588231784.907354}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231786.955877}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231786.955877, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231789.017391}, {'event': 'form', 'name': None, 'timestamp': 1588231789.017391}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231789.017391, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588231791.0519218}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': '/Flight_number_2', 'title': '/Flight_number_2'}, {'payload': 'back', 'title': '/restart'}, {'payload': 'book', 'title': 'book'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588231791.0519218}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588231791.0519218, 'value': 'yes'}, {'confidence': 0.9589923620223999, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231791.0589037}, {'event': 'user', 'input_channel': None, 'message_id': '244c73f76b97468ca0a778a77e8cbf1a', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.935674428669248, 'name': 'Default welcome intent'}, {'confidence': 0.022121440327033174, 'name': 'Flight_number_1_sub'}, {'confidence': 0.0135643310237132, 'name': 'Email_us'}, {'confidence': 0.008732966730376136, 'name': 'Flight booking'}, {'confidence': 0.007463865376221741, 'name': 'Flight_number_1'}, {'confidence': 0.006320204863755442, 'name': 'Flight_number_2'}, {'confidence': 0.0061227630096518425, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588231809.5672386}, {'confidence': 0.945233941078186, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231811.606518}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588231811.606518, 'value': 'Default welcome intent$$0.9356744286692481'}, {'confidence': 0.9797893166542053, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588231813.6700006}, {'event': 'form', 'name': None, 'timestamp': 1588231813.6700006}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588231813.6700006, 'value': None}, {'confidence': 0.9635184407234192, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588231815.700573}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588231815.700573}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/email_us', 'title': '/email_us'}, {'payload': '/Flight booking', 'title': '/Flight booking'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588231815.700573}, {'confidence': 0.9612420797348022, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588231815.7055557}, {'event': 'user', 'input_channel': None, 'message_id': 'a456dfd381c74bbc8e48fa234aa5fc21', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232182.152762}, {'confidence': 0.9916678071022034, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232184.2000644}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232184.2000644, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 0.9768322110176086, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232186.2937877}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232186.2937877}, {'event': 'form', 'name': None, 'timestamp': 1588232186.2937877}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232186.2937877, 'value': None}, {'confidence': 0.9871312379837036, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232188.358897}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Greetings! How can I assist? ', 'timestamp': 1588232188.358897}, {'confidence': 0.967536211013794, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232188.3718617}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232188.3718617, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.936114452414295', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.9356744286692481', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9356744286692481', 'Default welcome intent$$0.936114452414295']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:36:28,472] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:36:28] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:37:04.754864 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:37:04.754864%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.1
2020-04-30 10:37:04.754864%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4162600960, percent=67.3, used=8575111168, free=4162600960)
2020-04-30 10:37:04.754864%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:04,756] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:04] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:37:05.005194 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:37:05.005194%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:95.3
2020-04-30 10:37:05.006190%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4162600960, percent=67.3, used=8575111168, free=4162600960)
2020-04-30 10:37:05.006190%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:05.006190%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:05.010181%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 945 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232227.0876265, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232227.0876265, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ restart +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply restart
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:37:07,143] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:07] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:37:10.049705 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:37:10.049705%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.0
2020-04-30 10:37:10.049705%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4141420544, percent=67.5, used=8596291584, free=4141420544)
2020-04-30 10:37:10.049705%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:10,051] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:10] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:37:10.356885 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:37:10.356885%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:42.5
2020-04-30 10:37:10.356885%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4141707264, percent=67.5, used=8596004864, free=4141707264)
2020-04-30 10:37:10.356885%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:10.356885%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:10.359877%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1140.2 MiB   1140.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1140.2 MiB      0.0 MiB           text = message.text
    88   1140.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1140.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1140.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1140.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1140.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1140.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1140.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1140.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1140.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1140.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1140.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1140.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1140.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1140.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1140.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1140.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1140.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1140.2 MiB      0.0 MiB               entities = old_entities
   114   1140.2 MiB      0.0 MiB               words = text.split(' ')
   115   1140.2 MiB      0.0 MiB               for w in words:
   116   1140.2 MiB      0.0 MiB                   word =w
   117   1140.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1140.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1140.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1140.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1140.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1140.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1140.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1140.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1140.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1140.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1140.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1140.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1140.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1140.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1140.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1140.2 MiB   1140.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1140.2 MiB      0.0 MiB           text = message.text
    88   1140.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1140.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1140.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1140.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1140.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1140.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1140.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1140.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1140.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1140.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1140.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1140.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1140.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1140.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1140.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1140.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1140.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1140.2 MiB      0.0 MiB               entities = old_entities
   114   1140.2 MiB      0.0 MiB               words = text.split(' ')
   115   1140.2 MiB      0.0 MiB               for w in words:
   116   1140.2 MiB      0.0 MiB                   word =w
   117   1140.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1140.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1140.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1140.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1140.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1140.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1140.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1140.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1140.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1140.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1140.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1140.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1140.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1140.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1140.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 4532 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232236.551319, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.936114452414295', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232236.551319, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.936114452414295', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:37:16,698] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:16] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:37:24.916948 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:37:24.916948%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-30 10:37:24.916948%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170924032, percent=67.3, used=8566788096, free=4170924032)
2020-04-30 10:37:24.916948%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:24.916948%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:24,918] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:24] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:24.923929 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:37:24.923929%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:24.923929%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170915840, percent=67.3, used=8566796288, free=4170915840)
2020-04-30 10:37:24.923929%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:24.923929%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:24,926] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:24] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:24.941885 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:37:24.941885%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:85.7
2020-04-30 10:37:24.941885%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170911744, percent=67.3, used=8566800384, free=4170911744)
2020-04-30 10:37:24.941885%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:24,942] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:24] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:25.167278 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:37:25.167278%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.8
2020-04-30 10:37:25.168282%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170838016, percent=67.3, used=8566874112, free=4170838016)
2020-04-30 10:37:25.168282%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:25.168282%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:25.173262%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:25,193] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:25] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:25.228115 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:37:25.228115%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-30 10:37:25.228115%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170768384, percent=67.3, used=8566943744, free=4170768384)
2020-04-30 10:37:25.228115%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:25.228115%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:25.235097 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:37:25.235097%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:25.235097%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4170698752, percent=67.3, used=8567013376, free=4170698752)
2020-04-30 10:37:25.235097%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:25.241080%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:25.245070%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:25,256] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:25] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:37:25,271] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:25] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.133347 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 10:37:28.133347%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.6
2020-04-30 10:37:28.133347%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4151685120, percent=67.4, used=8586027008, free=4151685120)
2020-04-30 10:37:28.133347%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.133347%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,135] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.440525 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 10:37:28.440525%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.6
2020-04-30 10:37:28.441522%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4148092928, percent=67.4, used=8589619200, free=4148092928)
2020-04-30 10:37:28.441522%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.441522%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.446508%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.450498 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 10:37:28.450498%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:28.451501%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4148244480, percent=67.4, used=8589467648, free=4148244480)
2020-04-30 10:37:28.451501%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.451501%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,455] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.457479 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 10:37:28.457479%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:28.457479%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4148248576, percent=67.4, used=8589463552, free=4148248576)
2020-04-30 10:37:28.457479%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.457479%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,459] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.465458 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/424 [OPTIONS]
2020-04-30 10:37:28.466456%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:28.466456%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4148301824, percent=67.4, used=8589410304, free=4148301824)
2020-04-30 10:37:28.467454%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,469] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /getintent/424 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.473438 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 10:37:28.473438%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:28.474434%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4148338688, percent=67.4, used=8589373440, free=4148338688)
2020-04-30 10:37:28.474434%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.474434%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,475] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 10:37:28,476] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.479421 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 10:37:28.479421%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:28.479421%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4148469760, percent=67.4, used=8589242368, free=4148469760)
2020-04-30 10:37:28.480418%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,482] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.764658 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:37:28.765656%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:79.2
2020-04-30 10:37:28.765656%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147400704, percent=67.4, used=8590311424, free=4147400704)
2020-04-30 10:37:28.765656%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,767] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.771639 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 10:37:28.771639%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:28.771639%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147400704, percent=67.4, used=8590311424, free=4147400704)
2020-04-30 10:37:28.771639%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.771639%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.774633%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.778626 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 10:37:28.778626%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:28.778626%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147400704, percent=67.4, used=8590311424, free=4147400704)
2020-04-30 10:37:28.778626%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.778626%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.786599 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/424 [GET]
2020-04-30 10:37:28.786599%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:37:28.786599%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147400704, percent=67.4, used=8590311424, free=4147400704)
2020-04-30 10:37:28.786599%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.789592%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,791] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.796574 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 10:37:28.796574%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:28.797570%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147396608, percent=67.4, used=8590315520, free=4147396608)
2020-04-30 10:37:28.797570%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.797570%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.806547 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 10:37:28.806547%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:28.806547%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147322880, percent=67.4, used=8590389248, free=4147322880)
2020-04-30 10:37:28.806547%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,809] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.810535%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:28.816521%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,829] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:28.833476%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:28,843] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-30 10:37:28,888] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:28] "[37mGET /getintent/424 HTTP/1.1[0m" 200 -
2020-04-30 10:37:29.074830 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:37:29.074830%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.5
2020-04-30 10:37:29.074830%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4147036160, percent=67.4, used=8590675968, free=4147036160)
2020-04-30 10:37:29.074830%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:29.077821%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:29,081] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:29] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:39.747077 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:37:39.747077%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.5
2020-04-30 10:37:39.747077%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4114939904, percent=67.7, used=8622772224, free=4114939904)
2020-04-30 10:37:39.748073%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:39.748073%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:39,750] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:39] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:39.755056 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:37:39.755056%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:39.755056%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4114915328, percent=67.7, used=8622796800, free=4114915328)
2020-04-30 10:37:39.755056%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:39.755056%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:39,760] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:39] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:39.763033 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:37:39.763033%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:37:39.763033%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4114915328, percent=67.7, used=8622796800, free=4114915328)
2020-04-30 10:37:39.763033%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:39,765] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:39] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:39.997750 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:37:39.997750%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 10:37:39.997750%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4114976768, percent=67.7, used=8622735360, free=4114976768)
2020-04-30 10:37:39.997750%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:39.997750%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:40.002739%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:40,034] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:40] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:37:40.060498 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:37:40.060498%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.8
2020-04-30 10:37:40.060498%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4114993152, percent=67.7, used=8622718976, free=4114993152)
2020-04-30 10:37:40.060498%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:40.060498%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:40.063484%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:40.070490 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:37:40.070490%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:37:40.070490%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4114989056, percent=67.7, used=8622723072, free=4114989056)
2020-04-30 10:37:40.070490%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:37:40.076453%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:37:40,085] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:40] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:37:40,096] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:37:40] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:39:46.296867 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:39:46.296867%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.0
2020-04-30 10:39:46.296867%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4363907072, percent=65.7, used=8373805056, free=4363907072)
2020-04-30 10:39:46.296867%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:39:46,299] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:39:46] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:39:46.549043 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:39:46.549043%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.5
2020-04-30 10:39:46.549043%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4363911168, percent=65.7, used=8373800960, free=4363911168)
2020-04-30 10:39:46.549043%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:39:46.549043%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:39:46.557015%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 5823 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232392.8728318, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.936114452414295', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232392.8728318, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.936114452414295', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:39:52,943] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:39:52] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.354125 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 10:40:01.354125%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.4
2020-04-30 10:40:01.355123%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359913472, percent=65.8, used=8377798656, free=4359913472)
2020-04-30 10:40:01.355123%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.355123%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,356] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.364100 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 10:40:01.364100%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:01.364100%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359880704, percent=65.8, used=8377831424, free=4359880704)
2020-04-30 10:40:01.365094%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.365094%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,366] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.369085 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/424 [OPTIONS]
2020-04-30 10:40:01.369085%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:40:01.369085%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359876608, percent=65.8, used=8377835520, free=4359876608)
2020-04-30 10:40:01.369085%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,370] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mOPTIONS /getintent/424 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.374071 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 10:40:01.374071%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:40:01.374071%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359872512, percent=65.8, used=8377839616, free=4359872512)
2020-04-30 10:40:01.374071%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.374071%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,377] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.381054 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 10:40:01.381054%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-30 10:40:01.381054%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359880704, percent=65.8, used=8377831424, free=4359880704)
2020-04-30 10:40:01.381054%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,382] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.402995 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:40:01.402995%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 10:40:01.402995%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359901184, percent=65.8, used=8377810944, free=4359901184)
2020-04-30 10:40:01.402995%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,403] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.665292 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 10:40:01.665292%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.7
2020-04-30 10:40:01.665292%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359589888, percent=65.8, used=8378122240, free=4359589888)
2020-04-30 10:40:01.665292%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.665292%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.668283%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,672] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.674268 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 10:40:01.674268%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:40:01.675268%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359589888, percent=65.8, used=8378122240, free=4359589888)
2020-04-30 10:40:01.675268%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.675268%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.682247 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/424 [GET]
2020-04-30 10:40:01.682247%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:01.682247%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359520256, percent=65.8, used=8378191872, free=4359520256)
2020-04-30 10:40:01.683245%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.687234%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.693218 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 10:40:01.693218%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 10:40:01.693218%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359237632, percent=65.8, used=8378474496, free=4359237632)
2020-04-30 10:40:01.693218%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.693218%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.697208%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.703192 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 10:40:01.703192%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:40:01.703192%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4358959104, percent=65.8, used=8378753024, free=4358959104)
2020-04-30 10:40:01.704189%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.719147 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:40:01.719147%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:01.719147%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4358930432, percent=65.8, used=8378781696, free=4358930432)
2020-04-30 10:40:01.719147%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:01.723140%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,727] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.728127%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,738] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 10:40:01,739] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 10:40:01.748071%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:01,755] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:40:01,797] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:01] "[37mGET /getintent/424 HTTP/1.1[0m" 200 -
2020-04-30 10:40:15.175035 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:40:15.175035%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.3
2020-04-30 10:40:15.175035%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4302675968, percent=66.2, used=8435036160, free=4302675968)
2020-04-30 10:40:15.175035%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.175035%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:15,177] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:15] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:15.183012 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:40:15.183012%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:15.183012%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4302708736, percent=66.2, used=8435003392, free=4302708736)
2020-04-30 10:40:15.184008%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.184008%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:15,187] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:15] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:15.206948 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:40:15.206948%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:15.206948%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4304580608, percent=66.2, used=8433131520, free=4304580608)
2020-04-30 10:40:15.206948%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:15,208] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:15] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:15.426361 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:40:15.426361%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:98.4
2020-04-30 10:40:15.426361%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4294234112, percent=66.3, used=8443478016, free=4294234112)
2020-04-30 10:40:15.426361%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.426361%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.432344%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:15,456] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:15] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:15.489195 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:40:15.489195%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:15.489195%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4294520832, percent=66.3, used=8443191296, free=4294520832)
2020-04-30 10:40:15.489195%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.489195%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.494180%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.502159 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:40:15.502159%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:40:15.502159%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4295520256, percent=66.3, used=8442191872, free=4295520256)
2020-04-30 10:40:15.502159%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:15.510137%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:15,523] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:15] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:40:15,538] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:15] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:19.935304 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/424 [OPTIONS]
2020-04-30 10:40:19.935304%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.4
2020-04-30 10:40:19.935304%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4313870336, percent=66.1, used=8423841792, free=4313870336)
2020-04-30 10:40:19.935304%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:19,937] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:19] "[37mOPTIONS /intent/424 HTTP/1.1[0m" 200 -
2020-04-30 10:40:20.243490 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/424 [DELETE]
2020-04-30 10:40:20.243490%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:66.2
2020-04-30 10:40:20.243490%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4313886720, percent=66.1, used=8423825408, free=4313886720)
2020-04-30 10:40:20.243490%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:20.246472%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:20,259] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:20] "[37mDELETE /intent/424 HTTP/1.1[0m" 204 -
2020-04-30 10:40:23.817921 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/420 [OPTIONS]
2020-04-30 10:40:23.817921%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.7
2020-04-30 10:40:23.817921%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4305592320, percent=66.2, used=8432119808, free=4305592320)
2020-04-30 10:40:23.817921%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:23,819] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:23] "[37mOPTIONS /intent/420 HTTP/1.1[0m" 200 -
2020-04-30 10:40:24.126097 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/420 [DELETE]
2020-04-30 10:40:24.126097%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:87.2
2020-04-30 10:40:24.126097%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4305739776, percent=66.2, used=8431972352, free=4305739776)
2020-04-30 10:40:24.126097%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:24.129089%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:24,139] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:24] "[37mDELETE /intent/420 HTTP/1.1[0m" 204 -
2020-04-30 10:40:25.930273 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/421 [OPTIONS]
2020-04-30 10:40:25.930273%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:47.3
2020-04-30 10:40:25.931270%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4315652096, percent=66.1, used=8422060032, free=4315652096)
2020-04-30 10:40:25.931270%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:25,933] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:25] "[37mOPTIONS /intent/421 HTTP/1.1[0m" 200 -
2020-04-30 10:40:26.240443 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/421 [DELETE]
2020-04-30 10:40:26.240443%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.8
2020-04-30 10:40:26.240443%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4315836416, percent=66.1, used=8421875712, free=4315836416)
2020-04-30 10:40:26.240443%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:26.245456%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:26,258] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:26] "[37mDELETE /intent/421 HTTP/1.1[0m" 204 -
2020-04-30 10:40:28.374737 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/422 [OPTIONS]
2020-04-30 10:40:28.374737%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:82.0
2020-04-30 10:40:28.374737%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4335738880, percent=66.0, used=8401973248, free=4335738880)
2020-04-30 10:40:28.374737%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:28,376] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:28] "[37mOPTIONS /intent/422 HTTP/1.1[0m" 200 -
2020-04-30 10:40:28.681916 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/422 [DELETE]
2020-04-30 10:40:28.681916%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.2
2020-04-30 10:40:28.681916%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4335751168, percent=66.0, used=8401960960, free=4335751168)
2020-04-30 10:40:28.681916%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:28.684909%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:28,697] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:28] "[37mDELETE /intent/422 HTTP/1.1[0m" 204 -
2020-04-30 10:40:30.707542 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/419 [OPTIONS]
2020-04-30 10:40:30.707542%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.0
2020-04-30 10:40:30.707542%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4320284672, percent=66.1, used=8417427456, free=4320284672)
2020-04-30 10:40:30.707542%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:30,709] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:30] "[37mOPTIONS /intent/419 HTTP/1.1[0m" 200 -
2020-04-30 10:40:31.014721 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/419 [DELETE]
2020-04-30 10:40:31.014721%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:31.015718%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4320370688, percent=66.1, used=8417341440, free=4320370688)
2020-04-30 10:40:31.015718%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:31.019707%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:31.029691%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:33.044292 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/deleteContext/61/Flight_number_1_followup/423/1 [DELETE]
2020-04-30 10:40:33.044292%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:66.9
2020-04-30 10:40:33.044292%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4329574400, percent=66.0, used=8408137728, free=4329574400)
2020-04-30 10:40:33.044292%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:33.047285%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:33,057] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:33] "[37mDELETE /deleteContext/61/Flight_number_1_followup/423/1 HTTP/1.1[0m" 200 -
2020-04-30 10:40:35.078390 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/deleteContext/61/Flight_number_1_followup/419/0 [DELETE]
2020-04-30 10:40:35.078390%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.8
2020-04-30 10:40:35.079388%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4313141248, percent=66.1, used=8424570880, free=4313141248)
2020-04-30 10:40:35.079388%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:35.079388%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:35.090359%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:35,123] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:35] "[37mDELETE /deleteContext/61/Flight_number_1_followup/419/0 HTTP/1.1[0m" 204 -
[2020-04-30 10:40:35,136] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:35] "[37mDELETE /intent/419 HTTP/1.1[0m" 204 -
2020-04-30 10:40:38.293433 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/418 [OPTIONS]
2020-04-30 10:40:38.293433%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.8
2020-04-30 10:40:38.294430%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4317286400, percent=66.1, used=8420425728, free=4317286400)
2020-04-30 10:40:38.294430%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:38,297] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:38] "[37mOPTIONS /intent/418 HTTP/1.1[0m" 200 -
2020-04-30 10:40:38.604842 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/418 [DELETE]
2020-04-30 10:40:38.604842%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:57.5
2020-04-30 10:40:38.605838%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4321812480, percent=66.1, used=8415899648, free=4321812480)
2020-04-30 10:40:38.605838%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:38.609829%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:38,623] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:38] "[37mDELETE /intent/418 HTTP/1.1[0m" 204 -
2020-04-30 10:40:40.562607 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:40:40.562607%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:93.4
2020-04-30 10:40:40.562607%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4403335168, percent=65.4, used=8334376960, free=4403335168)
2020-04-30 10:40:40.562607%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:40,564] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:40] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:40.872778 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:40:40.872778%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:40.872778%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4386807808, percent=65.6, used=8350904320, free=4386807808)
2020-04-30 10:40:40.872778%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:40.879759%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:40,884] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:40] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:40:44.507716 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportIntents [OPTIONS]
2020-04-30 10:40:44.507716%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:74.9
2020-04-30 10:40:44.508705%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4358189056, percent=65.8, used=8379523072, free=4358189056)
2020-04-30 10:40:44.508705%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:44.508705%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:44,510] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:44] "[37mOPTIONS /ImportIntents?agentId=61&language=en HTTP/1.1[0m" 200 -
2020-04-30 10:40:44.851787 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/ImportIntents [POST]
2020-04-30 10:40:44.851787%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:40:44.853782%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4359999488, percent=65.8, used=8377712640, free=4359999488)
2020-04-30 10:40:44.866746%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:44.866746%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:44.870737%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:44.872731 current_import_export_operation =  1
1111111111111111----------------------------------
22222222222222222----------------------------------
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'just going to say hi', 'example_entitiy': []}, {'txt': 'heya', 'example_entitiy': []}, {'txt': 'hello hi', 'example_entitiy': []}, {'txt': 'howdy', 'example_entitiy': []}, {'txt': 'hey there', 'example_entitiy': []}, {'txt': 'hi there', 'example_entitiy': []}, {'txt': 'greetings', 'example_entitiy': []}, {'txt': 'hey', 'example_entitiy': []}, {'txt': 'long time no see', 'example_entitiy': []}, {'txt': 'hello', 'example_entitiy': []}, {'txt': "lovely day isn't it", 'example_entitiy': []}, {'txt': 'I greet you', 'example_entitiy': []}, {'txt': 'hello again', 'example_entitiy': []}, {'txt': 'hi', 'example_entitiy': []}, {'txt': 'hello there', 'example_entitiy': []}, {'txt': 'a good day', 'example_entitiy': []}]
------
[]
------
{'intent': 'Default welcome intent', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'I am Glad to Chat you::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}], '_order': 3, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'txt': 'How Can I help you?', 'type': 'card'}], 'trainingExample': [{'txt': 'just going to say hi', 'example_entitiy': []}, {'txt': 'heya', 'example_entitiy': []}, {'txt': 'hello hi', 'example_entitiy': []}, {'txt': 'howdy', 'example_entitiy': []}, {'txt': 'hey there', 'example_entitiy': []}, {'txt': 'hi there', 'example_entitiy': []}, {'txt': 'greetings', 'example_entitiy': []}, {'txt': 'hey', 'example_entitiy': []}, {'txt': 'long time no see', 'example_entitiy': []}, {'txt': 'hello', 'example_entitiy': []}, {'txt': "lovely day isn't it", 'example_entitiy': []}, {'txt': 'I greet you', 'example_entitiy': []}, {'txt': 'hello again', 'example_entitiy': []}, {'txt': 'hi', 'example_entitiy': []}, {'txt': 'hello there', 'example_entitiy': []}, {'txt': 'a good day', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 10:40:47.085582 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:40:47.085582%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.8
2020-04-30 10:40:47.086579%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378501120, percent=65.6, used=8359211008, free=4378501120)
2020-04-30 10:40:47.086579%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:47.086579%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:47.096512%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:49.120347 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:40:49.120347%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.4
2020-04-30 10:40:49.120347%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4380839936, percent=65.6, used=8356872192, free=4380839936)
2020-04-30 10:40:49.121353%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:40:49.121353%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:49,190] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:49] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:40:51.207814 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:40:51.207814%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:72.2
2020-04-30 10:40:51.207814%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4403761152, percent=65.4, used=8333950976, free=4403761152)
2020-04-30 10:40:51.207814%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:51,250] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:51] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:40:53.273541 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:40:53.273541%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.0
2020-04-30 10:40:53.273541%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4415033344, percent=65.3, used=8322678784, free=4415033344)
2020-04-30 10:40:53.274528%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:53,328] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:53] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:40:55.339945 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:40:55.339945%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.1
2020-04-30 10:40:55.340942%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4420411392, percent=65.3, used=8317300736, free=4420411392)
2020-04-30 10:40:55.340942%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:55,364] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:55] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:40:57.374224 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:40:57.374224%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.5
2020-04-30 10:40:57.374224%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4425682944, percent=65.3, used=8312029184, free=4425682944)
2020-04-30 10:40:57.374224%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:57,399] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:57] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:40:59.408540 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:40:59.408540%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.1
2020-04-30 10:40:59.408540%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4403441664, percent=65.4, used=8334270464, free=4403441664)
2020-04-30 10:40:59.408540%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:40:59,432] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:40:59] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:01.441104 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:01.441104%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:73.9
2020-04-30 10:41:01.441104%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4387774464, percent=65.6, used=8349937664, free=4387774464)
2020-04-30 10:41:01.441104%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:01,464] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:01] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:03.475667 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:03.475667%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.2
2020-04-30 10:41:03.476661%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378423296, percent=65.6, used=8359288832, free=4378423296)
2020-04-30 10:41:03.476661%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:03,497] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:03] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:05.509229 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:05.509229%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:82.7
2020-04-30 10:41:05.509229%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4383072256, percent=65.6, used=8354639872, free=4383072256)
2020-04-30 10:41:05.509229%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:05,534] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:05] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:07.553789 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:07.553789%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.1
2020-04-30 10:41:07.554758%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4365398016, percent=65.7, used=8372314112, free=4365398016)
2020-04-30 10:41:07.554758%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:07,577] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:07] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:09.592339 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:09.592339%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:85.7
2020-04-30 10:41:09.592339%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4374818816, percent=65.7, used=8362893312, free=4374818816)
2020-04-30 10:41:09.592339%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:09,613] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:09] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:11.624837 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:11.624837%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.6
2020-04-30 10:41:11.624837%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4363456512, percent=65.7, used=8374255616, free=4363456512)
2020-04-30 10:41:11.625873%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:11,661] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:11] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:13.676831 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:13.676831%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.2
2020-04-30 10:41:13.676831%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4363476992, percent=65.7, used=8374235136, free=4363476992)
2020-04-30 10:41:13.676831%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:13,719] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:13] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:15.734496 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:15.734496%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.6
2020-04-30 10:41:15.735497%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4357156864, percent=65.8, used=8380555264, free=4357156864)
2020-04-30 10:41:15.735497%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:15,781] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:15] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:17.796847 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:17.796847%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.9
2020-04-30 10:41:17.797883%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4357410816, percent=65.8, used=8380301312, free=4357410816)
2020-04-30 10:41:17.797883%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:17,842] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:17] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:19.858271 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:19.858271%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.4
2020-04-30 10:41:19.858271%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4357484544, percent=65.8, used=8380227584, free=4357484544)
2020-04-30 10:41:19.858271%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:19,894] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:19] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:21.911389 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:21.911389%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.5
2020-04-30 10:41:21.911389%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4353662976, percent=65.8, used=8384049152, free=4353662976)
2020-04-30 10:41:21.911389%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:21,937] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:21] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 10:41:21,947] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:21] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'I am Glad to Chat you::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}], '_order': 3, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'txt': 'How Can I help you?', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 425, 'inputContext': '', 'intent': 'Default welcome intent', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'just going to say hi'}, {'example_entitiy': [], 'txt': 'heya'}, {'example_entitiy': [], 'txt': 'hello hi'}, {'example_entitiy': [], 'txt': 'howdy'}, {'example_entitiy': [], 'txt': 'hey there'}, {'example_entitiy': [], 'txt': 'hi there'}, {'example_entitiy': [], 'txt': 'greetings'}, {'example_entitiy': [], 'txt': 'hey'}, {'example_entitiy': [], 'txt': 'long time no see'}, {'example_entitiy': [], 'txt': 'hello'}, {'example_entitiy': [], 'txt': "lovely day isn't it"}, {'example_entitiy': [], 'txt': 'I greet you'}, {'example_entitiy': [], 'txt': 'hello again'}, {'example_entitiy': [], 'txt': 'hi'}, {'example_entitiy': [], 'txt': 'hello there'}, {'example_entitiy': [], 'txt': 'a good day'}]}}
====
33333333333333333333----------------------------------
========================================
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Departure_city', 'name': 'Departure_city', 'prompts': [{'text': 'Please enter the city of departure'}], 'type': 'text', 'value': '$Departure_city'}
inside
inside
Departure_city
entity_object != '' -------------- is None Departure_city
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}]
{'Departure_city': 423}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Destination_city', 'name': 'Destination_city', 'prompts': [{'text': 'Please enter the city of Destination'}], 'type': 'text', 'value': '$Destination_city'}
inside
inside
Destination_city
entity_object != '' -------------- is None Destination_city
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}]
{'Departure_city': 423, 'Destination_city': 424}
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Departure_date', 'name': 'Departure_date', 'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'type': 'text', 'value': '$Departure_date'}
inside
inside
Departure_date
entity_object != '' -------------- is None Departure_date
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]
{'Departure_city': 423, 'Destination_city': 424, 'Departure_date': 425}
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]
Departure_city
2020-04-30 10:41:23.983200 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:23.983200%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:67.8
2020-04-30 10:41:23.983200%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377726976, percent=65.6, used=8359985152, free=4377726976)
2020-04-30 10:41:23.983200%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:23.983200%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:23.994181%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:24,008] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:24] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Destination_city
2020-04-30 10:41:26.029671 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:26.029671%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.8
2020-04-30 10:41:26.029671%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377927680, percent=65.6, used=8359784448, free=4377927680)
2020-04-30 10:41:26.029671%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:26.029671%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:26.035653%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:26,045] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:26] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_city
2020-04-30 10:41:28.062145 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:28.062145%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.3
2020-04-30 10:41:28.063105%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378071040, percent=65.6, used=8359641088, free=4378071040)
2020-04-30 10:41:28.063105%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:28.063105%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:28.074073%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:28,090] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:28] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Destination_city
2020-04-30 10:41:30.112294 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:30.112294%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.4
2020-04-30 10:41:30.113285%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378058752, percent=65.6, used=8359653376, free=4378058752)
2020-04-30 10:41:30.113285%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:30.114292%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:30.132235%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:30,143] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:30] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_date
2020-04-30 10:41:32.160477 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:32.160477%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.5
2020-04-30 10:41:32.160477%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378198016, percent=65.6, used=8359514112, free=4378198016)
2020-04-30 10:41:32.161474%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:32.161474%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:32.169425%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:32,184] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:32] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_date
2020-04-30 10:41:34.208432 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:34.208432%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.5
2020-04-30 10:41:34.209428%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378423296, percent=65.6, used=8359288832, free=4378423296)
2020-04-30 10:41:34.209428%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:34.209428%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:34.217410%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:34,231] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:34] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Departure_date
2020-04-30 10:41:36.253512 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:41:36.253512%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.7
2020-04-30 10:41:36.253512%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378525696, percent=65.6, used=8359186432, free=4378525696)
2020-04-30 10:41:36.254549%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:36.254549%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:36.261527%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:36,273] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:36] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
------
[{'txt': 'i want to book a one way flight', 'example_entitiy': []}, {'txt': 'I am looking for flight', 'example_entitiy': []}, {'txt': 'I want to book a return flight', 'example_entitiy': []}, {'txt': 'I want to book flight', 'example_entitiy': []}, {'txt': 'can you help me with flight booking?', 'example_entitiy': []}, {'txt': 'I want to fly from Mumbai to Pune', 'example_entitiy': [{'startPosition': 20, 'endPosition': 25, 'entitiy_instance_id': 1230, 'Parameter_name': 'Departure_city'}, {'startPosition': 30, 'endPosition': 33, 'entitiy_instance_id': 1231, 'Parameter_name': 'Destination_city'}]}, {'txt': 'Looking for a oneway flight', 'example_entitiy': []}, {'txt': 'Help me in booking flight', 'example_entitiy': []}, {'txt': 'I want to book a flight ticket', 'example_entitiy': []}, {'txt': 'i want to book a two way flight', 'example_entitiy': []}, {'txt': 'I want to fly from Syria to Paris', 'example_entitiy': [{'startPosition': 20, 'endPosition': 24, 'entitiy_instance_id': 1232, 'Parameter_name': 'Departure_city'}, {'startPosition': 29, 'endPosition': 33, 'entitiy_instance_id': 1233, 'Parameter_name': 'Destination_city'}]}, {'txt': 'on 11/2/2020', 'example_entitiy': [{'startPosition': 4, 'endPosition': 12, 'entitiy_instance_id': 1234, 'Parameter_name': 'Departure_date'}]}, {'txt': 'on 5-July', 'example_entitiy': [{'startPosition': 4, 'endPosition': 9, 'entitiy_instance_id': 1235, 'Parameter_name': 'Departure_date'}]}, {'txt': '5/July', 'example_entitiy': [{'startPosition': 1, 'endPosition': 6, 'entitiy_instance_id': 1236, 'Parameter_name': 'Departure_date'}]}]
------
[{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]
------
{'intent': 'Flight booking', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Thank you for your request, I will show you all available flights match your request.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://116.202.231.60:5001/testcardset', 'type': 'CardSet'}], 'trainingExample': [{'txt': 'i want to book a one way flight', 'example_entitiy': []}, {'txt': 'I am looking for flight', 'example_entitiy': []}, {'txt': 'I want to book a return flight', 'example_entitiy': []}, {'txt': 'I want to book flight', 'example_entitiy': []}, {'txt': 'can you help me with flight booking?', 'example_entitiy': []}, {'txt': 'I want to fly from Mumbai to Pune', 'example_entitiy': [{'startPosition': 20, 'endPosition': 25, 'entitiy_instance_id': 1230, 'Parameter_name': 'Departure_city'}, {'startPosition': 30, 'endPosition': 33, 'entitiy_instance_id': 1231, 'Parameter_name': 'Destination_city'}]}, {'txt': 'Looking for a oneway flight', 'example_entitiy': []}, {'txt': 'Help me in booking flight', 'example_entitiy': []}, {'txt': 'I want to book a flight ticket', 'example_entitiy': []}, {'txt': 'i want to book a two way flight', 'example_entitiy': []}, {'txt': 'I want to fly from Syria to Paris', 'example_entitiy': [{'startPosition': 20, 'endPosition': 24, 'entitiy_instance_id': 1232, 'Parameter_name': 'Departure_city'}, {'startPosition': 29, 'endPosition': 33, 'entitiy_instance_id': 1233, 'Parameter_name': 'Destination_city'}]}, {'txt': 'on 11/2/2020', 'example_entitiy': [{'startPosition': 4, 'endPosition': 12, 'entitiy_instance_id': 1234, 'Parameter_name': 'Departure_date'}]}, {'txt': 'on 5-July', 'example_entitiy': [{'startPosition': 4, 'endPosition': 9, 'entitiy_instance_id': 1235, 'Parameter_name': 'Departure_date'}]}, {'txt': '5/July', 'example_entitiy': [{'startPosition': 1, 'endPosition': 6, 'entitiy_instance_id': 1236, 'Parameter_name': 'Departure_date'}]}], 'parameters': [{'prompts': [{'text': 'Please enter the city of departure'}], 'isRequired': True, 'EntityId': 423, 'type': 'text', 'value': '$Departure_city', 'name': 'Departure_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'Please enter the city of Destination'}], 'isRequired': True, 'EntityId': 424, 'type': 'text', 'value': '$Destination_city', 'name': 'Destination_city', 'isIntentApiParameter': False}, {'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'isRequired': True, 'EntityId': 425, 'type': 'text', 'value': '$Departure_date', 'name': 'Departure_date', 'isIntentApiParameter': False}]}
-------------- add intent
2020-04-30 10:41:38.289260 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:41:38.289260%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.9
2020-04-30 10:41:38.289260%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4373798912, percent=65.7, used=8363913216, free=4373798912)
2020-04-30 10:41:38.289260%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:38.289260%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:38.292255%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:40.314843 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:41:40.314843%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:64.1
2020-04-30 10:41:40.314843%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4363329536, percent=65.7, used=8374382592, free=4363329536)
2020-04-30 10:41:40.314843%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:41:40.314843%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:40,355] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:40] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:41:42.373339 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 10:41:42.373339%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.8
2020-04-30 10:41:42.373339%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4354080768, percent=65.8, used=8383631360, free=4354080768)
2020-04-30 10:41:42.373339%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Departure_city
[2020-04-30 10:41:42,417] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:42] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 10:41:44.428843 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 10:41:44.428843%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:74.5
2020-04-30 10:41:44.428843%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4369920000, percent=65.7, used=8367792128, free=4369920000)
2020-04-30 10:41:44.428843%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Destination_city
[2020-04-30 10:41:44,468] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:44] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 10:41:46.478365 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 10:41:46.478365%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:47.4
2020-04-30 10:41:46.478365%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4357758976, percent=65.8, used=8379953152, free=4357758976)
2020-04-30 10:41:46.478365%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Departure_date
[2020-04-30 10:41:46,508] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:46] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 10:41:48.524890 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:48.524890%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:74.9
2020-04-30 10:41:48.524890%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4361015296, percent=65.8, used=8376696832, free=4361015296)
2020-04-30 10:41:48.524890%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:48,552] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:48] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:50.564462 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:50.564462%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:54.8
2020-04-30 10:41:50.564462%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4371959808, percent=65.7, used=8365752320, free=4371959808)
2020-04-30 10:41:50.564462%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:50,585] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:50] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:52.595006 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:52.595006%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:76.2
2020-04-30 10:41:52.595006%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4371812352, percent=65.7, used=8365899776, free=4371812352)
2020-04-30 10:41:52.595006%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:52,624] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:52] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:54.641877 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:54.641877%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.7
2020-04-30 10:41:54.641877%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4379238400, percent=65.6, used=8358473728, free=4379238400)
2020-04-30 10:41:54.641877%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:54,686] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:54] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:56.702529 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:56.702529%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.2
2020-04-30 10:41:56.703528%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4378972160, percent=65.6, used=8358739968, free=4378972160)
2020-04-30 10:41:56.703528%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:56,752] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:56] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:41:58.766967 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:41:58.766967%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.6
2020-04-30 10:41:58.767965%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4375060480, percent=65.7, used=8362651648, free=4375060480)
2020-04-30 10:41:58.767965%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:41:58,803] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:41:58] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:00.820185 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:00.820185%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.7
2020-04-30 10:42:00.821183%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4377243648, percent=65.6, used=8360468480, free=4377243648)
2020-04-30 10:42:00.821183%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:00,870] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:00] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:42:02.890980 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:02.890980%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:77.9
2020-04-30 10:42:02.891977%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4413030400, percent=65.4, used=8324681728, free=4413030400)
2020-04-30 10:42:02.891977%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:02,916] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:02] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:42:04.929870 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:04.929870%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.3
2020-04-30 10:42:04.929870%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4424138752, percent=65.3, used=8313573376, free=4424138752)
2020-04-30 10:42:04.929870%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:04,950] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:04] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:06.960415 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:06.960415%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:52.1
2020-04-30 10:42:06.960415%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4388823040, percent=65.5, used=8348889088, free=4388823040)
2020-04-30 10:42:06.961411%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:06,988] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:06] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:09.000958 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:09.000958%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.8
2020-04-30 10:42:09.000958%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4380307456, percent=65.6, used=8357404672, free=4380307456)
2020-04-30 10:42:09.000958%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:09,021] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:09] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:11.035598 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:11.035598%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.1
2020-04-30 10:42:11.036587%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4380086272, percent=65.6, used=8357625856, free=4380086272)
2020-04-30 10:42:11.036587%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:11,094] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:11] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:13.116854 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:13.116854%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.1
2020-04-30 10:42:13.116854%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4380135424, percent=65.6, used=8357576704, free=4380135424)
2020-04-30 10:42:13.116854%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:13,163] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:13] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:15.184954 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:15.185950%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.8
2020-04-30 10:42:15.186952%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4382748672, percent=65.6, used=8354963456, free=4382748672)
2020-04-30 10:42:15.186952%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:15,227] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:15] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:42:17.251917 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:17.251917%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:68.3
2020-04-30 10:42:17.251917%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4383866880, percent=65.6, used=8353845248, free=4383866880)
2020-04-30 10:42:17.251917%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:17,274] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:17] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:42:19.289932 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:19.289932%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:53.4
2020-04-30 10:42:19.289932%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4414767104, percent=65.3, used=8322945024, free=4414767104)
2020-04-30 10:42:19.289932%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:19,332] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:19] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:21.350236 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:21.350236%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.8
2020-04-30 10:42:21.351240%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4413001728, percent=65.4, used=8324710400, free=4413001728)
2020-04-30 10:42:21.351240%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:21,384] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:21] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:42:23.396553 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:23.396553%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.5
2020-04-30 10:42:23.397551%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4452331520, percent=65.0, used=8285380608, free=4452331520)
2020-04-30 10:42:23.397551%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:23,447] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:23] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:25.467884 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:25.467884%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.3
2020-04-30 10:42:25.467884%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4455071744, percent=65.0, used=8282640384, free=4455071744)
2020-04-30 10:42:25.467884%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:25,504] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:25] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:42:27.519006 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:27.519006%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.8
2020-04-30 10:42:27.519006%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4455383040, percent=65.0, used=8282329088, free=4455383040)
2020-04-30 10:42:27.519006%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:27,543] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:27] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:29.564838 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:42:29.564838%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.9
2020-04-30 10:42:29.564838%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4453478400, percent=65.0, used=8284233728, free=4453478400)
2020-04-30 10:42:29.564838%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:29,615] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:29] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
[2020-04-30 10:42:29,626] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:29] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Thank you for your request, I will show you all available flights match your request.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://116.202.231.60:5001/testcardset', 'type': 'CardSet'}], 'agent_id': '61', 'endOfConversation': False, 'id': 426, 'inputContext': '', 'intent': 'Flight booking', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 423, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_city', 'prompts': [{'text': 'Please enter the city of departure'}], 'type': 'text', 'value': '$Departure_city'}, {'EntityId': 424, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Destination_city', 'prompts': [{'text': 'Please enter the city of Destination'}], 'type': 'text', 'value': '$Destination_city'}, {'EntityId': 425, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_date', 'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'type': 'text', 'value': '$Departure_date'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'i want to book a one way flight'}, {'example_entitiy': [], 'txt': 'I am looking for flight'}, {'example_entitiy': [], 'txt': 'I want to book a return flight'}, {'example_entitiy': [], 'txt': 'I want to book flight'}, {'example_entitiy': [], 'txt': 'can you help me with flight booking?'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 25, 'entitiy_instance_id': 1230, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1231, 'startPosition': 30}], 'txt': 'I want to fly from Mumbai to Pune'}, {'example_entitiy': [], 'txt': 'Looking for a oneway flight'}, {'example_entitiy': [], 'txt': 'Help me in booking flight'}, {'example_entitiy': [], 'txt': 'I want to book a flight ticket'}, {'example_entitiy': [], 'txt': 'i want to book a two way flight'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 24, 'entitiy_instance_id': 1232, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1233, 'startPosition': 29}], 'txt': 'I want to fly from Syria to Paris'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 12, 'entitiy_instance_id': 1234, 'startPosition': 4}], 'txt': 'on 11/2/2020'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 9, 'entitiy_instance_id': 1235, 'startPosition': 4}], 'txt': 'on 5-July'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 6, 'entitiy_instance_id': 1236, 'startPosition': 1}], 'txt': '5/July'}]}}
====
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'show me the details of flight number 1', 'example_entitiy': []}, {'txt': 'flight_number_1', 'example_entitiy': []}]
------
[]
------
{'intent': 'Flight_number_1', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': 'Flight_number_1_followup', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [{'payloadText': 'book', 'title': 'book'}, {'payloadText': 'back', 'title': '/restart'}, {'payloadText': '/Flight_number_2', 'title': '/Flight_number_2'}], '_order': 1, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'card'}], 'trainingExample': [{'txt': 'show me the details of flight number 1', 'example_entitiy': []}, {'txt': 'flight_number_1', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 10:42:31.650932 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:42:31.650932%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.1
2020-04-30 10:42:31.651944%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4434239488, percent=65.2, used=8303472640, free=4434239488)
2020-04-30 10:42:31.651944%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:31.651944%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:31.655922%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:33.671530 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:42:33.671530%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.6
2020-04-30 10:42:33.671530%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4433616896, percent=65.2, used=8304095232, free=4433616896)
2020-04-30 10:42:33.671530%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:33.671530%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:33,712] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:33] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:42:35.727033 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:35.727033%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.0
2020-04-30 10:42:35.727033%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4417204224, percent=65.3, used=8320507904, free=4417204224)
2020-04-30 10:42:35.727033%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:35,753] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:35] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:37.768574 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:37.768574%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.1
2020-04-30 10:42:37.768574%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4401152000, percent=65.4, used=8336560128, free=4401152000)
2020-04-30 10:42:37.768574%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:37,796] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:37] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 10:42:37,805] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:37] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [{'payloadText': 'book', 'title': 'book'}, {'payloadText': 'back', 'title': '/restart'}, {'payloadText': '/Flight_number_2', 'title': '/Flight_number_2'}], '_order': 1, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 427, 'inputContext': '', 'intent': 'Flight_number_1', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': 'Flight_number_1_followup', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 1'}, {'example_entitiy': [], 'txt': 'flight_number_1'}]}}
====
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'show me the details of flight number 2', 'example_entitiy': []}, {'txt': 'flight_number_2', 'example_entitiy': []}]
------
[]
------
{'intent': 'Flight_number_2', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': 'https://www.telegraph.co.uk/content/dam/Travel/hotels/europe/france/paris/paris-cityscape-overview-guide.jpg', 'txt': 'this flight from Damascus to Paris', 'type': 'image'}, {'Buttons': [{'payloadText': 'Book', 'title': 'Book'}, {'payloadText': '/restart', 'title': '/restart'}, {'payloadText': '/Flight_number_1', 'title': '/Flight_number_1'}], '_order': 2, 'image': '', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'quick'}], 'trainingExample': [{'txt': 'show me the details of flight number 2', 'example_entitiy': []}, {'txt': 'flight_number_2', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 10:42:39.833465 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:42:39.833465%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.5
2020-04-30 10:42:39.834459%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4425068544, percent=65.3, used=8312643584, free=4425068544)
2020-04-30 10:42:39.834459%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:39.834459%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:39.840442%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:41.862271 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:42:41.862271%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.8
2020-04-30 10:42:41.862271%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4425179136, percent=65.3, used=8312532992, free=4425179136)
2020-04-30 10:42:41.862271%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:41.862271%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:41,920] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:41] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:42:43.936428 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:43.936428%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.9
2020-04-30 10:42:43.936428%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4419072000, percent=65.3, used=8318640128, free=4419072000)
2020-04-30 10:42:43.936428%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:43,984] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:43] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:46.000038 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:46.000038%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.3
2020-04-30 10:42:46.000038%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4419067904, percent=65.3, used=8318644224, free=4419067904)
2020-04-30 10:42:46.000038%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:46,046] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:46] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 10:42:46,056] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:46] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': 'https://www.telegraph.co.uk/content/dam/Travel/hotels/europe/france/paris/paris-cityscape-overview-guide.jpg', 'txt': 'this flight from Damascus to Paris', 'type': 'image'}, {'Buttons': [{'payloadText': 'Book', 'title': 'Book'}, {'payloadText': '/restart', 'title': '/restart'}, {'payloadText': '/Flight_number_1', 'title': '/Flight_number_1'}], '_order': 2, 'image': '', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 428, 'inputContext': '', 'intent': 'Flight_number_2', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 2'}, {'example_entitiy': [], 'txt': 'flight_number_2'}]}}
====
33333333333333333333----------------------------------
========================================
[]
------
[{'txt': 'book', 'example_entitiy': []}, {'txt': 'Booking', 'example_entitiy': []}]
------
[]
------
{'intent': 'Book', 'language': 'en', 'agent_id': '61', 'endOfConversation': True, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'thank you for choosing our lines.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'your Flight has been booked successfully,\nFlight details\n:From: $Departure_city\nTo: $Destination_city \nDate: $Departure_date::', 'type': 'text'}, {'Buttons': [{'payloadText': '1 Star', 'title': '1 Star'}, {'payloadText': '2 Star', 'title': '2 Star'}, {'payloadText': '3 Star', 'title': '3 Star'}, {'payloadText': '4 Star', 'title': '4 Star'}, {'payloadText': '5 Star', 'title': '5 Star'}], '_order': 3, 'image': '', 'txt': 'Rate our Customer Service please.', 'type': 'quick'}], 'trainingExample': [{'txt': 'book', 'example_entitiy': []}, {'txt': 'Booking', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 10:42:48.085950 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:42:48.085950%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.0
2020-04-30 10:42:48.085950%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4426993664, percent=65.2, used=8310718464, free=4426993664)
2020-04-30 10:42:48.085950%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:48.085950%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:48.092934%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:50.110530 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:42:50.110530%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.0
2020-04-30 10:42:50.110530%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4428034048, percent=65.2, used=8309678080, free=4428034048)
2020-04-30 10:42:50.110530%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:50.110530%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:50,198] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:50] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:42:52.212132 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:52.212132%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.4
2020-04-30 10:42:52.213128%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4424888320, percent=65.3, used=8312823808, free=4424888320)
2020-04-30 10:42:52.213128%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:52,253] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:52] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:42:54.267432 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:42:54.267432%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.4
2020-04-30 10:42:54.267432%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4425830400, percent=65.3, used=8311881728, free=4425830400)
2020-04-30 10:42:54.267432%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:54,309] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:54] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 10:42:54,316] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:54] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'thank you for choosing our lines.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'your Flight has been booked successfully,\nFlight details\n:From: $Departure_city\nTo: $Destination_city \nDate: $Departure_date::', 'type': 'text'}, {'Buttons': [{'payloadText': '1 Star', 'title': '1 Star'}, {'payloadText': '2 Star', 'title': '2 Star'}, {'payloadText': '3 Star', 'title': '3 Star'}, {'payloadText': '4 Star', 'title': '4 Star'}, {'payloadText': '5 Star', 'title': '5 Star'}], '_order': 3, 'image': '', 'txt': 'Rate our Customer Service please.', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': True, 'id': 429, 'inputContext': '', 'intent': 'Book', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'book'}, {'example_entitiy': [], 'txt': 'Booking'}]}}
====
33333333333333333333----------------------------------
========================================
{'isIntentApiParameter': False, 'isRequired': True, 'language': 'en', 'meta': 'Email', 'name': 'Email', 'prompts': [{'text': 'enter your email which will receive our response.'}], 'type': 'text', 'value': '$Email'}
inside
inside
Email
entity_object != '' -------------- is None Email
[{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]
{'Email': 426}
[{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]
Email
2020-04-30 10:42:56.339245 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:42:56.340243%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.4
2020-04-30 10:42:56.340243%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4432171008, percent=65.2, used=8305541120, free=4432171008)
2020-04-30 10:42:56.341242%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:56.341242%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:56.355207%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:56,367] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:56] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
Email
2020-04-30 10:42:58.384998 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [POST]
2020-04-30 10:42:58.384998%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.7
2020-04-30 10:42:58.385998%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4432465920, percent=65.2, used=8305246208, free=4432465920)
2020-04-30 10:42:58.385998%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:58.385998%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:42:58.393013%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:42:58,404] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:42:58] "[37mPOST /entityinstance HTTP/1.1[0m" 200 -
after instance request
------
[{'txt': 'I wanna send you an Email', 'example_entitiy': []}, {'txt': 'I need to contact you', 'example_entitiy': []}, {'txt': 'I need to send an email to a human', 'example_entitiy': []}, {'txt': 'Can I get the Manager', 'example_entitiy': []}, {'txt': 'mohammad@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 18, 'entitiy_instance_id': 1237, 'Parameter_name': 'Email'}]}, {'txt': 'Client@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 16, 'entitiy_instance_id': 1238, 'Parameter_name': 'Email'}]}]
------
[{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]
------
{'intent': 'Email_us', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': '', 'outputContext': '', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a response on your Email ASAP.::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}, {'payloadText': '/Add_Suggestion', 'title': '/Add_Suggestion'}], '_order': 2, 'image': '', 'txt': 'do you need any thing else', 'type': 'quick'}], 'trainingExample': [{'txt': 'I wanna send you an Email', 'example_entitiy': []}, {'txt': 'I need to contact you', 'example_entitiy': []}, {'txt': 'I need to send an email to a human', 'example_entitiy': []}, {'txt': 'Can I get the Manager', 'example_entitiy': []}, {'txt': 'mohammad@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 18, 'entitiy_instance_id': 1237, 'Parameter_name': 'Email'}]}, {'txt': 'Client@gmail.com', 'example_entitiy': [{'startPosition': 1, 'endPosition': 16, 'entitiy_instance_id': 1238, 'Parameter_name': 'Email'}]}], 'parameters': [{'prompts': [{'text': 'enter your email which will receive our response.'}], 'isRequired': True, 'EntityId': 426, 'type': 'text', 'value': '$Email', 'name': 'Email', 'isIntentApiParameter': False}]}
-------------- add intent
2020-04-30 10:43:00.423070 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:43:00.423070%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.8
2020-04-30 10:43:00.423070%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4432470016, percent=65.2, used=8305242112, free=4432470016)
2020-04-30 10:43:00.424067%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:00.424067%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:00.435043%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:02.460984 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:43:02.460984%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.8
2020-04-30 10:43:02.460984%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4433186816, percent=65.2, used=8304525312, free=4433186816)
2020-04-30 10:43:02.460984%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:02.460984%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:02,497] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:02] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:43:04.513945 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/IntentSlotParameter [POST]
2020-04-30 10:43:04.513945%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:28.0
2020-04-30 10:43:04.513945%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4443242496, percent=65.1, used=8294469632, free=4443242496)
2020-04-30 10:43:04.514935%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
Email
[2020-04-30 10:43:04,580] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:04] "[37mPOST /IntentSlotParameter HTTP/1.1[0m" 201 -
2020-04-30 10:43:06.593970 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:06.593970%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:24.2
2020-04-30 10:43:06.593970%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4448997376, percent=65.1, used=8288714752, free=4448997376)
2020-04-30 10:43:06.594961%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:06,645] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:06] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:08.659369 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:08.659369%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.5
2020-04-30 10:43:08.659369%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4449165312, percent=65.1, used=8288546816, free=4449165312)
2020-04-30 10:43:08.660366%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:08,696] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:08] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:10.707666 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:10.707666%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.2
2020-04-30 10:43:10.707666%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4447821824, percent=65.1, used=8289890304, free=4447821824)
2020-04-30 10:43:10.707666%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:10,726] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:10] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:12.738907 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:12.738907%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:33.1
2020-04-30 10:43:12.739904%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4443181056, percent=65.1, used=8294531072, free=4443181056)
2020-04-30 10:43:12.739904%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:12,777] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:12] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:14.793305 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:14.793305%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.4
2020-04-30 10:43:14.793305%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4438474752, percent=65.2, used=8299237376, free=4438474752)
2020-04-30 10:43:14.793305%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:14,839] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:14] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:16.849767 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:43:16.849767%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.9
2020-04-30 10:43:16.850766%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4449554432, percent=65.1, used=8288157696, free=4449554432)
2020-04-30 10:43:16.850766%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:16,870] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:16] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
2020-04-30 10:43:18.880336 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:18.880336%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.4
2020-04-30 10:43:18.880336%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439326720, percent=65.1, used=8298385408, free=4439326720)
2020-04-30 10:43:18.880336%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:18,907] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:18] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:20.931850 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/exampleentity [POST]
2020-04-30 10:43:20.931850%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.4
2020-04-30 10:43:20.931850%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4448534528, percent=65.1, used=8289177600, free=4448534528)
2020-04-30 10:43:20.931850%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:20,951] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:20] "[37mPOST /exampleentity HTTP/1.1[0m" 201 -
[2020-04-30 10:43:20,959] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:20] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a response on your Email ASAP.::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}, {'payloadText': '/Add_Suggestion', 'title': '/Add_Suggestion'}], '_order': 2, 'image': '', 'txt': 'do you need any thing else', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 430, 'inputContext': '', 'intent': 'Email_us', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 426, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Email', 'prompts': [{'text': 'enter your email which will receive our response.'}], 'type': 'text', 'value': '$Email'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'I wanna send you an Email'}, {'example_entitiy': [], 'txt': 'I need to contact you'}, {'example_entitiy': [], 'txt': 'I need to send an email to a human'}, {'example_entitiy': [], 'txt': 'Can I get the Manager'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 18, 'entitiy_instance_id': 1237, 'startPosition': 1}], 'txt': 'mohammad@gmail.com'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 16, 'entitiy_instance_id': 1238, 'startPosition': 1}], 'txt': 'Client@gmail.com'}]}}
====
========================================
[]
------
[{'txt': 'sub1', 'example_entitiy': []}, {'txt': 'sub2', 'example_entitiy': []}]
------
[]
------
{'intent': 'Flight_number_1_sub', 'language': 'en', 'agent_id': '61', 'endOfConversation': False, 'inputContext': 'Flight_number_1_followup', 'outputContext': '', 'parent': {'name': 'Flight_number_1', 'agent_id': '61'}, 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'here is sub reply::', 'type': 'text'}], 'trainingExample': [{'txt': 'sub1', 'example_entitiy': []}, {'txt': 'sub2', 'example_entitiy': []}], 'parameters': []}
-------------- add intent
2020-04-30 10:43:22.981415 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/addintent [POST]
2020-04-30 10:43:22.981415%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.1
2020-04-30 10:43:22.982416%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4431638528, percent=65.2, used=8306073600, free=4431638528)
2020-04-30 10:43:22.982416%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:22.982416%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:22.988399%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:25.010909 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent [POST]
2020-04-30 10:43:25.010909%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.3
2020-04-30 10:43:25.011906%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4421816320, percent=65.3, used=8315895808, free=4421816320)
2020-04-30 10:43:25.011906%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:25.011906%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:25,055] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:25] "[37mPOST /intent HTTP/1.1[0m" 201 -
2020-04-30 10:43:27.075389 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:27.075389%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:82.8
2020-04-30 10:43:27.076385%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4438151168, percent=65.2, used=8299560960, free=4438151168)
2020-04-30 10:43:27.076385%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:27,100] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:27] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
2020-04-30 10:43:29.112940 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainingexample [POST]
2020-04-30 10:43:29.112940%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.3
2020-04-30 10:43:29.112940%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4421419008, percent=65.3, used=8316293120, free=4421419008)
2020-04-30 10:43:29.113937%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:29,145] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:29] "[37mPOST /trainingexample HTTP/1.1[0m" 201 -
[2020-04-30 10:43:29,154] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:29] "[37mPOST /addintent HTTP/1.1[0m" 200 -
-------------- add intent 2
{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'here is sub reply::', 'type': 'text'}], 'agent_id': '61', 'endOfConversation': False, 'id': 431, 'inputContext': 'Flight_number_1_followup', 'intent': 'Flight_number_1_sub', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'parent': {'agent_id': '61', 'name': 'Flight_number_1'}, 'trainingExample': [{'example_entitiy': [], 'txt': 'sub1'}, {'example_entitiy': [], 'txt': 'sub2'}]}}
[{'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Hi! How are you doing?::Hello! How can I help you?::Good day! What can I do for you today?::Greetings! How can I assist?::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'I am Glad to Chat you::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}], '_order': 3, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'txt': 'How Can I help you?', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 425, 'inputContext': '', 'intent': 'Default welcome intent', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'just going to say hi'}, {'example_entitiy': [], 'txt': 'heya'}, {'example_entitiy': [], 'txt': 'hello hi'}, {'example_entitiy': [], 'txt': 'howdy'}, {'example_entitiy': [], 'txt': 'hey there'}, {'example_entitiy': [], 'txt': 'hi there'}, {'example_entitiy': [], 'txt': 'greetings'}, {'example_entitiy': [], 'txt': 'hey'}, {'example_entitiy': [], 'txt': 'long time no see'}, {'example_entitiy': [], 'txt': 'hello'}, {'example_entitiy': [], 'txt': "lovely day isn't it"}, {'example_entitiy': [], 'txt': 'I greet you'}, {'example_entitiy': [], 'txt': 'hello again'}, {'example_entitiy': [], 'txt': 'hi'}, {'example_entitiy': [], 'txt': 'hello there'}, {'example_entitiy': [], 'txt': 'a good day'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'Thank you for your request, I will show you all available flights match your request.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'http://116.202.231.60:5001/testcardset', 'type': 'CardSet'}], 'agent_id': '61', 'endOfConversation': False, 'id': 426, 'inputContext': '', 'intent': 'Flight booking', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 423, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_city', 'prompts': [{'text': 'Please enter the city of departure'}], 'type': 'text', 'value': '$Departure_city'}, {'EntityId': 424, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Destination_city', 'prompts': [{'text': 'Please enter the city of Destination'}], 'type': 'text', 'value': '$Destination_city'}, {'EntityId': 425, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Departure_date', 'prompts': [{'text': 'please enter the departure date(day/month/year)'}], 'type': 'text', 'value': '$Departure_date'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'i want to book a one way flight'}, {'example_entitiy': [], 'txt': 'I am looking for flight'}, {'example_entitiy': [], 'txt': 'I want to book a return flight'}, {'example_entitiy': [], 'txt': 'I want to book flight'}, {'example_entitiy': [], 'txt': 'can you help me with flight booking?'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 25, 'entitiy_instance_id': 1230, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1231, 'startPosition': 30}], 'txt': 'I want to fly from Mumbai to Pune'}, {'example_entitiy': [], 'txt': 'Looking for a oneway flight'}, {'example_entitiy': [], 'txt': 'Help me in booking flight'}, {'example_entitiy': [], 'txt': 'I want to book a flight ticket'}, {'example_entitiy': [], 'txt': 'i want to book a two way flight'}, {'example_entitiy': [{'Parameter_name': 'Departure_city', 'endPosition': 24, 'entitiy_instance_id': 1232, 'startPosition': 20}, {'Parameter_name': 'Destination_city', 'endPosition': 33, 'entitiy_instance_id': 1233, 'startPosition': 29}], 'txt': 'I want to fly from Syria to Paris'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 12, 'entitiy_instance_id': 1234, 'startPosition': 4}], 'txt': 'on 11/2/2020'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 9, 'entitiy_instance_id': 1235, 'startPosition': 4}], 'txt': 'on 5-July'}, {'example_entitiy': [{'Parameter_name': 'Departure_date', 'endPosition': 6, 'entitiy_instance_id': 1236, 'startPosition': 1}], 'txt': '5/July'}]}}, {'response': {'Responses': [{'Buttons': [{'payloadText': 'book', 'title': 'book'}, {'payloadText': 'back', 'title': '/restart'}, {'payloadText': '/Flight_number_2', 'title': '/Flight_number_2'}], '_order': 1, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'card'}], 'agent_id': '61', 'endOfConversation': False, 'id': 427, 'inputContext': '', 'intent': 'Flight_number_1', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': 'Flight_number_1_followup', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 1'}, {'example_entitiy': [], 'txt': 'flight_number_1'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': 'https://www.telegraph.co.uk/content/dam/Travel/hotels/europe/france/paris/paris-cityscape-overview-guide.jpg', 'txt': 'this flight from Damascus to Paris', 'type': 'image'}, {'Buttons': [{'payloadText': 'Book', 'title': 'Book'}, {'payloadText': '/restart', 'title': '/restart'}, {'payloadText': '/Flight_number_1', 'title': '/Flight_number_1'}], '_order': 2, 'image': '', 'txt': 'from $Departure_city to $Destination_city on $Departure_date  Price: 20$', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 428, 'inputContext': '', 'intent': 'Flight_number_2', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'show me the details of flight number 2'}, {'example_entitiy': [], 'txt': 'flight_number_2'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'thank you for choosing our lines.::', 'type': 'text'}, {'Buttons': [], '_order': 2, 'image': '', 'txt': 'your Flight has been booked successfully,\nFlight details\n:From: $Departure_city\nTo: $Destination_city \nDate: $Departure_date::', 'type': 'text'}, {'Buttons': [{'payloadText': '1 Star', 'title': '1 Star'}, {'payloadText': '2 Star', 'title': '2 Star'}, {'payloadText': '3 Star', 'title': '3 Star'}, {'payloadText': '4 Star', 'title': '4 Star'}, {'payloadText': '5 Star', 'title': '5 Star'}], '_order': 3, 'image': '', 'txt': 'Rate our Customer Service please.', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': True, 'id': 429, 'inputContext': '', 'intent': 'Book', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'trainingExample': [{'example_entitiy': [], 'txt': 'book'}, {'example_entitiy': [], 'txt': 'Booking'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'you will get a response on your Email ASAP.::', 'type': 'text'}, {'Buttons': [{'payloadText': '/Flight booking', 'title': '/Flight booking'}, {'payloadText': '/email_us', 'title': '/email_us'}, {'payloadText': '/Add_Suggestion', 'title': '/Add_Suggestion'}], '_order': 2, 'image': '', 'txt': 'do you need any thing else', 'type': 'quick'}], 'agent_id': '61', 'endOfConversation': False, 'id': 430, 'inputContext': '', 'intent': 'Email_us', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [{'EntityId': 426, 'isIntentApiParameter': False, 'isRequired': True, 'name': 'Email', 'prompts': [{'text': 'enter your email which will receive our response.'}], 'type': 'text', 'value': '$Email'}], 'trainingExample': [{'example_entitiy': [], 'txt': 'I wanna send you an Email'}, {'example_entitiy': [], 'txt': 'I need to contact you'}, {'example_entitiy': [], 'txt': 'I need to send an email to a human'}, {'example_entitiy': [], 'txt': 'Can I get the Manager'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 18, 'entitiy_instance_id': 1237, 'startPosition': 1}], 'txt': 'mohammad@gmail.com'}, {'example_entitiy': [{'Parameter_name': 'Email', 'endPosition': 16, 'entitiy_instance_id': 1238, 'startPosition': 1}], 'txt': 'Client@gmail.com'}]}}, {'response': {'Responses': [{'Buttons': [], '_order': 1, 'image': '', 'txt': 'here is sub reply::', 'type': 'text'}], 'agent_id': '61', 'endOfConversation': False, 'id': 431, 'inputContext': 'Flight_number_1_followup', 'intent': 'Flight_number_1_sub', 'intentAPI': {'isActive': False, 'params': '', 'url': ''}, 'language': 'en', 'outputContext': '', 'parameters': [], 'parent': {'agent_id': '61', 'name': 'Flight_number_1'}, 'trainingExample': [{'example_entitiy': [], 'txt': 'sub1'}, {'example_entitiy': [], 'txt': 'sub2'}]}}]
444444444444444444----------------------------------
2020-04-30 10:43:29.157819 current_import_export_operation =  0
[2020-04-30 10:43:29,162] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:29] "[37mPOST /ImportIntents?agentId=61&language=en HTTP/1.1[0m" 200 -
2020-04-30 10:43:52.342488 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:43:52.342488%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.9
2020-04-30 10:43:52.343485%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4440825856, percent=65.1, used=8296886272, free=4440825856)
2020-04-30 10:43:52.343485%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.343485%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:52,345] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:52] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:52.348471 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:43:52.348471%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:43:52.348471%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439470080, percent=65.1, used=8298242048, free=4439470080)
2020-04-30 10:43:52.349472%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.349472%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:52,352] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:52] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:52.358448 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:43:52.358448%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:43:52.359443%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439470080, percent=65.1, used=8298242048, free=4439470080)
2020-04-30 10:43:52.359443%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:52,360] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:52] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:52.589989 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:43:52.589989%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.3
2020-04-30 10:43:52.589989%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439711744, percent=65.1, used=8298000384, free=4439711744)
2020-04-30 10:43:52.589989%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.589989%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.592949%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:52,608] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:52] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:52.653791 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:43:52.653791%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:43:52.653791%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439695360, percent=65.1, used=8298016768, free=4439695360)
2020-04-30 10:43:52.653791%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.653791%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.658774%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.665780 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:43:52.665780%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:43:52.665780%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4439691264, percent=65.1, used=8298020864, free=4439691264)
2020-04-30 10:43:52.665780%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:52.675753%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:52,681] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:52] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:43:52,693] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:52] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:53.816752 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 10:43:53.816752%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:26.0
2020-04-30 10:43:53.816752%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4428587008, percent=65.2, used=8309125120, free=4428587008)
2020-04-30 10:43:53.816752%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:53.817750%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:53,818] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:53] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.124450 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 10:43:54.125444%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.8
2020-04-30 10:43:54.125444%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427214848, percent=65.2, used=8310497280, free=4427214848)
2020-04-30 10:43:54.125444%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.125444%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.128469 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 10:43:54.128469%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:43:54.129433%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427214848, percent=65.2, used=8310497280, free=4427214848)
2020-04-30 10:43:54.129433%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.129433%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,130] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.135418 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/425 [OPTIONS]
2020-04-30 10:43:54.135418%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:43:54.135418%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427198464, percent=65.2, used=8310513664, free=4427198464)
2020-04-30 10:43:54.135418%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,137] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mOPTIONS /getintent/425 HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.142398 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 10:43:54.142398%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:43:54.142398%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427190272, percent=65.2, used=8310521856, free=4427190272)
2020-04-30 10:43:54.142398%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.142398%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,143] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.144401 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 10:43:54.144401%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:43:54.144401%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427190272, percent=65.2, used=8310521856, free=4427190272)
2020-04-30 10:43:54.144401%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,146] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.148383%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.155364 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:43:54.155364%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:43:54.155364%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427182080, percent=65.2, used=8310530048, free=4427182080)
2020-04-30 10:43:54.155364%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,156] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:43:54,157] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.443354 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 10:43:54.443354%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:15.6
2020-04-30 10:43:54.443354%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427177984, percent=65.2, used=8310534144, free=4427177984)
2020-04-30 10:43:54.444354%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.444354%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.453328%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.460309 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/425 [GET]
2020-04-30 10:43:54.460309%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:43:54.460309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427177984, percent=65.2, used=8310534144, free=4427177984)
2020-04-30 10:43:54.460309%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.465297 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 10:43:54.465297%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:43:54.465297%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427177984, percent=65.2, used=8310534144, free=4427177984)
2020-04-30 10:43:54.465297%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.465297%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.476264 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 10:43:54.476264%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 10:43:54.476264%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427177984, percent=65.2, used=8310534144, free=4427177984)
2020-04-30 10:43:54.476264%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.479256%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.482251%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.486241 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:43:54.486241%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:43:54.487237%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4427177984, percent=65.2, used=8310534144, free=4427177984)
2020-04-30 10:43:54.487237%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:54.491226%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,495] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 10:43:54,498] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 10:43:54,502] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 10:43:54.508180%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:54,516] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:43:54,560] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:54] "[37mGET /getintent/425 HTTP/1.1[0m" 200 -
2020-04-30 10:43:58.305876 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 10:43:58.305876%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.6
2020-04-30 10:43:58.305876%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4413587456, percent=65.4, used=8324124672, free=4413587456)
2020-04-30 10:43:58.305876%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:58.305876%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:43:58,307] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:43:58] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:43:58.614051 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 10:43:58.614051%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:70.0
2020-04-30 10:43:58.614051%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4407898112, percent=65.4, used=8329814016, free=4407898112)
2020-04-30 10:43:58.614051%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:58.614051%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:43:58.619053%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpn0corr7y\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpn0corr7y\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpn0corr7y model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 10:44:32,523] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 10:44:33,124] INFO in spacy_utils: Trying to load spacy model with name 'en'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43   1145.3 MiB   1145.3 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45   1145.3 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31   1145.3 MiB   1145.3 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36   1145.3 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
61/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47   1147.3 MiB   1147.3 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56   1147.3 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57   1147.3 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58   1147.3 MiB      0.0 MiB           print(self.gazetteer_path )
    59   1147.3 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60   1147.3 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64   1147.3 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65   1147.3 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66   1147.3 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179   1147.4 MiB   1147.4 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183   1147.4 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184   1147.4 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185   1147.4 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187   1147.4 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200430-104502.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200430-104502.tar.gz
training Status Code 200  ---------------------  61 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192   1142.5 MiB   1142.5 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204   1142.5 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207   1142.5 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208   1142.5 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209   1142.5 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210   1142.5 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x000001BC40E2AD08>
[2020-04-30 10:45:28,058] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:45:28] "[37mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:45:44.902946 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:45:44.902946%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.6
2020-04-30 10:45:44.902946%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4464947200, percent=64.9, used=8272764928, free=4464947200)
2020-04-30 10:45:44.902946%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:45:44,905] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:45:44] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:45:45.153052 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:45:45.153052%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.2
2020-04-30 10:45:45.153052%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4465676288, percent=64.9, used=8272035840, free=4465676288)
2020-04-30 10:45:45.153052%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:45:45.153052%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:45:45.156045%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.0 MiB   1146.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.0 MiB      0.0 MiB           text = message.text
    88   1146.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.0 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.0 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.0 MiB      0.0 MiB               entities = old_entities
   114   1146.0 MiB      0.0 MiB               words = text.split(' ')
   115   1146.0 MiB      0.0 MiB               for w in words:
   116   1146.0 MiB      0.0 MiB                   word =w
   117   1146.0 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.0 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1146.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.0 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.1 MiB   1146.1 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.1 MiB      0.0 MiB           text = message.text
    88   1146.1 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.1 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.1 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.1 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.1 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.1 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.1 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.1 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.1 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.1 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.1 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.1 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.1 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.1 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.1 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.1 MiB      0.0 MiB               entities = old_entities
   114   1146.1 MiB      0.0 MiB               words = text.split(' ')
   115   1146.1 MiB      0.0 MiB               for w in words:
   116   1146.1 MiB      0.0 MiB                   word =w
   117   1146.1 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.1 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.1 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.1 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.1 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.1 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1146.1 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.1 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.1 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.1 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.1 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.1 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.1 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.1 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 10291 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232751.4025784, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9373539732362791', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232751.4025784, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9373539732362791', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:45:51,527] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:45:51] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:45:55.817771 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:45:55.817771%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.7
2020-04-30 10:45:55.817771%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4430319616, percent=65.2, used=8307392512, free=4430319616)
2020-04-30 10:45:55.817771%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:45:55,818] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:45:55] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:45:56.070097 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:45:56.070097%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.2
2020-04-30 10:45:56.070097%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4430315520, percent=65.2, used=8307396608, free=4430315520)
2020-04-30 10:45:56.070097%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:45:56.070097%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:45:56.073088%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 11960 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232760.2549176, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_date'}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232760.2549176, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_date'}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:46:00,329] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:00] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:06.720660 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:46:06.720660%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:57.1
2020-04-30 10:46:06.720660%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4457750528, percent=65.0, used=8279961600, free=4457750528)
2020-04-30 10:46:06.720660%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:06,722] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:06] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:06.971812 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:46:06.971812%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.1
2020-04-30 10:46:06.972810%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4459454464, percent=65.0, used=8278257664, free=4459454464)
2020-04-30 10:46:06.972810%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:06.972810%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:06.979784%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  11/2/2020
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
11/2/2020
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1146.1 MiB   1146.1 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1146.1 MiB      0.0 MiB           entity = {"value": value,
    75   1146.1 MiB      0.0 MiB                     "start": start,
    76   1146.1 MiB      0.0 MiB                     "end": end,
    77   1146.1 MiB      0.0 MiB                     "confidence": 1.0,
    78   1146.1 MiB      0.0 MiB                     "entity": name,
    79   1146.1 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1146.1 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.1 MiB   1146.1 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.1 MiB      0.0 MiB           text = message.text
    88   1146.1 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.1 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.1 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.1 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.1 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.1 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.1 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.1 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.1 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.1 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.1 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.1 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.1 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.1 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.1 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.1 MiB      0.0 MiB               entities = old_entities
   114   1146.1 MiB      0.0 MiB               words = text.split(' ')
   115   1146.1 MiB      0.0 MiB               for w in words:
   116   1146.1 MiB      0.0 MiB                   word =w
   117   1146.1 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.1 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.1 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.1 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.1 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.1 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1146.1 MiB      0.0 MiB                       start = text.find(w)
   128   1146.1 MiB      0.0 MiB                       end = start + len(w)
   129   1146.1 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.1 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.1 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.1 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.1 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.1 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.1 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.1 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.1 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  11/2/2020
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
11/2/2020
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1146.2 MiB   1146.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1146.2 MiB      0.0 MiB           entity = {"value": value,
    75   1146.2 MiB      0.0 MiB                     "start": start,
    76   1146.2 MiB      0.0 MiB                     "end": end,
    77   1146.2 MiB      0.0 MiB                     "confidence": 1.0,
    78   1146.2 MiB      0.0 MiB                     "entity": name,
    79   1146.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1146.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.2 MiB   1146.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.2 MiB      0.0 MiB           text = message.text
    88   1146.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.2 MiB      0.0 MiB               entities = old_entities
   114   1146.2 MiB      0.0 MiB               words = text.split(' ')
   115   1146.2 MiB      0.0 MiB               for w in words:
   116   1146.2 MiB      0.0 MiB                   word =w
   117   1146.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1146.2 MiB      0.0 MiB                       start = text.find(w)
   128   1146.2 MiB      0.0 MiB                       end = start + len(w)
   129   1146.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 15893 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232769.3151734, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Destination_city'}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232769.3151734, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Destination_city'}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  [{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
{'entity': 'CARDINAL', 'value': '11/2/2020', 'start': 0, 'confidence': None, 'end': 9, 'extractor': 'SpacyEntityExtractor'} ---------- {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}
updated_entities ---------------------------------------- [{'confidence': None, 'end': 9, 'start': 0, 'extractor': 'SpacyEntityExtractor', 'entity': 'System.cardinal', 'value': '11/2/2020'}, {'value': '11/2/2020', 'start': 0, 'end': 9, 'confidence': 1.0, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-30 10:46:09,442] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:09] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:17.495839 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:46:17.495839%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.0
2020-04-30 10:46:17.495839%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4417548288, percent=65.3, used=8320163840, free=4417548288)
2020-04-30 10:46:17.495839%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:17,496] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:17] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:17.750847 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:46:17.750847%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:46:17.750847%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4417478656, percent=65.3, used=8320233472, free=4417478656)
2020-04-30 10:46:17.750847%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:17.750847%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:17.758819%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  Paris
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
pari
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1146.2 MiB   1146.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1146.2 MiB      0.0 MiB           entity = {"value": value,
    75   1146.2 MiB      0.0 MiB                     "start": start,
    76   1146.2 MiB      0.0 MiB                     "end": end,
    77   1146.2 MiB      0.0 MiB                     "confidence": 1.0,
    78   1146.2 MiB      0.0 MiB                     "entity": name,
    79   1146.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1146.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.2 MiB   1146.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.2 MiB      0.0 MiB           text = message.text
    88   1146.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.2 MiB      0.0 MiB               entities = old_entities
   114   1146.2 MiB      0.0 MiB               words = text.split(' ')
   115   1146.2 MiB      0.0 MiB               for w in words:
   116   1146.2 MiB      0.0 MiB                   word =w
   117   1146.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.2 MiB      0.0 MiB                   if (word_singular is False):
   120                                                 word_singular = word_lower
   121                                             else:
   122   1146.2 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124   1146.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1146.2 MiB      0.0 MiB                       start = text.find(w)
   128   1146.2 MiB      0.0 MiB                       end = start + len(w)
   129   1146.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  Paris
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
pari
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1146.2 MiB   1146.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1146.2 MiB      0.0 MiB           entity = {"value": value,
    75   1146.2 MiB      0.0 MiB                     "start": start,
    76   1146.2 MiB      0.0 MiB                     "end": end,
    77   1146.2 MiB      0.0 MiB                     "confidence": 1.0,
    78   1146.2 MiB      0.0 MiB                     "entity": name,
    79   1146.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1146.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.2 MiB   1146.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.2 MiB      0.0 MiB           text = message.text
    88   1146.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.2 MiB      0.0 MiB               entities = old_entities
   114   1146.2 MiB      0.0 MiB               words = text.split(' ')
   115   1146.2 MiB      0.0 MiB               for w in words:
   116   1146.2 MiB      0.0 MiB                   word =w
   117   1146.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.2 MiB      0.0 MiB                   if (word_singular is False):
   120                                                 word_singular = word_lower
   121                                             else:
   122   1146.2 MiB      0.0 MiB                       word_singular = word_singular.lower()
   123                             
   124   1146.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1146.2 MiB      0.0 MiB                       start = text.find(w)
   128   1146.2 MiB      0.0 MiB                       end = start + len(w)
   129   1146.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 18846 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232780.0262127, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_city'}}
state is  {'active_form': {'name': 'hci_form', 'rejected': False, 'trigger_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'validate': True}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232780.0262127, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': None, 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': 'Departure_city'}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  [{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
{'entity': 'GPE', 'value': 'Paris', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'} ---------- {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}
updated_entities ---------------------------------------- [{'confidence': None, 'end': 5, 'start': 0, 'extractor': 'SpacyEntityExtractor', 'entity': 'System.gpe', 'value': 'Paris'}, {'value': 'Paris', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-30 10:46:20,141] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:20] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:23.891537 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:46:23.891537%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:5.3
2020-04-30 10:46:23.891537%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4419600384, percent=65.3, used=8318111744, free=4419600384)
2020-04-30 10:46:23.891537%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:23,893] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:23] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:24.201015 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:46:24.202012%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.5
2020-04-30 10:46:24.202012%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4419682304, percent=65.3, used=8318029824, free=4419682304)
2020-04-30 10:46:24.202012%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:24.202012%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:24.208985%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  Syria
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
syria
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1146.2 MiB   1146.2 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1146.2 MiB      0.0 MiB           entity = {"value": value,
    75   1146.2 MiB      0.0 MiB                     "start": start,
    76   1146.2 MiB      0.0 MiB                     "end": end,
    77   1146.2 MiB      0.0 MiB                     "confidence": 1.0,
    78   1146.2 MiB      0.0 MiB                     "entity": name,
    79   1146.2 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1146.2 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.2 MiB   1146.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.2 MiB      0.0 MiB           text = message.text
    88   1146.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.2 MiB      0.0 MiB               entities = old_entities
   114   1146.2 MiB      0.0 MiB               words = text.split(' ')
   115   1146.2 MiB      0.0 MiB               for w in words:
   116   1146.2 MiB      0.0 MiB                   word =w
   117   1146.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1146.2 MiB      0.0 MiB                       start = text.find(w)
   128   1146.2 MiB      0.0 MiB                       end = start + len(w)
   129   1146.2 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  Syria
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}]
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
syria
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    70   1146.3 MiB   1146.3 MiB       @profile
    71                                 def convert_to_rasa(self,name, value,start,end):
    72                                     """Convert model output into the Rasa NLU compatible output format."""
    73                             
    74   1146.3 MiB      0.0 MiB           entity = {"value": value,
    75   1146.3 MiB      0.0 MiB                     "start": start,
    76   1146.3 MiB      0.0 MiB                     "end": end,
    77   1146.3 MiB      0.0 MiB                     "confidence": 1.0,
    78   1146.3 MiB      0.0 MiB                     "entity": name,
    79   1146.3 MiB      0.0 MiB                     "extractor": "CustomGazetteerEntity"}
    80                             
    81   1146.3 MiB      0.0 MiB           return entity


CustomGazetteerEntity :  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.3 MiB   1146.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.3 MiB      0.0 MiB           text = message.text
    88   1146.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.3 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.3 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.3 MiB      0.0 MiB               entities = old_entities
   114   1146.3 MiB      0.0 MiB               words = text.split(' ')
   115   1146.3 MiB      0.0 MiB               for w in words:
   116   1146.3 MiB      0.0 MiB                   word =w
   117   1146.3 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.3 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127   1146.3 MiB      0.0 MiB                       start = text.find(w)
   128   1146.3 MiB      0.0 MiB                       end = start + len(w)
   129   1146.3 MiB      0.0 MiB                       entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130                                             elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.3 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 21903 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232788.6016278, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232788.6016278, 'latest_input_channel': None, 'latest_message': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
CardSettttttttttttttttttttttttttt http://116.202.231.60:5001/testcardset
CardSettttttttttttttttttttttttttt http://116.202.231.60:5001/testcardse
CardSettttttttttttttttttttttttttt <Response [200]>
-------------------- response [{'buttons': [{'payload': 'payload1', 'title': 'title1'}], 'image': 'https://i.imgur.com/nGF1K8f.jpg', 'text': 'card1'}, {'buttons': [{'payload': 'payload2', 'title': 'title2'}, {'payload': 'payload3', 'title': 'title3'}], 'image': 'https://i.imgur.com/nGF1K8f.jpg    ', 'text': 'card2'}]
++++++++++++++++++++++++++++++++++++++++
[][]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
[][]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
---------------------------------------------------
getFormatedEntity -------------------------  [{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
{'entity': 'GPE', 'value': 'Syria', 'start': 0, 'confidence': None, 'end': 5, 'extractor': 'SpacyEntityExtractor'} ---------- {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}
updated_entities ---------------------------------------- [{'confidence': None, 'end': 5, 'start': 0, 'extractor': 'SpacyEntityExtractor', 'entity': 'System.gpe', 'value': 'Syria'}, {'value': 'Syria', 'start': 0, 'end': 5, 'confidence': 1.0, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity'}]
[2020-04-30 10:46:29,258] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:29] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:39.409789 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 10:46:39.409789%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.0
2020-04-30 10:46:39.410786%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4420866048, percent=65.3, used=8316846080, free=4420866048)
2020-04-30 10:46:39.410786%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.410786%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:39,424] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:39] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:46:39.433731 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 10:46:39.433731%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 10:46:39.434723%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4421029888, percent=65.3, used=8316682240, free=4421029888)
2020-04-30 10:46:39.434723%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.434723%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:39,436] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:39] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:46:39.440705 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 10:46:39.440705%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 10:46:39.440705%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4420263936, percent=65.3, used=8317448192, free=4420263936)
2020-04-30 10:46:39.440705%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:39,441] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:39] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 10:46:39.639438 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 10:46:39.639438%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.1
2020-04-30 10:46:39.639438%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4420296704, percent=65.3, used=8317415424, free=4420296704)
2020-04-30 10:46:39.639438%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.639438%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.642427%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:39,662] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:39] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:46:39.735241 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 10:46:39.735241%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.2
2020-04-30 10:46:39.735241%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4420612096, percent=65.3, used=8317100032, free=4420612096)
2020-04-30 10:46:39.735241%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.735241%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.738206%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.744217 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 10:46:39.744217%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 10:46:39.744217%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4420575232, percent=65.3, used=8317136896, free=4420575232)
2020-04-30 10:46:39.744217%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:39.751171%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:39,756] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:39] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 10:46:39,767] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:39] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 10:46:47.192380 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:46:47.192380%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:13.5
2020-04-30 10:46:47.192380%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4423417856, percent=65.3, used=8314294272, free=4423417856)
2020-04-30 10:46:47.192380%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:46:47,194] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:47] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:46:47.503075 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:46:47.503075%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.9
2020-04-30 10:46:47.503075%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4425990144, percent=65.3, used=8311721984, free=4425990144)
2020-04-30 10:46:47.503075%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:47.503075%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:46:47.511055%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 23740 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232813.7746089, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232813.7746089, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight_number_1 +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight_number_1
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:46:53,858] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:46:53] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:47:35.917889 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:47:35.917889%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.6
2020-04-30 10:47:35.917889%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4322643968, percent=66.1, used=8415068160, free=4322643968)
2020-04-30 10:47:35.917889%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:47:35,920] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:47:35] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:47:36.170883 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:47:36.170883%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.1
2020-04-30 10:47:36.170883%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4322668544, percent=66.1, used=8415043584, free=4322668544)
2020-04-30 10:47:36.170883%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:47:36.170883%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:47:36.178854%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.3 MiB   1146.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.3 MiB      0.0 MiB           text = message.text
    88   1146.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.3 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.3 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.3 MiB      0.0 MiB               entities = old_entities
   114   1146.3 MiB      0.0 MiB               words = text.split(' ')
   115   1146.3 MiB      0.0 MiB               for w in words:
   116   1146.3 MiB      0.0 MiB                   word =w
   117   1146.3 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.3 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1146.3 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.3 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1146.3 MiB   1146.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1146.3 MiB      0.0 MiB           text = message.text
    88   1146.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1146.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1146.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1146.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1146.3 MiB      0.0 MiB                   low_key = key.lower()
    96   1146.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1146.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1146.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1146.3 MiB      0.0 MiB                   if( singular_key is False):
   103   1146.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1146.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1146.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1146.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1146.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1146.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1146.3 MiB      0.0 MiB               entities = old_entities
   114   1146.3 MiB      0.0 MiB               words = text.split(' ')
   115   1146.3 MiB      0.0 MiB               for w in words:
   116   1146.3 MiB      0.0 MiB                   word =w
   117   1146.3 MiB      0.0 MiB                   word_lower =word.lower()
   118   1146.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1146.3 MiB      0.0 MiB                   if (word_singular is False):
   120   1146.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1146.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1146.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1146.3 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1146.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1146.3 MiB      0.0 MiB                   low_key = key.lower()
   139   1146.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1146.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1146.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1146.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1146.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1146.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 28209 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232862.5029914, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9373539732362791', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588232862.5029914, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9373539732362791', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9373539732362791']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:47:42,634] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:47:42] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:52:23.436139 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 10:52:23.436139%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.0
2020-04-30 10:52:23.436139%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5307568128, percent=58.3, used=7430144000, free=5307568128)
2020-04-30 10:52:23.436139%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 10:52:23,439] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:52:23] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 10:52:23.688302 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 10:52:23.688302%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:3.1
2020-04-30 10:52:23.688302%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5308071936, percent=58.3, used=7429640192, free=5308071936)
2020-04-30 10:52:23.688302%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:52:23.688302%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 10:52:23.697276%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 30405 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588233150.0202327, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588233150.0202327, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9373539732362791', 'Flight_number_1$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight_number_1 +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight_number_1
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 10:52:30,115] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 10:52:30] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.394783 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 11:19:07.394783%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.5
2020-04-30 11:19:07.394978%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4783304704, percent=62.4, used=7954407424, free=4783304704)
2020-04-30 11:19:07.394978%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.394978%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,397] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.406257 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 11:19:07.406257%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 11:19:07.406863%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4783022080, percent=62.4, used=7954690048, free=4783022080)
2020-04-30 11:19:07.406863%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.406863%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,408] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.410739 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 11:19:07.410739%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:19:07.410880%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4782977024, percent=62.5, used=7954735104, free=4782977024)
2020-04-30 11:19:07.410880%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,411] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.419714 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:19:07.419714%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:19:07.420712%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4783026176, percent=62.4, used=7954685952, free=4783026176)
2020-04-30 11:19:07.420712%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,423] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.652323 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 11:19:07.652323%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:47.5
2020-04-30 11:19:07.652607%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4784279552, percent=62.4, used=7953432576, free=4784279552)
2020-04-30 11:19:07.652607%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.653320%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.673300%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.712195 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 11:19:07.712195%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:56.2
2020-04-30 11:19:07.713159%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4784115712, percent=62.4, used=7953596416, free=4784115712)
2020-04-30 11:19:07.713159%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.713159%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,724] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.726125 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 11:19:07.726125%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:19:07.727124%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4784111616, percent=62.4, used=7953600512, free=4784111616)
2020-04-30 11:19:07.727124%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.750061 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:19:07.750061%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:19:07.750707%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4783947776, percent=62.4, used=7953764352, free=4783947776)
2020-04-30 11:19:07.750707%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.754048%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:19:07.766015%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,785] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 11:19:07.785994%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:19:07,795] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:19:07,803] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:19:07] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 11:21:58,394] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-30 11:21:58.394297
2020-04-30 11:22:00.471648 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 11:22:00.471648%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:10.4
2020-04-30 11:22:00.471648%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=5047996416, percent=60.4, used=7689715712, free=5047996416)
2020-04-30 11:22:00.471648%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:22:00.471648%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:22:00.485611%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2666 2666
 2- default platform is not  Null 
[2020-04-30 11:22:00,673] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:22:00] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
[2020-04-30 11:22:00,676] ERROR in GenericChatbotController: keep alive chatting Response:  {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}, Status_code: 400
2020-04-30 11:48:13.805485 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 11:48:13.805485%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:14.4
2020-04-30 11:48:13.805786%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4556062720, percent=64.2, used=8181649408, free=4556062720)
2020-04-30 11:48:13.806797%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:13.806797%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:13,810] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:13] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:13.818010 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 11:48:13.818010%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:13.819014%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4556091392, percent=64.2, used=8181620736, free=4556091392)
2020-04-30 11:48:13.819532%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:13.819532%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:13,823] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:13] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:13.838331 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 11:48:13.838331%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:13.838607%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4556300288, percent=64.2, used=8181411840, free=4556300288)
2020-04-30 11:48:13.838607%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:13,842] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:13] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 11:48:13.850258 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:48:13.851267%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:13.851424%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4555485184, percent=64.2, used=8182226944, free=4555485184)
2020-04-30 11:48:13.851424%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:13,854] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:13] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:14.052136 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 11:48:14.052136%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:30.8
2020-04-30 11:48:14.053101%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4555554816, percent=64.2, used=8182157312, free=4555554816)
2020-04-30 11:48:14.053249%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.053249%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.073080%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:14,121] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:14] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:14.133882 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 11:48:14.133882%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:76.2
2020-04-30 11:48:14.134947%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4555337728, percent=64.2, used=8182374400, free=4555337728)
2020-04-30 11:48:14.134947%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.134947%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.165792%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.174766 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 11:48:14.174766%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:14.175063%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4555223040, percent=64.2, used=8182489088, free=4555223040)
2020-04-30 11:48:14.175063%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.187732 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:48:14.187732%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:14.187732%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4555177984, percent=64.2, used=8182534144, free=4555177984)
2020-04-30 11:48:14.187732%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:14.201693%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:14,213] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:14] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 11:48:14.220643%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:14,231] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:14] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:14,239] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:14] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:17.860239 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 11:48:17.860239%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.3
2020-04-30 11:48:17.860635%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4585144320, percent=64.0, used=8152567808, free=4585144320)
2020-04-30 11:48:17.860635%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:17.861234%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:17,863] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:17] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.170832 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 11:48:18.170832%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:45.1
2020-04-30 11:48:18.171623%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4583051264, percent=64.0, used=8154660864, free=4583051264)
2020-04-30 11:48:18.171623%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.172620%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.193564 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 11:48:18.193564%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:18.194309%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4583051264, percent=64.0, used=8154660864, free=4583051264)
2020-04-30 11:48:18.194568%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.194568%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,196] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:18,200] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.213513 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/426 [OPTIONS]
2020-04-30 11:48:18.214508%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:18.214508%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4583124992, percent=64.0, used=8154587136, free=4583124992)
2020-04-30 11:48:18.215507%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,220] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mOPTIONS /getintent/426 HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.229467 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 11:48:18.230077%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:18.230077%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4583047168, percent=64.0, used=8154664960, free=4583047168)
2020-04-30 11:48:18.230636%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.230636%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,232] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.234456 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 11:48:18.234456%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:48:18.235452%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4583034880, percent=64.0, used=8154677248, free=4583034880)
2020-04-30 11:48:18.235452%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.235452%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.242433 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 11:48:18.242433%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:18.243622%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4583026688, percent=64.0, used=8154685440, free=4583026688)
2020-04-30 11:48:18.243622%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,246] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.253435%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,266] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.514888 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:48:18.515629%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 11:48:18.515629%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4589035520, percent=64.0, used=8148676608, free=4589035520)
2020-04-30 11:48:18.515629%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.533535 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 11:48:18.533535%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:18.533535%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4589035520, percent=64.0, used=8148676608, free=4589035520)
2020-04-30 11:48:18.534538%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.535528%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.551483 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 11:48:18.551483%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-30 11:48:18.552487%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4589035520, percent=64.0, used=8148676608, free=4589035520)
2020-04-30 11:48:18.552487%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.552487%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.569483 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/426 [GET]
2020-04-30 11:48:18.569483%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:18.570623%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4589035520, percent=64.0, used=8148676608, free=4589035520)
2020-04-30 11:48:18.570623%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.584830 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 11:48:18.584830%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 11:48:18.585395%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4588998656, percent=64.0, used=8148713472, free=4588998656)
2020-04-30 11:48:18.585395%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.585395%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.603388%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.610334 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 11:48:18.610334%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:18.611478%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4588945408, percent=64.0, used=8148766720, free=4588945408)
2020-04-30 11:48:18.611478%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.632272%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.647231%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,666] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:18.670205%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.689194%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:18.720064%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:18,726] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:18,747] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-30 11:48:18,749] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:18,751] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:18,830] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:18] "[37mGET /getintent/426 HTTP/1.1[0m" 200 -
2020-04-30 11:48:19.154707 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/425 [OPTIONS]
2020-04-30 11:48:19.154707%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:52.1
2020-04-30 11:48:19.155701%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4581281792, percent=64.0, used=8156430336, free=4581281792)
2020-04-30 11:48:19.155701%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:19.162684 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/424 [OPTIONS]
[2020-04-30 11:48:19,166] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:19] "[37mOPTIONS /entity/425 HTTP/1.1[0m" 200 -
2020-04-30 11:48:19.162684%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:19.166672%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4581273600, percent=64.0, used=8156438528, free=4581273600)
2020-04-30 11:48:19.167671%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:19,176] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:19] "[37mOPTIONS /entity/424 HTTP/1.1[0m" 200 -
2020-04-30 11:48:19.185624 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/423 [OPTIONS]
2020-04-30 11:48:19.185624%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:19.186618%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4581277696, percent=64.0, used=8156434432, free=4581277696)
2020-04-30 11:48:19.186618%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:19,193] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:19] "[37mOPTIONS /entity/423 HTTP/1.1[0m" 200 -
2020-04-30 11:48:19.401152 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/425 [GET]
2020-04-30 11:48:19.401152%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.1
2020-04-30 11:48:19.401152%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4581289984, percent=64.0, used=8156422144, free=4581289984)
2020-04-30 11:48:19.401152%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:19,453] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:19] "[37mGET /entity/425 HTTP/1.1[0m" 200 -
2020-04-30 11:48:19.501988 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/424 [GET]
2020-04-30 11:48:19.501988%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:95.8
2020-04-30 11:48:19.501988%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575678464, percent=64.1, used=8162033664, free=4575678464)
2020-04-30 11:48:19.501988%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:19.515846 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entity/423 [GET]
2020-04-30 11:48:19.515846%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:19.516842%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575678464, percent=64.1, used=8162033664, free=4575678464)
2020-04-30 11:48:19.516842%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:19,555] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:19] "[37mGET /entity/423 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:19,559] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:19] "[37mGET /entity/424 HTTP/1.1[0m" 200 -
2020-04-30 11:48:25.624028 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/putintent/426 [OPTIONS]
2020-04-30 11:48:25.624028%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:27.6
2020-04-30 11:48:25.625025%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4599529472, percent=63.9, used=8138182656, free=4599529472)
2020-04-30 11:48:25.625025%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:25,632] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:25] "[37mOPTIONS /putintent/426 HTTP/1.1[0m" 200 -
2020-04-30 11:48:25.933574 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/409 [OPTIONS]
2020-04-30 11:48:25.933574%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.4
2020-04-30 11:48:25.933574%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4590948352, percent=64.0, used=8146763776, free=4590948352)
2020-04-30 11:48:25.933574%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:25,938] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:25] "[37mOPTIONS /response/409 HTTP/1.1[0m" 200 -
2020-04-30 11:48:25.945501 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/410 [OPTIONS]
2020-04-30 11:48:25.946590%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:25.946590%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4590948352, percent=64.0, used=8146763776, free=4590948352)
2020-04-30 11:48:25.946590%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:25,949] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:25] "[37mOPTIONS /response/410 HTTP/1.1[0m" 200 -
2020-04-30 11:48:25.961125 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/putintent/426 [PUT]
2020-04-30 11:48:25.961125%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:25.961591%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4590952448, percent=64.0, used=8146759680, free=4590952448)
2020-04-30 11:48:25.961591%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:25.961591%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:25.972118%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:26.258982 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/409 [PUT]
2020-04-30 11:48:26.258982%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.2
2020-04-30 11:48:26.259816%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4591005696, percent=64.0, used=8146706432, free=4591005696)
2020-04-30 11:48:26.259816%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:26.283756 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/410 [PUT]
2020-04-30 11:48:26.283756%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:48:26.283756%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4590968832, percent=64.0, used=8146743296, free=4590968832)
2020-04-30 11:48:26.284735%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:26,445] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:26] "[37mPUT /response/410 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:26,453] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:26] "[37mPUT /response/409 HTTP/1.1[0m" 200 -
2020-04-30 11:48:27.994601 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/426 [PUT]
2020-04-30 11:48:27.994601%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.6
2020-04-30 11:48:27.994601%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4587954176, percent=64.0, used=8149757952, free=4587954176)
2020-04-30 11:48:27.994601%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:27.994601%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:28,145] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mPUT /intent/426 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:28,192] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mPUT /putintent/426 HTTP/1.1[0m" 200 -
2020-04-30 11:48:28.593980 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 11:48:28.593980%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.0
2020-04-30 11:48:28.593980%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575662080, percent=64.1, used=8162050048, free=4575662080)
2020-04-30 11:48:28.594662%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.594662%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.599930 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 11:48:28.599930%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:28.601316%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575662080, percent=64.1, used=8162050048, free=4575662080)
[2020-04-30 11:48:28,604] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:28.605911%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.605911%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:28,610] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:28.615883 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:48:28.615883%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 11:48:28.619872%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575662080, percent=64.1, used=8162050048, free=4575662080)
2020-04-30 11:48:28.620871%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:28,624] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:28.843757 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 11:48:28.843757%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.6
2020-04-30 11:48:28.844813%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575662080, percent=64.1, used=8162050048, free=4575662080)
2020-04-30 11:48:28.844813%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.844813%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.857861%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:28,913] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:28.924650 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 11:48:28.924650%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:52.4
2020-04-30 11:48:28.925679%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575662080, percent=64.1, used=8162050048, free=4575662080)
2020-04-30 11:48:28.926495%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.926495%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.942451 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:48:28.942451%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:48:28.943811%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4575657984, percent=64.1, used=8162054144, free=4575657984)
2020-04-30 11:48:28.943811%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.955417%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:28.961400%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:28,968] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:48:28,993] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:28] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:30.118415 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 11:48:30.118415%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:36.6
2020-04-30 11:48:30.118822%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4574605312, percent=64.1, used=8163106816, free=4574605312)
2020-04-30 11:48:30.119410%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:30.119410%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:48:30,124] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:48:30] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:48:30.440831 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 11:48:30.440831%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.6
2020-04-30 11:48:30.440831%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4574609408, percent=64.1, used=8163102720, free=4574609408)
2020-04-30 11:48:30.441827%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:30.441827%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:48:30.452800%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpivkmtxk8\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpivkmtxk8\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpivkmtxk8 model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 11:49:01,779] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 11:49:02,904] INFO in spacy_utils: Trying to load spacy model with name 'en'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43   1104.8 MiB   1104.8 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45   1104.8 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31   1104.8 MiB   1104.8 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36   1104.8 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
61/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47   1108.0 MiB   1108.0 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56   1108.0 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57   1108.0 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58   1108.0 MiB      0.0 MiB           print(self.gazetteer_path )
    59   1108.0 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60   1108.0 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64   1108.0 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65   1108.0 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66   1108.0 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179   1108.1 MiB   1108.1 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183   1108.1 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184   1108.1 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185   1108.1 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187   1108.1 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200430-114929.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200430-114929.tar.gz
training Status Code 200  ---------------------  61 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192   1103.6 MiB   1103.6 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204   1103.6 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207   1103.6 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208   1103.6 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209   1103.6 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210   1103.6 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x000001BC5FB0FD08>
[2020-04-30 11:49:55,841] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:49:55] "[37mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:50:47.834211 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 11:50:47.834211%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.9
2020-04-30 11:50:47.834211%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4161851392, percent=67.3, used=8575860736, free=4161851392)
2020-04-30 11:50:47.834211%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:50:47,836] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:50:47] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:50:48.089684 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 11:50:48.089684%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.4
2020-04-30 11:50:48.089684%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4161888256, percent=67.3, used=8575823872, free=4161888256)
2020-04-30 11:50:48.090722%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:50:48.090722%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:50:48.098746%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1111.0 MiB   1111.0 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1111.0 MiB      0.0 MiB           text = message.text
    88   1111.0 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1111.0 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1111.0 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1111.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1111.0 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1111.0 MiB      0.0 MiB                   low_key = key.lower()
    96   1111.0 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1111.0 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1111.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1111.0 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1111.0 MiB      0.0 MiB                   if( singular_key is False):
   103   1111.0 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1111.0 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1111.0 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1111.0 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1111.0 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1111.0 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1111.0 MiB      0.0 MiB               entities = old_entities
   114   1111.0 MiB      0.0 MiB               words = text.split(' ')
   115   1111.0 MiB      0.0 MiB               for w in words:
   116   1111.0 MiB      0.0 MiB                   word =w
   117   1111.0 MiB      0.0 MiB                   word_lower =word.lower()
   118   1111.0 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1111.0 MiB      0.0 MiB                   if (word_singular is False):
   120   1111.0 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1111.0 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1111.0 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1111.0 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1111.0 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1111.0 MiB      0.0 MiB                   low_key = key.lower()
   139   1111.0 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1111.0 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1111.0 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1111.0 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1111.0 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1111.0 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  hey
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
hey
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1111.3 MiB   1111.3 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1111.3 MiB      0.0 MiB           text = message.text
    88   1111.3 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1111.3 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1111.3 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1111.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1111.3 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1111.3 MiB      0.0 MiB                   low_key = key.lower()
    96   1111.3 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1111.3 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1111.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1111.3 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1111.3 MiB      0.0 MiB                   if( singular_key is False):
   103   1111.3 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1111.3 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1111.3 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1111.3 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1111.3 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1111.3 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1111.3 MiB      0.0 MiB               entities = old_entities
   114   1111.3 MiB      0.0 MiB               words = text.split(' ')
   115   1111.3 MiB      0.0 MiB               for w in words:
   116   1111.3 MiB      0.0 MiB                   word =w
   117   1111.3 MiB      0.0 MiB                   word_lower =word.lower()
   118   1111.3 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1111.3 MiB      0.0 MiB                   if (word_singular is False):
   120   1111.3 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1111.3 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1111.3 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1111.3 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1111.3 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1111.3 MiB      0.0 MiB                   low_key = key.lower()
   139   1111.3 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1111.3 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1111.3 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1111.3 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1111.3 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1111.3 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 34870 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236654.768066, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9280495726140631', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236654.768066, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Default welcome intent$$0.9280495726140631', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9373539732362791', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9280495726140631']
++++++++++++++++++++++++++++++++++++++++ Default welcome intent +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Default welcome intent
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 11:50:54,984] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:50:54] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:50:58.926511 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 11:50:58.926511%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:20.8
2020-04-30 11:50:58.926511%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4134342656, percent=67.5, used=8603369472, free=4134342656)
2020-04-30 11:50:58.926511%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:50:58,931] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:50:58] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:50:59.178908 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 11:50:59.178908%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:6.1
2020-04-30 11:50:59.178908%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4134342656, percent=67.5, used=8603369472, free=4134342656)
2020-04-30 11:50:59.178908%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:50:59.179912%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:50:59.191820%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 37182 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}, {'event': 'user', 'input_channel': None, 'message_id': 'd5ba406f98f04d37b6aea9c98430e0c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588236659.3354664}, {'confidence': 0.9896228313446045, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236661.4296372}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236661.4296372, 'value': 'Flight booking$$1.0'}, {'confidence': 0.9950957894325256, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236663.7239213}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588236663.7239213, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588236663.7239213, 'value': 'Paris'}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588236663.7239213, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236663.7239213, 'value': None}, {'confidence': 0.9945738911628723, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://localhost/1/my_api.php ', 'timestamp': 1588236665.7894006}, {'confidence': 0.9740629196166992, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.8113012}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236665.8113012, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}, {'event': 'user', 'input_channel': None, 'message_id': 'd5ba406f98f04d37b6aea9c98430e0c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588236659.3354664}, {'confidence': 0.9896228313446045, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236661.4296372}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236661.4296372, 'value': 'Flight booking$$1.0'}, {'confidence': 0.9950957894325256, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236663.7239213}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588236663.7239213, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588236663.7239213, 'value': 'Paris'}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588236663.7239213, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236663.7239213, 'value': None}, {'confidence': 0.9945738911628723, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://localhost/1/my_api.php ', 'timestamp': 1588236665.7894006}, {'confidence': 0.9740629196166992, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.8113012}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236665.8113012, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9373539732362791', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9280495726140631', 'Flight booking$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
CardSettttttttttttttttttttttttttt http://localhost/1/my_api.php
CardSettttttttttttttttttttttttttt http://localhost/1/my_api.ph
CardSettttttttttttttttttttttttttt <Response [200]>
-------------------- response [{'text': 'Plan A', 'image': 'https://theblondeabroad.com/wp-content/uploads/2018/07/PARIS-GUIDE.jpg', 'buttons': [{'title': 'more details', 'payload': '/Flight_number_1'}]}, {'text': 'Plan B', 'image': 'https://heleneinbetween.com/wp-content/uploads/2017/05/Paris-day-3-2-30-of-43.jpg', 'buttons': [{'title': 'more details', 'payload': '/Flight_number_2'}]}]
++++++++++++++++++++++++++++++++++++++++
[][]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
[][]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
---------------------------------------------------
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 11:51:06,077] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:51:06] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:51:17.735328 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 11:51:17.735328%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:29.3
2020-04-30 11:51:17.735785%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4095242240, percent=67.8, used=8642469888, free=4095242240)
2020-04-30 11:51:17.736338%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:51:17,739] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:51:17] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:51:17.989005 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 11:51:17.989773%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:17.1
2020-04-30 11:51:17.989773%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4095229952, percent=67.8, used=8642482176, free=4095229952)
2020-04-30 11:51:17.989773%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:51:17.989773%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:51:18.002776%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 40005 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}, {'event': 'user', 'input_channel': None, 'message_id': 'd5ba406f98f04d37b6aea9c98430e0c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588236659.3354664}, {'confidence': 0.9896228313446045, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236661.4296372}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236661.4296372, 'value': 'Flight booking$$1.0'}, {'confidence': 0.9950957894325256, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236663.7239213}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588236663.7239213, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588236663.7239213, 'value': 'Paris'}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588236663.7239213, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236663.7239213, 'value': None}, {'confidence': 0.9945738911628723, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://localhost/1/my_api.php ', 'timestamp': 1588236665.7894006}, {'confidence': 0.9740629196166992, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.8113012}, {'event': 'user', 'input_channel': None, 'message_id': '6735987660774d79a724399972a64260', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588236678.1383948}, {'confidence': 0.9884742498397827, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236680.2412102}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236680.2412102, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9950536489486694, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': None, 'timestamp': 1588236682.377725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236682.377725, 'value': None}, {'confidence': 0.9942100644111633, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4548993}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588236684.4559007}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588236684.4559007, 'value': 'yes'}, {'confidence': 0.9737310409545898, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4758885}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236684.4758885, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}, {'event': 'user', 'input_channel': None, 'message_id': 'd5ba406f98f04d37b6aea9c98430e0c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588236659.3354664}, {'confidence': 0.9896228313446045, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236661.4296372}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236661.4296372, 'value': 'Flight booking$$1.0'}, {'confidence': 0.9950957894325256, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236663.7239213}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588236663.7239213, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588236663.7239213, 'value': 'Paris'}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588236663.7239213, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236663.7239213, 'value': None}, {'confidence': 0.9945738911628723, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://localhost/1/my_api.php ', 'timestamp': 1588236665.7894006}, {'confidence': 0.9740629196166992, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.8113012}, {'event': 'user', 'input_channel': None, 'message_id': '6735987660774d79a724399972a64260', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588236678.1383948}, {'confidence': 0.9884742498397827, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236680.2412102}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236680.2412102, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9950536489486694, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': None, 'timestamp': 1588236682.377725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236682.377725, 'value': None}, {'confidence': 0.9942100644111633, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4548993}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588236684.4559007}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588236684.4559007, 'value': 'yes'}, {'confidence': 0.9737310409545898, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4758885}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236684.4758885, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9373539732362791', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9280495726140631', 'Flight booking$$1.0', 'Flight_number_1$$1.0']
++++++++++++++++++++++++++++++++++++++++ Flight_number_1 +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight_number_1
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 11:51:24,683] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:51:24] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:52:37.829656 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 11:52:37.829656%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:23.9
2020-04-30 11:52:37.830652%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4064567296, percent=68.1, used=8673144832, free=4064567296)
2020-04-30 11:52:37.830652%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:52:37,834] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:52:37] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:52:38.082626 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 11:52:38.083625%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:7.4
2020-04-30 11:52:38.083625%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4064575488, percent=68.1, used=8673136640, free=4064575488)
2020-04-30 11:52:38.084188%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:52:38.084188%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:52:38.096596%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
text :  book
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
book
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1111.2 MiB   1111.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1111.2 MiB      0.0 MiB           text = message.text
    88   1111.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1111.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1111.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1111.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1111.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1111.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1111.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1111.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1111.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1111.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1111.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1111.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1111.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1111.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1111.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1111.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1111.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1111.2 MiB      0.0 MiB               entities = old_entities
   114   1111.2 MiB      0.0 MiB               words = text.split(' ')
   115   1111.2 MiB      0.0 MiB               for w in words:
   116   1111.2 MiB      0.0 MiB                   word =w
   117   1111.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1111.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1111.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1111.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1111.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1111.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1111.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1111.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1111.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1111.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1111.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1111.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1111.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1111.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1111.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


agent_obj.handle_message finished
text :  book
key is  mohammad@gmail.com will lowered
key is  Client@gmail.com will lowered
key is  11/2/2020 will lowered
key is  5-July will lowered
key is  5/July will lowered
key is  intent API will lowered
key is  intentapi will lowered
key is  intent api will lowered
key is  intent_api will lowered
key is  classical will lowered
key is  beta will lowered
key is  gama will lowered
key is  alpha will lowered
key is  Pune will lowered
key is  Paris will lowered
key is  Mumbai will lowered
key is  Syria will lowered
old_entities :  []
lower_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'paris': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
singular_gazetter_entities :  {'mohammad@gmail.com': 'Email', 'client@gmail.com': 'Email', '11/2/2020': 'Departure_date', '5-july': 'Departure_date', '5/july': 'Departure_date', 'intent api': 'Paramtype1', 'intentapi': 'Paramtype1', 'intent_api': 'Paramtype1', 'classical': 'Paramtype1', 'beta': 'Paramtype1', 'gama': 'Paramtype1', 'alpha': 'Paramtype1', 'pune': 'Destination_city', 'pari': 'Destination_city', 'mumbai': 'Departure_city', 'syria': 'Departure_city'}
book
CustomGazetteerEntity :  []
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    83   1111.2 MiB   1111.2 MiB       @profile
    84                                 def process(self, message: Message, **kwargs: Any) -> None:
    85                                     """search for sentence words in gazetteer"""
    86                             
    87   1111.2 MiB      0.0 MiB           text = message.text
    88   1111.2 MiB      0.0 MiB           print("text : ",text)
    89                             
    90   1111.2 MiB      0.0 MiB           if( self.lang == "en"):
    91                                         ##lower case
    92   1111.2 MiB      0.0 MiB               lower_gazetteer_entities ={}
    93   1111.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
    94   1111.2 MiB      0.0 MiB                   print("key is ",key,"will lowered")
    95   1111.2 MiB      0.0 MiB                   low_key = key.lower()
    96   1111.2 MiB      0.0 MiB                   lower_gazetteer_entities[low_key]= self.gazetteer_entities[key]
    97                             
    98                                         ## Singular case
    99   1111.2 MiB      0.0 MiB               singular_gazetteer_entities = {}
   100   1111.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   101   1111.2 MiB      0.0 MiB                   singular_key = inflect_engine.singular_noun(key)
   102   1111.2 MiB      0.0 MiB                   if( singular_key is False):
   103   1111.2 MiB      0.0 MiB                       singular_gazetteer_entities[key.lower()] = self.gazetteer_entities[key]
   104                                             else:
   105   1111.2 MiB      0.0 MiB                       singular_gazetteer_entities[singular_key.lower()] = self.gazetteer_entities[key]
   106                             
   107                             
   108   1111.2 MiB      0.0 MiB               old_entities = message.get("entities")
   109   1111.2 MiB      0.0 MiB               print("old_entities : ",old_entities)
   110   1111.2 MiB      0.0 MiB               print("lower_gazetter_entities : ",  lower_gazetteer_entities)
   111   1111.2 MiB      0.0 MiB               print("singular_gazetter_entities : ", singular_gazetteer_entities)
   112                             
   113   1111.2 MiB      0.0 MiB               entities = old_entities
   114   1111.2 MiB      0.0 MiB               words = text.split(' ')
   115   1111.2 MiB      0.0 MiB               for w in words:
   116   1111.2 MiB      0.0 MiB                   word =w
   117   1111.2 MiB      0.0 MiB                   word_lower =word.lower()
   118   1111.2 MiB      0.0 MiB                   word_singular = inflect_engine.singular_noun(w)
   119   1111.2 MiB      0.0 MiB                   if (word_singular is False):
   120   1111.2 MiB      0.0 MiB                       word_singular = word_lower
   121                                             else:
   122                                                 word_singular = word_singular.lower()
   123                             
   124   1111.2 MiB      0.0 MiB                   print (word_singular)
   125                             
   126   1111.2 MiB      0.0 MiB                   if word_lower in lower_gazetteer_entities:
   127                                                 start = text.find(w)
   128                                                 end = start + len(w)
   129                                                 entities.append(self.convert_to_rasa(lower_gazetteer_entities[word_lower],w,start,end))
   130   1111.2 MiB      0.0 MiB                   elif word_singular in singular_gazetteer_entities:
   131                                                 start = text.find(w)
   132                                                 end = start + len(w)
   133                                                 entities.append(self.convert_to_rasa(singular_gazetteer_entities[word_singular],w,start,end))
   134                             
   135                             
   136                                         #check if more than one word exist
   137   1111.2 MiB      0.0 MiB               for key in self.gazetteer_entities.keys():
   138   1111.2 MiB      0.0 MiB                   low_key = key.lower()
   139   1111.2 MiB      0.0 MiB                   if len(key.split(' '))>1 :
   140   1111.2 MiB      0.0 MiB                       start = text.lower().find(low_key)
   141   1111.2 MiB      0.0 MiB                       if (start != -1):
   142                                                     end = start + len(low_key)
   143                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   144                             
   145   1111.2 MiB      0.0 MiB               print("CustomGazetteerEntity : ",entities)
   146                             
   147   1111.2 MiB      0.0 MiB               message.set("entities", entities , add_to_output=False)
   148   1111.2 MiB      0.0 MiB               return message
   149                             
   150                                     elif(self.lang == "ar"):
   151                             
   152                                         old_entities = message.get("entities")
   153                                         print("old_entities : ", old_entities)
   154                             
   155                                         entities = []
   156                                         entities = old_entities
   157                                         words = text.split(' ')
   158                                         for w in words:
   159                                             if w in self.gazetteer_entities:
   160                                                 start = text.find(w)
   161                                                 end = start + len(w)
   162                                                 entities.append(self.convert_to_rasa(self.gazetteer_entities[w],w,start,end))
   163                             
   164                                         #check if more than one word exist
   165                                         for key in self.gazetteer_entities.keys():
   166                                             low_key = key.lower()
   167                                             if len(key.split(' '))>1 :
   168                                                 start = text.lower().find(low_key)
   169                                                 if (start != -1):
   170                                                     end = start + len(low_key)
   171                                                     entities.append(self.convert_to_rasa(self.gazetteer_entities[key], text[start:end], start, end))
   172                             
   173                                         print("CustomGazetteerEntity : ", entities)
   174                             
   175                                         message.set("entities", entities, add_to_output=False)
   176                                         return message


state ------------------------------ (<Response 42384 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}, {'event': 'user', 'input_channel': None, 'message_id': 'd5ba406f98f04d37b6aea9c98430e0c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588236659.3354664}, {'confidence': 0.9896228313446045, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236661.4296372}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236661.4296372, 'value': 'Flight booking$$1.0'}, {'confidence': 0.9950957894325256, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236663.7239213}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588236663.7239213, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588236663.7239213, 'value': 'Paris'}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588236663.7239213, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236663.7239213, 'value': None}, {'confidence': 0.9945738911628723, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://localhost/1/my_api.php ', 'timestamp': 1588236665.7894006}, {'confidence': 0.9740629196166992, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.8113012}, {'event': 'user', 'input_channel': None, 'message_id': '6735987660774d79a724399972a64260', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588236678.1383948}, {'confidence': 0.9884742498397827, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236680.2412102}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236680.2412102, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9950536489486694, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': None, 'timestamp': 1588236682.377725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236682.377725, 'value': None}, {'confidence': 0.9942100644111633, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4548993}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588236684.4559007}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588236684.4559007, 'value': 'yes'}, {'confidence': 0.9737310409545898, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4758885}, {'event': 'user', 'input_channel': None, 'message_id': '6d3d2db237ea44579280bdc7fa298689', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.2517385044839211, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.2517385044839211, 'name': 'Flight booking'}, {'confidence': 0.13900191091237993, 'name': 'Flight_number_2'}, {'confidence': 0.137745598889636, 'name': 'Flight_number_1'}, {'confidence': 0.1287306730590489, 'name': 'Email_us'}, {'confidence': 0.12723253846435978, 'name': 'Flight_number_1_sub'}, {'confidence': 0.11921903557138737, 'name': 'Book'}, {'confidence': 0.09633173861926692, 'name': 'Default welcome intent'}], 'text': 'book'}, 'text': 'book', 'timestamp': 1588236758.278087}, {'confidence': 0.9891507625579834, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236760.3495624}, {'data': {'attachment': None, 'buttons': [{'payload': '/Flight booking', 'title': 'Yes'}, {'payload': '/out_of_scope', 'title': 'No'}], 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': "Did you mean 'Flight booking'?", 'timestamp': 1588236760.3495624}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236760.3495624, 'value': 'Flight booking$$0.25173850448392104'}, {'event': 'rewind', 'timestamp': 1588236760.3495624}, {'confidence': 0.9737310409545898, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236760.3725345}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236760.3725345, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588232227.0876265}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588232227.0876265}, {'event': 'user', 'input_channel': None, 'message_id': 'd48fab09cb3c489588287440f9f3be9b', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9361144524142953, 'name': 'Default welcome intent'}, {'confidence': 0.020640461433356738, 'name': 'Flight_number_1_sub'}, {'confidence': 0.014709599475011213, 'name': 'Email_us'}, {'confidence': 0.008730138810552906, 'name': 'Flight booking'}, {'confidence': 0.006795562341533588, 'name': 'Book'}, {'confidence': 0.0067888855263765055, 'name': 'Flight_number_1'}, {'confidence': 0.00622089999887374, 'name': 'Flight_number_2'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232230.4247005}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232232.4652457}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232232.4652457, 'value': 'Default welcome intent$$0.936114452414295'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232234.5117717}, {'event': 'form', 'name': None, 'timestamp': 1588232234.5117717}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232234.5117717, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.546332}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232236.546332}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232236.551319}, {'event': 'user', 'input_channel': None, 'message_id': '57a0a590661549caa5a70f13caaf48c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'hey'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'hey'}], 'text': '/hey'}, 'text': '/hey', 'timestamp': 1588232386.6107333}, {'confidence': 0.8181177377700806, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232388.661909}, {'confidence': 0.9861109852790833, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232390.8066447}, {'event': 'form', 'name': None, 'timestamp': 1588232390.8066447}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232390.8066447, 'value': None}, {'confidence': 0.9914090633392334, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8638575}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hi! How are you doing? ', 'timestamp': 1588232392.8638575}, {'confidence': 0.9706456065177917, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232392.8728318}, {'event': 'user', 'input_channel': None, 'message_id': 'c799283e946f45748bc022ba3c514e4c', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232745.2278523}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232747.3100579}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232747.3100579, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232749.3687546}, {'event': 'form', 'name': None, 'timestamp': 1588232749.3687546}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232749.3687546, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Good day! What can I do for you today? ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232751.3985903}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232751.3985903}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232751.4025784}, {'event': 'user', 'input_channel': None, 'message_id': '7a8573609b6943d3aa27abcc221b1263', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588232756.1259484}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232758.1794565}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232758.1794565, 'value': 'Flight booking$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232760.2509208}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0'}, 'text': 'please enter the departure date(day/month/year)', 'timestamp': 1588232760.2509208}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232760.2509208}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232760.2509208, 'value': 'Departure_date'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232760.2549176}, {'event': 'user', 'input_channel': None, 'message_id': 'cb7e4922c9cd41d4a830756b21b3377c', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 9, 'entity': 'CARDINAL', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': '11/2/2020'}, {'confidence': 1.0, 'end': 9, 'entity': 'Departure_date', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': '11/2/2020'}], 'intent': {'confidence': 0.5501929296647674, 'name': 'Email_us'}, 'intent_ranking': [{'confidence': 0.5501929296647674, 'name': 'Email_us'}, {'confidence': 0.11010630146192138, 'name': 'Flight booking'}, {'confidence': 0.10743334810344049, 'name': 'Flight_number_1_sub'}, {'confidence': 0.06793300509128584, 'name': 'Flight_number_2'}, {'confidence': 0.06583282481839599, 'name': 'Flight_number_1'}, {'confidence': 0.06014803780137055, 'name': 'Book'}, {'confidence': 0.03835355305881847, 'name': 'Default welcome intent'}], 'text': '11/2/2020'}, 'text': '11/2/2020', 'timestamp': 1588232767.0851696}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232767.0851696, 'value': '11/2/2020'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3101861}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'requested_slot': 'Departure_date'}, 'text': 'Please enter the city of Destination', 'timestamp': 1588232769.3101861}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588232769.3101861, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232769.3101861, 'value': 'Destination_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232769.3151734}, {'event': 'user', 'input_channel': None, 'message_id': 'aa30131f0f094385a741e1d892ab3e5a', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Paris'}, {'confidence': 1.0, 'end': 5, 'entity': 'Destination_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Paris'}], 'intent': {'confidence': 0.6478984243614097, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.6478984243614097, 'name': 'Flight booking'}, {'confidence': 0.11587558078483852, 'name': 'Book'}, {'confidence': 0.05816409577376128, 'name': 'Flight_number_1'}, {'confidence': 0.058152430167711225, 'name': 'Flight_number_2'}, {'confidence': 0.052049304787597, 'name': 'Flight_number_1_sub'}, {'confidence': 0.03811895815499251, 'name': 'Default welcome intent'}, {'confidence': 0.029741205969689714, 'name': 'Email_us'}], 'text': 'Paris'}, 'text': 'Paris', 'timestamp': 1588232777.8575525}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232777.8575525, 'value': 'Paris'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0222235}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {'Current_tracker_intent_name': 'Flight booking$$1.0', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'requested_slot': 'Destination_city'}, 'text': 'Please enter the city of departure', 'timestamp': 1588232780.0222235}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588232780.0222235, 'value': 'Paris'}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232780.0222235, 'value': 'Departure_city'}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232780.0262127}, {'event': 'user', 'input_channel': None, 'message_id': 'e78f18f57d3f444c89a6c8fe988c84bd', 'metadata': {}, 'parse_data': {'entities': [{'confidence': None, 'end': 5, 'entity': 'GPE', 'extractor': 'SpacyEntityExtractor', 'start': 0, 'value': 'Syria'}, {'confidence': 1.0, 'end': 5, 'entity': 'Departure_city', 'extractor': 'CustomGazetteerEntity', 'start': 0, 'value': 'Syria'}], 'intent': {'confidence': 0.5527841411730198, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.5527841411730198, 'name': 'Flight booking'}, {'confidence': 0.09592659806837332, 'name': 'Flight_number_1_sub'}, {'confidence': 0.09462756728770015, 'name': 'Email_us'}, {'confidence': 0.0720355937336829, 'name': 'Flight_number_2'}, {'confidence': 0.0686478480505364, 'name': 'Flight_number_1'}, {'confidence': 0.05937782522760169, 'name': 'Book'}, {'confidence': 0.056600426459085675, 'name': 'Default welcome intent'}], 'text': 'Syria'}, 'text': 'Syria', 'timestamp': 1588232784.3206854}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232784.3206854, 'value': 'Syria'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_3_FormPolicy', 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588232786.5412085, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588232786.5412085}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232786.5412085, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588232788.5856736}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://116.202.231.60:5001/testcardset ', 'timestamp': 1588232788.5856736}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232788.6016278}, {'event': 'user', 'input_channel': None, 'message_id': 'c015501a25a241efb0ce3e449b93139f', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588232807.5698907}, {'confidence': 1.0, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232809.6494684}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232809.6494684, 'value': 'Flight_number_1$$1.0'}, {'confidence': 1.0, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232811.7161129}, {'event': 'form', 'name': None, 'timestamp': 1588232811.7161129}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232811.7161129, 'value': None}, {'confidence': 1.0, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_0_MemoizationPolicy', 'timestamp': 1588232813.7686384}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588232813.7686384}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588232813.7686384, 'value': 'yes'}, {'confidence': 0.9817436933517456, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232813.7746089}, {'event': 'user', 'input_channel': None, 'message_id': '66d6f4bdcfc64ce9be8574e5900114f8', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9373539732362792, 'name': 'Default welcome intent'}, {'confidence': 0.020908569978286582, 'name': 'Flight_number_1_sub'}, {'confidence': 0.011524524654002975, 'name': 'Email_us'}, {'confidence': 0.008247515323181596, 'name': 'Flight booking'}, {'confidence': 0.007813812207936872, 'name': 'Flight_number_1'}, {'confidence': 0.007093154024717624, 'name': 'Flight_number_2'}, {'confidence': 0.007058450575594727, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588232856.2726474}, {'confidence': 0.9911046624183655, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232858.3396544}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588232858.3396544, 'value': 'Default welcome intent$$0.9373539732362791'}, {'confidence': 0.9845986366271973, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588232860.4336648}, {'event': 'form', 'name': None, 'timestamp': 1588232860.4336648}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588232860.4336648, 'value': None}, {'confidence': 0.9904376864433289, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588232862.4870272}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588232862.4870272}, {'confidence': 0.9809132218360901, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588232862.5029914}, {'event': 'user', 'input_channel': None, 'message_id': 'edae0998de3e45248c5a98dc5f0adfa1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588233143.761098}, {'confidence': 0.995359480381012, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233145.834143}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588233145.834143, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9844726324081421, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588233147.9355018}, {'event': 'form', 'name': None, 'timestamp': 1588233147.9355018}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588233147.9355018, 'value': None}, {'confidence': 0.9910168051719666, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233149.997107}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588233149.997107}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588233149.997107, 'value': 'yes'}, {'confidence': 0.9802919030189514, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588233150.0202327}, {'event': 'user', 'input_channel': None, 'message_id': '7c5b47b39474418780875a348fb49b20', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, 'intent_ranking': [{'confidence': 0.9280495726140638, 'name': 'Default welcome intent'}, {'confidence': 0.021223916264738192, 'name': 'Flight_number_1_sub'}, {'confidence': 0.017638232533496737, 'name': 'Email_us'}, {'confidence': 0.009118851681823118, 'name': 'Flight booking'}, {'confidence': 0.009015498509676421, 'name': 'Flight_number_1'}, {'confidence': 0.008336490746777241, 'name': 'Flight_number_2'}, {'confidence': 0.006617437649424132, 'name': 'Book'}], 'text': 'hey'}, 'text': 'hey', 'timestamp': 1588236648.5394638}, {'confidence': 0.9839184880256653, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236650.633468}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236650.633468, 'value': 'Default welcome intent$$0.9280495726140631'}, {'confidence': 0.9951350688934326, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236652.7027738}, {'event': 'form', 'name': None, 'timestamp': 1588236652.7027738}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236652.7027738, 'value': None}, {'confidence': 0.9945544004440308, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Hello! How can I help you? ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'I am Glad to Chat you ', 'timestamp': 1588236654.7503445}, {'data': {'attachment': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'buttons': [{'payload': '/Flight booking', 'title': '/Flight booking'}, {'payload': '/email_us', 'title': '/email_us'}], 'custom': None, 'elements': None, 'image': 'https://i.pinimg.com/originals/af/35/12/af3512b043d4d22c7ef95bb3effaa6e6.jpg', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'How Can I help you? ', 'timestamp': 1588236654.7503445}, {'confidence': 0.9746702909469604, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236654.768066}, {'event': 'user', 'input_channel': None, 'message_id': 'd5ba406f98f04d37b6aea9c98430e0c1', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight booking'}], 'text': '/Flight booking'}, 'text': '/Flight booking', 'timestamp': 1588236659.3354664}, {'confidence': 0.9896228313446045, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236661.4296372}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236661.4296372, 'value': 'Flight booking$$1.0'}, {'confidence': 0.9950957894325256, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236663.7239213}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'Departure_date', 'timestamp': 1588236663.7239213, 'value': '11/2/2020'}, {'event': 'slot', 'name': 'Destination_city', 'timestamp': 1588236663.7239213, 'value': 'Paris'}, {'event': 'slot', 'name': 'Departure_city', 'timestamp': 1588236663.7239213, 'value': 'Syria'}, {'event': 'form', 'name': None, 'timestamp': 1588236663.7239213}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236663.7239213, 'value': None}, {'confidence': 0.9945738911628723, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'Thank you for your request, I will show you all available flights match your request. ', 'timestamp': 1588236665.7894006}, {'data': {'attachment': None, 'buttons': None, 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'http://localhost/1/my_api.php ', 'timestamp': 1588236665.7894006}, {'confidence': 0.9740629196166992, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236665.8113012}, {'event': 'user', 'input_channel': None, 'message_id': '6735987660774d79a724399972a64260', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'text': '/Flight_number_1', 'timestamp': 1588236678.1383948}, {'confidence': 0.9884742498397827, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236680.2412102}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236680.2412102, 'value': 'Flight_number_1$$1.0'}, {'confidence': 0.9950536489486694, 'event': 'action', 'name': 'hci_form', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': 'hci_form', 'timestamp': 1588236682.377725}, {'event': 'form', 'name': None, 'timestamp': 1588236682.377725}, {'event': 'slot', 'name': 'requested_slot', 'timestamp': 1588236682.377725, 'value': None}, {'confidence': 0.9942100644111633, 'event': 'action', 'name': 'action_SetContextSlots', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4548993}, {'data': {'attachment': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'buttons': [{'payload': 'book', 'title': 'book'}, {'payload': 'back', 'title': '/restart'}, {'payload': '/Flight_number_2', 'title': '/Flight_number_2'}], 'custom': None, 'elements': None, 'image': 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq1fWpNe_zFFwm_OhTYQJdUG0vgE2-ykEKOHzV8FSdM-qoeJ-t&usqp=CAU', 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': 'from Syria to Paris on 11/2/2020 Price: 20$ ', 'timestamp': 1588236684.4559007}, {'event': 'slot', 'name': 'context_Flight_number_1_followup', 'timestamp': 1588236684.4559007, 'value': 'yes'}, {'confidence': 0.9737310409545898, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236684.4758885}, {'event': 'user', 'input_channel': None, 'message_id': '6d3d2db237ea44579280bdc7fa298689', 'metadata': {}, 'parse_data': {'entities': [], 'intent': {'confidence': 0.2517385044839211, 'name': 'Flight booking'}, 'intent_ranking': [{'confidence': 0.2517385044839211, 'name': 'Flight booking'}, {'confidence': 0.13900191091237993, 'name': 'Flight_number_2'}, {'confidence': 0.137745598889636, 'name': 'Flight_number_1'}, {'confidence': 0.1287306730590489, 'name': 'Email_us'}, {'confidence': 0.12723253846435978, 'name': 'Flight_number_1_sub'}, {'confidence': 0.11921903557138737, 'name': 'Book'}, {'confidence': 0.09633173861926692, 'name': 'Default welcome intent'}], 'text': 'book'}, 'text': 'book', 'timestamp': 1588236758.278087}, {'confidence': 0.9891507625579834, 'event': 'action', 'name': 'action_setIntent_id', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236760.3495624}, {'data': {'attachment': None, 'buttons': [{'payload': '/Flight booking', 'title': 'Yes'}, {'payload': '/out_of_scope', 'title': 'No'}], 'custom': None, 'elements': None, 'image': None, 'quick_replies': None}, 'event': 'bot', 'metadata': {}, 'text': "Did you mean 'Flight booking'?", 'timestamp': 1588236760.3495624}, {'event': 'slot', 'name': 'Current_tracker_intent_name', 'timestamp': 1588236760.3495624, 'value': 'Flight booking$$0.25173850448392104'}, {'event': 'rewind', 'timestamp': 1588236760.3495624}, {'confidence': 0.9737310409545898, 'event': 'action', 'name': 'action_listen', 'policy': 'policy_1_TEDPolicy', 'timestamp': 1588236760.3725345}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588236760.3725345, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {'confidence': 1.0, 'name': 'Flight_number_1'}, 'intent_ranking': [{'confidence': 1.0, 'name': 'Flight_number_1'}], 'text': '/Flight_number_1'}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': 'Flight_number_1$$1.0', 'Departure_city': 'Syria', 'Departure_date': '11/2/2020', 'Destination_city': 'Paris', 'Email': None, 'context_': None, 'context_Flight_number_1_followup': 'yes', 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  ['Default welcome intent$$0.936114452414295', 'Default welcome intent$$0.9373539732362791', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9373539732362791', 'Flight_number_1$$1.0', 'Default welcome intent$$0.9280495726140631', 'Flight booking$$1.0', 'Flight_number_1$$1.0', 'Flight booking$$0.25173850448392104']
++++++++++++++++++++++++++++++++++++++++ Flight booking +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply Flight booking
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 11:52:40,565] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:52:40] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.199826 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 11:53:16.199826%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.4
2020-04-30 11:53:16.200627%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3958071296, percent=68.9, used=8779640832, free=3958071296)
2020-04-30 11:53:16.200823%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.200823%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,202] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.213797 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 11:53:16.213797%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:16.214587%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3958030336, percent=68.9, used=8779681792, free=3958030336)
2020-04-30 11:53:16.214784%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.214784%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,215] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.219771 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/427 [OPTIONS]
2020-04-30 11:53:16.219771%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:53:16.220028%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3958026240, percent=68.9, used=8779685888, free=3958026240)
2020-04-30 11:53:16.220028%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,223] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mOPTIONS /getintent/427 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.234760 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 11:53:16.234760%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:16.234760%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957288960, percent=68.9, used=8780423168, free=3957288960)
2020-04-30 11:53:16.235730%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.235730%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,237] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.244149 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 11:53:16.244149%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:53:16.244149%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957293056, percent=68.9, used=8780419072, free=3957293056)
2020-04-30 11:53:16.244149%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,247] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.250738 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:53:16.250738%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:53:16.250738%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957293056, percent=68.9, used=8780419072, free=3957293056)
2020-04-30 11:53:16.250738%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,252] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.523996 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 11:53:16.523996%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.3
2020-04-30 11:53:16.523996%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957202944, percent=68.9, used=8780509184, free=3957202944)
2020-04-30 11:53:16.525117%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.525117%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.539989%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.548961 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 11:53:16.548961%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:16.550922%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957198848, percent=68.9, used=8780513280, free=3957198848)
2020-04-30 11:53:16.550922%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.550922%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,573] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.577845 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/427 [GET]
2020-04-30 11:53:16.577845%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:53:16.577845%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957194752, percent=68.9, used=8780517376, free=3957194752)
2020-04-30 11:53:16.578846%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.590811%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.602782 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 11:53:16.602782%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:53:16.603163%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957190656, percent=68.9, used=8780521472, free=3957190656)
2020-04-30 11:53:16.603777%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.603777%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.621913 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 11:53:16.621913%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:16.622727%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957178368, percent=68.9, used=8780533760, free=3957178368)
2020-04-30 11:53:16.622727%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.636687%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.642671%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.651648 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:53:16.651648%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:16.652318%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3957182464, percent=68.9, used=8780529664, free=3957182464)
2020-04-30 11:53:16.652318%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,673] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:16.677599%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:16.684563%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:16,696] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-30 11:53:16,705] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:16,707] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:16,729] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:16] "[37mGET /getintent/427 HTTP/1.1[0m" 200 -
2020-04-30 11:53:26.445753 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/putintent/427 [OPTIONS]
2020-04-30 11:53:26.445753%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 11:53:26.445753%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4006096896, percent=68.5, used=8731615232, free=4006096896)
2020-04-30 11:53:26.445753%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:26,448] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:26] "[37mOPTIONS /putintent/427 HTTP/1.1[0m" 200 -
2020-04-30 11:53:26.461903 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/411 [OPTIONS]
2020-04-30 11:53:26.461903%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:26.462712%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4006096896, percent=68.5, used=8731615232, free=4006096896)
2020-04-30 11:53:26.462712%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:26,465] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:26] "[37mOPTIONS /response/411 HTTP/1.1[0m" 200 -
2020-04-30 11:53:26.697833 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/putintent/427 [PUT]
2020-04-30 11:53:26.697833%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.6
2020-04-30 11:53:26.698831%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4006813696, percent=68.5, used=8730898432, free=4006813696)
2020-04-30 11:53:26.698831%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:26.698831%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:26.709807%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:26.764572 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/411 [PUT]
2020-04-30 11:53:26.764572%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.8
2020-04-30 11:53:26.765002%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4006989824, percent=68.5, used=8730722304, free=4006989824)
2020-04-30 11:53:26.765002%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:26,864] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:26] "[37mPUT /response/411 HTTP/1.1[0m" 200 -
2020-04-30 11:53:28.728626 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/427 [PUT]
2020-04-30 11:53:28.728626%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:22.6
2020-04-30 11:53:28.728626%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4016656384, percent=68.5, used=8721055744, free=4016656384)
2020-04-30 11:53:28.729579%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:28.729579%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:28,860] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:28] "[37mPUT /intent/427 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:28,891] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:28] "[37mPUT /putintent/427 HTTP/1.1[0m" 200 -
2020-04-30 11:53:29.062692 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 11:53:29.062692%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:65.9
2020-04-30 11:53:29.063686%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4017254400, percent=68.5, used=8720457728, free=4017254400)
2020-04-30 11:53:29.063686%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.063686%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:29,064] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:29] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:29.382977 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 11:53:29.382977%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:61.6
2020-04-30 11:53:29.383366%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4008509440, percent=68.5, used=8729202688, free=4008509440)
2020-04-30 11:53:29.383366%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.383366%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:29,387] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:29] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:29.392948 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 11:53:29.392948%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:53:29.393347%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007931904, percent=68.5, used=8729780224, free=4007931904)
2020-04-30 11:53:29.393347%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.393947%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.399927%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.422069 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:53:29.422069%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:62.5
2020-04-30 11:53:29.422069%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007936000, percent=68.5, used=8729776128, free=4007936000)
2020-04-30 11:53:29.422069%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:29,422] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:29] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:29,426] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:29] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:29.631976 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 11:53:29.631976%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.4
2020-04-30 11:53:29.632977%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007915520, percent=68.5, used=8729796608, free=4007915520)
2020-04-30 11:53:29.632977%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.632977%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.644944%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:29,703] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:29] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:29.709046 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:53:29.709046%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-30 11:53:29.709764%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007911424, percent=68.5, used=8729800704, free=4007911424)
2020-04-30 11:53:29.709764%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:29.724726%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:29,742] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:29] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.340097 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 11:53:32.340097%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.1
2020-04-30 11:53:32.341189%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007763968, percent=68.5, used=8729948160, free=4007763968)
2020-04-30 11:53:32.341189%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:32.341189%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:32,342] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.652189 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 11:53:32.652189%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:54.9
2020-04-30 11:53:32.652189%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007579648, percent=68.5, used=8730132480, free=4007579648)
2020-04-30 11:53:32.652189%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:32.652189%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:32.659167%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:32.664129 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 11:53:32.664129%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 11:53:32.665124%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007563264, percent=68.5, used=8730148864, free=4007563264)
2020-04-30 11:53:32.666126%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:32.666126%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:32,672] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.675125 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/428 [OPTIONS]
2020-04-30 11:53:32.675125%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:53:32.676124%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007563264, percent=68.5, used=8730148864, free=4007563264)
2020-04-30 11:53:32.676124%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:32,678] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mOPTIONS /getintent/428 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:32,689] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.693133 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 11:53:32.693133%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.5
2020-04-30 11:53:32.693133%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007563264, percent=68.5, used=8730148864, free=4007563264)
2020-04-30 11:53:32.693133%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:32.693133%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:32,696] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.702025 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 11:53:32.702025%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:53:32.702025%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007563264, percent=68.5, used=8730148864, free=4007563264)
2020-04-30 11:53:32.702025%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:32,708] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.714992 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:53:32.714992%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:32.714992%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007559168, percent=68.5, used=8730152960, free=4007559168)
2020-04-30 11:53:32.715988%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:32,721] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:32] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:32.995952 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/428 [GET]
2020-04-30 11:53:32.995952%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:43.2
2020-04-30 11:53:32.996948%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007538688, percent=68.5, used=8730173440, free=4007538688)
2020-04-30 11:53:32.996948%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.007919 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 11:53:33.007919%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 11:53:33.007919%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007538688, percent=68.5, used=8730173440, free=4007538688)
2020-04-30 11:53:33.007919%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.007919%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.016894%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.022916%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.043848 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 11:53:33.043848%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:87.5
2020-04-30 11:53:33.043848%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007530496, percent=68.5, used=8730181632, free=4007530496)
2020-04-30 11:53:33.043848%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.043848%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.059779 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 11:53:33.059779%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:80.0
2020-04-30 11:53:33.059779%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007530496, percent=68.5, used=8730181632, free=4007530496)
2020-04-30 11:53:33.059779%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:33,075] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:33] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:33.077765%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.088698 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:53:33.089070%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:33.089252%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=4007526400, percent=68.5, used=8730185728, free=4007526400)
2020-04-30 11:53:33.089799%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:33.096727%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:33,101] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:33] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
[2020-04-30 11:53:33,122] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:33] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:33.127598%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:33,146] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:33] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:33,147] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:33] "[37mGET /getintent/428 HTTP/1.1[0m" 200 -
2020-04-30 11:53:40.989161 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/putintent/428 [OPTIONS]
2020-04-30 11:53:40.989161%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:39.2
2020-04-30 11:53:40.990282%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987705856, percent=68.7, used=8750006272, free=3987705856)
2020-04-30 11:53:40.990282%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:40,997] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:40] "[37mOPTIONS /putintent/428 HTTP/1.1[0m" 200 -
2020-04-30 11:53:41.316759 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/412 [OPTIONS]
2020-04-30 11:53:41.316759%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:40.2
2020-04-30 11:53:41.317784%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3986595840, percent=68.7, used=8751116288, free=3986595840)
2020-04-30 11:53:41.317784%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:41,321] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:41] "[37mOPTIONS /response/412 HTTP/1.1[0m" 200 -
2020-04-30 11:53:41.337699 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/putintent/428 [PUT]
2020-04-30 11:53:41.337699%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:41.337699%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3986595840, percent=68.7, used=8751116288, free=3986595840)
2020-04-30 11:53:41.338735%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:41.338735%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:41.350663 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/413 [OPTIONS]
2020-04-30 11:53:41.350663%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 11:53:41.350663%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3986595840, percent=68.7, used=8751116288, free=3986595840)
2020-04-30 11:53:41.351660%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:41,354] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:41] "[37mOPTIONS /response/413 HTTP/1.1[0m" 200 -
2020-04-30 11:53:41.371608%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:41.651104 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/412 [PUT]
2020-04-30 11:53:41.651104%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:32.1
2020-04-30 11:53:41.652100%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3986796544, percent=68.7, used=8750915584, free=3986796544)
2020-04-30 11:53:41.652100%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:41.703952 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/response/413 [PUT]
2020-04-30 11:53:41.703952%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:41.705008%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987087360, percent=68.7, used=8750624768, free=3987087360)
2020-04-30 11:53:41.705008%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:41,856] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:41] "[37mPUT /response/412 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:41,927] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:41] "[37mPUT /response/413 HTTP/1.1[0m" 200 -
2020-04-30 11:53:43.398887 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intent/428 [PUT]
2020-04-30 11:53:43.398887%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.7
2020-04-30 11:53:43.398887%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3986341888, percent=68.7, used=8751370240, free=3986341888)
2020-04-30 11:53:43.398887%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:43.398887%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:43,550] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:43] "[37mPUT /intent/428 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:43,579] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:43] "[37mPUT /putintent/428 HTTP/1.1[0m" 200 -
2020-04-30 11:53:44.004617 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 11:53:44.004617%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:58.1
2020-04-30 11:53:44.004617%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3988938752, percent=68.7, used=8748773376, free=3988938752)
2020-04-30 11:53:44.005617%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.005617%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:44,013] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:44] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:44.023567 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 11:53:44.023567%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:44.024564%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3988938752, percent=68.7, used=8748773376, free=3988938752)
2020-04-30 11:53:44.025561%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.025561%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.035536 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 11:53:44.035536%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 11:53:44.035699%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3989037056, percent=68.7, used=8748675072, free=3989037056)
2020-04-30 11:53:44.035699%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:44,031] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:44] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:44,040] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:44] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:44.250145 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 11:53:44.250145%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:59.3
2020-04-30 11:53:44.250758%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3990806528, percent=68.7, used=8746905600, free=3990806528)
2020-04-30 11:53:44.251143%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.251143%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.260158%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:44,276] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:44] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:53:44.353287 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 11:53:44.353287%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:41.4
2020-04-30 11:53:44.354217%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3990773760, percent=68.7, used=8746938368, free=3990773760)
2020-04-30 11:53:44.354217%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.354217%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.359204 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 11:53:44.359204%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 11:53:44.359204%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3990765568, percent=68.7, used=8746946560, free=3990765568)
2020-04-30 11:53:44.359204%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.363193%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 11:53:44.367219%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:53:44,370] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:44] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 11:53:44,389] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:53:44] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:56:22.775995 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [OPTIONS]
2020-04-30 11:56:22.776994%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:21.4
2020-04-30 11:56:22.778062%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3991576576, percent=68.7, used=8746135552, free=3991576576)
2020-04-30 11:56:22.778062%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:56:22.778062%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:56:22,780] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:56:22] "[37mOPTIONS /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:56:23.041376 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/trainAgent [POST]
2020-04-30 11:56:23.041376%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:34.3
2020-04-30 11:56:23.043322%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3991904256, percent=68.7, used=8745807872, free=3991904256)
2020-04-30 11:56:23.045085%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:56:23.046083%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:56:23.069016%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
congie is  language: en
pipeline:
- name: "SpacyNLP"
  model: "en"
  case_sensitive: "False"
- name: "SpacyTokenizer"
- name: "SpacyEntityExtractor"
- name: "CRFEntityExtractor"
  features: [ ["low", "title", "upper"],
      [
          "bias",
          "low",
          "prefix5",
          "prefix2",
          "suffix5",
          "suffix3",
          "suffix2",
          "upper",
          "title",
          "digit",
          "pattern",
          
      ],
     ["low", "title", "upper"]]
     
     
  case_sensitive: "False"
- name: "EntitySynonymMapper"
- name: "SpacyFeaturizer"
  max_history: "0"
- name: "SklearnIntentClassifier"
- name: "RegexFeaturizer"

- name: "Resources.Actions_server.CustomEntityExtractor.CustomGazetteerEntity.CustomGazetteerEntity"
  path: "61/english/gazetteer.json"

policies:
  - name: MemoizationPolicy
    max_history: 1
  - name: TEDPolicy
    weight_sparsity: 0.8
    transformer_size: 128
    number_of_transformer_layers: 1
    max_history: 5
    epochs: 200
  - name: MappingPolicy
  - name: FormPolicy
entities map
{'Email': ['mohammad@gmail.com', 'Client@gmail.com'], 'Departure_date': ['11/2/2020', '5-July', '5/July'], 'Paramtype1': ['intent API', 'intentapi', 'intent api', 'intent_api', 'classical', 'classical', 'beta', 'gama', 'alpha'], 'Destination_city': ['Pune', 'Paris'], 'Departure_city': ['Mumbai', 'Syria']}
RASA verion 1.9.5
domain_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpc4vnrb3u\domain.yml config_path C:\Users\Dell\Chatbot\front\final_merge/temp\tmpc4vnrb3u\config.yml temp_dir C:\Users\Dell\Chatbot\front\final_merge/temp\tmpc4vnrb3u model_output_directory C:\Users\Dell\Chatbot\front\final_merge/models
[94mTraining Core model...[0m
[2020-04-30 11:56:53,568] INFO in models: Finished training.
[94mCore model training completed.[0m
[94mTraining NLU model...[0m
[2020-04-30 11:56:55,281] INFO in spacy_utils: Trying to load spacy model with name 'en'
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    43   1119.6 MiB   1119.6 MiB       @profile
    44                                 def __init__(self, component_config: Optional[Dict[Text, Any]] = None) -> None:
    45   1119.6 MiB      0.0 MiB           super().__init__(component_config)


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    31   1119.6 MiB   1119.6 MiB       @classmethod
    32                                 @profile
    33                                 def required_components(cls) -> List[Type[Component]]:
    34                                     """Specify which components need to be present in the pipeline."""
    35                             
    36   1119.6 MiB      0.0 MiB           return []


Fitting 2 folds for each of 6 candidates, totalling 12 fits
61/english/gazetteer.json
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
    47   1121.4 MiB   1121.4 MiB       @profile
    48                                 def train(
    49                                     self,
    50                                     training_data: TrainingData,
    51                                     config: Optional[RasaNLUModelConfig] = None,
    52                                     **kwargs: Any,
    53                                 ) -> None:
    54                                     """collect data from database and trasform it to json variable"""
    55                             
    56   1121.4 MiB      0.0 MiB           my_config = [c for c in config.pipeline if 'CustomGazetteerEntity.CustomGazetteerEntity' in c['name']][0]
    57   1121.4 MiB      0.0 MiB           self.gazetteer_path = my_config['path']
    58   1121.4 MiB      0.0 MiB           print(self.gazetteer_path )
    59   1121.4 MiB      0.0 MiB           if ("/english/" in self.gazetteer_path):
    60   1121.4 MiB      0.0 MiB               self.lang = "en"
    61                                     elif ("/arabic/" in self.gazetteer_path):
    62                                         self.lang = "ar"
    63                             
    64   1121.4 MiB      0.0 MiB           with open(_initial_data_path  + self.gazetteer_path , 'rb') as f:
    65   1121.4 MiB      0.0 MiB               gazetteer_json_file = json.load(f)
    66   1121.4 MiB      0.0 MiB               self.gazetteer_entities = {v:k for k in gazetteer_json_file for v in gazetteer_json_file[k]}


Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   179   1121.4 MiB   1121.4 MiB       @profile
   180                                 def persist(self, file_name: Text, model_dir: Text) -> Optional[Dict[Text, Any]]:
   181                                     """save the gazetteer json variable to a json file with this model"""
   182                             
   183   1121.4 MiB      0.0 MiB           classifier_file = os.path.join(model_dir, MODEL_FILE_NAME)
   184   1121.4 MiB      0.0 MiB           with open(classifier_file, 'wb') as f:
   185   1121.4 MiB      0.0 MiB               pickle.dump(self,f)
   186                             
   187   1121.4 MiB      0.0 MiB           return {"classifier_file": MODEL_FILE_NAME}


[94mNLU model training completed.[0m
[92mYour Rasa model is trained and saved at 'C:\Users\Dell\Chatbot\front\final_merge\models\20200430-115720.tar.gz'.[0m
model path C:\Users\Dell\Chatbot\front\final_merge/models\20200430-115720.tar.gz
training Status Code 200  ---------------------  61 {'message': "name 'response' is not defined"}
Filename: C:\Users\Dell\Chatbot\front\final_merge\Resources\Actions_server\CustomEntityExtractor\CustomGazetteerEntity.py

Line #    Mem usage    Increment   Line Contents
================================================
   192   1097.9 MiB   1097.9 MiB       @classmethod
   193                                 @profile
   194                                 def load(
   195                                     cls,
   196                                     meta: Dict[Text, Any],
   197                                     model_dir: Optional[Text] = None,
   198                                     model_metadata: Optional["Metadata"] = None,
   199                                     cached_component: Optional["Component"] = None,
   200                                     **kwargs: Any,
   201                                 ) -> "Component":
   202                                     """load the gazetteer json file and save to self.gazetteer variable"""
   203                             
   204   1097.9 MiB      0.0 MiB           if cached_component:
   205                                         return cached_component
   206                                     else:
   207   1097.9 MiB      0.0 MiB               file_name = meta.get("classifier_file")
   208   1097.9 MiB      0.0 MiB               classifier_file = os.path.join(model_dir, file_name)
   209   1097.9 MiB      0.0 MiB               with open(classifier_file, 'rb') as f:
   210   1097.9 MiB      0.0 MiB                   return pickle.load(f)


<rasa.core.agent.Agent object at 0x000001BC677C2A08>
[2020-04-30 11:57:52,108] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:57:52] "[37mPOST /trainAgent?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 11:59:45.408132 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [OPTIONS]
2020-04-30 11:59:45.408132%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:38.4
2020-04-30 11:59:45.408132%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3862581248, percent=69.7, used=8875130880, free=3862581248)
2020-04-30 11:59:45.408132%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 11:59:45,411] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:59:45] "[37mOPTIONS /chatAgent HTTP/1.1[0m" 200 -
2020-04-30 11:59:45.662277 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 11:59:45.662277%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:5.9
2020-04-30 11:59:45.662277%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3862982656, percent=69.7, used=8874729472, free=3862982656)
2020-04-30 11:59:45.662277%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:59:45.662277%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 11:59:45.670259%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
=====================calling an exist conversation :conversation_id= 2665
map_key in loadedAgentsMap == True
agent_obj.handle_message finished
state ------------------------------ (<Response 945 bytes [200 OK]>, 200)
state ------------------------------ {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588237187.7924566}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588237187.7924566}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588237187.7924566, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
state is  {'active_form': {}, 'events': [{'event': 'reset_slots', 'timestamp': 1588237187.7924566}, {'confidence': 1.0, 'event': 'action', 'name': 'action_listen', 'policy': None, 'timestamp': 1588237187.7924566}], 'followup_action': None, 'latest_action_name': 'action_listen', 'latest_event_time': 1588237187.7924566, 'latest_input_channel': None, 'latest_message': {'entities': [], 'intent': {}, 'message_id': None, 'metadata': {}, 'text': None}, 'paused': False, 'sender_id': '61::107.152.104.235::Default::3c2baf3cf1', 'slots': {'Conversation_finished': None, 'Current_tracker_intent_name': None, 'Departure_city': None, 'Departure_date': None, 'Destination_city': None, 'Email': None, 'context_': None, 'context_Flight_number_1_followup': None, 'requested_slot': None}}
intent_name ----------- +++++++++++++++++=  []
------------------------------------------- there is an Exception is  list index out of range
++++++++++++++++++++++++++++++++++++++++ restart +@+@+@+@+@+@
----------------------------------------- intent name when access getFormatedReply restart
getFormatedEntity -------------------------  []
updated_entities ---------------------------------------- []
[2020-04-30 11:59:47,984] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 11:59:47] "[37mPOST /chatAgent HTTP/1.1[0m" 200 -
[2020-04-30 12:20:20,692] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-30 12:20:20.691741
2020-04-30 12:20:22.748079 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 12:20:22.748079%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:11.5
2020-04-30 12:20:22.749075%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3875332096, percent=69.6, used=8862380032, free=3875332096)
2020-04-30 12:20:22.749075%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-30 12:20:22.749075%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 12:20:22.766026%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2667 2667
 2- default platform is not  Null 
[2020-04-30 12:20:22,923] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 12:20:22] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
[2020-04-30 12:20:22,928] ERROR in GenericChatbotController: keep alive chatting Response:  {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}, Status_code: 400
[2020-04-30 13:38:25,467] INFO in _internal:  * Running on http://127.0.0.1:4200/ (Press CTRL+C to quit)
EndPoint Yml File Created Successfully
2020-04-30 13:38:39.373310 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 13:38:39.373310%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:55.3
2020-04-30 13:38:39.374307%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3195072512, percent=74.9, used=9542639616, free=3195072512)
2020-04-30 13:38:39.374307%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.374307%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:39,377] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 13:38:39.377300 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [OPTIONS]
2020-04-30 13:38:39.377300%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.377300%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3195432960, percent=74.9, used=9542279168, free=3195432960)
2020-04-30 13:38:39.378298%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.378298%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.381290 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [OPTIONS]
2020-04-30 13:38:39.381290%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 13:38:39.381290%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3195432960, percent=74.9, used=9542279168, free=3195432960)
2020-04-30 13:38:39.381290%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.381290%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.383283 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/425 [OPTIONS]
2020-04-30 13:38:39.383283%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.383283%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3195432960, percent=74.9, used=9542279168, free=3195432960)
2020-04-30 13:38:39.383283%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.385278 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [OPTIONS]
2020-04-30 13:38:39.385278%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.385278%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3195547648, percent=74.9, used=9542164480, free=3195547648)
2020-04-30 13:38:39.385278%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.385278%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:39,381] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:39,383] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 13:38:39.391263 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [OPTIONS]
2020-04-30 13:38:39.391263%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.391263%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3195424768, percent=74.9, used=9542287360, free=3195424768)
2020-04-30 13:38:39.391263%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:39,384] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /getintent/425 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:39,387] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:39,393] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 13:38:39.699484 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [OPTIONS]
2020-04-30 13:38:39.699484%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:66.7
2020-04-30 13:38:39.700482%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197964288, percent=74.9, used=9539747840, free=3197964288)
2020-04-30 13:38:39.700482%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:39,702] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 13:38:39.704472 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 13:38:39.704472%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.704472%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197968384, percent=74.9, used=9539743744, free=3197968384)
2020-04-30 13:38:39.704472%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:39,705] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 13:38:39.718433 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 13:38:39.718433%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:50.0
2020-04-30 13:38:39.718433%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197931520, percent=74.9, used=9539780608, free=3197931520)
2020-04-30 13:38:39.718433%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.718433%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.723419 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entitiesReport [GET]
2020-04-30 13:38:39.723419%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:25.0
2020-04-30 13:38:39.723419%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197919232, percent=74.9, used=9539792896, free=3197919232)
2020-04-30 13:38:39.723419%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.723419%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.728407 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/entityinstance [GET]
2020-04-30 13:38:39.728407%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.728407%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197878272, percent=74.9, used=9539833856, free=3197878272)
2020-04-30 13:38:39.728407%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.728407%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.735388 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getintent/425 [GET]
2020-04-30 13:38:39.735388%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:39.735388%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197657088, percent=74.9, used=9540055040, free=3197657088)
2020-04-30 13:38:39.735388%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.773286%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.786251%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.790242%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:39.796225%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:39,807] ERROR in GenericChatbotController: keep alive request for Agent :59 on time : 2020-04-30 13:38:39.807196
[2020-04-30 13:38:39,810] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=false&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:39,840] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mGET /entitiesReport?page_num=1&item_per_page=1000000&isSystemEntity=true&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:39,863] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mGET /entityinstance?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:39,905] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:39] "[37mGET /getintent/425 HTTP/1.1[0m" 200 -
2020-04-30 13:38:40.006141 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/hcicontext [GET]
2020-04-30 13:38:40.006141%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:35.6
2020-04-30 13:38:40.006141%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197206528, percent=74.9, used=9540505600, free=3197206528)
2020-04-30 13:38:40.006141%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:40.006141%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:40.010132 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/getResponsesTypes [GET]
2020-04-30 13:38:40.010132%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:38:40.010132%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197202432, percent=74.9, used=9540509696, free=3197202432)
2020-04-30 13:38:40.010132%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:40.014118%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:40.018109%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:40,021] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:40] "[37mGET /hcicontext?item_per_page=1000000&page_num=1&agentId=61 HTTP/1.1[0m" 200 -
[2020-04-30 13:38:40,024] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:40] "[37mGET /getResponsesTypes HTTP/1.1[0m" 200 -
2020-04-30 13:38:40.122853 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent [GET]
2020-04-30 13:38:40.122853%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:44.8
2020-04-30 13:38:40.122853%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197095936, percent=74.9, used=9540616192, free=3197095936)
2020-04-30 13:38:40.122853%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:40.127815%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:40,137] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:40] "[37mGET /agent?page_num=1&item_per_page=10000&userId=1 HTTP/1.1[0m" 200 -
2020-04-30 13:38:40.146764 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 13:38:40.146764%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 13:38:40.146764%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3197005824, percent=74.9, used=9540706304, free=3197005824)
2020-04-30 13:38:40.146764%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:40.157735%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:38:40,163] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:40] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 13:38:41.874564 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/chatAgent [POST]
2020-04-30 13:38:41.874564%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:37.2
2020-04-30 13:38:41.874564%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3183497216, percent=75.0, used=9554214912, free=3183497216)
2020-04-30 13:38:41.874564%%%%%%%%%%%%%%%%%%  Agent ID 59 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:41.874564%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:38:41.879525%%%%%%%%%%%%%%%%%% User Name: Keep_alive  %%%%%%%%%%%%%%%%%%:
=====================chatting using :conversation_id= None
1 - conversation_id is None:
new_conversation.id, new_conversation.id 2668 2668
 2- default platform is not  Null 
[2020-04-30 13:38:47,450] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:38:47] "[31m[1mPOST /chatAgent HTTP/1.1[0m" 400 -
[2020-04-30 13:38:47,456] ERROR in GenericChatbotController: keep alive chatting Response:  {'message': "Model 'en_sm' is not a linked spaCy model.  Please download and/or link a spaCy model, e.g. by running:\npython -m spacy download en_core_web_md\npython -m spacy link en_core_web_md en"}, Status_code: 400
['admin@admin.com', 'walaa.mahfoud@gmail.com']
7
5
Content-Type: multipart/mixed; boundary="===============7996691612079107381=="
MIME-Version: 1.0
From: chatbotgeneric@gmail.com
To: admin@admin.com,walaa.mahfoud@gmail.com
Subject: Generic Chatbot Situation Update, PORT:4200

--===============7996691612079107381==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

Hello Admins,
Please notify our server situation:

- CPU Usage : 30.1 percent

- RAM Usage : 76.3 percent

- Count Of Training Request During Last 12 Hours: 5

- Count Of Conversations During Last 12 Hours: 7
--===============7996691612079107381==--

Email sent!
2020-04-30 13:50:27.683785 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [OPTIONS]
2020-04-30 13:50:27.683785%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:18.2
2020-04-30 13:50:27.683785%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3988348928, percent=68.7, used=8749363200, free=3988348928)
2020-04-30 13:50:27.683785%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:27.683785%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:50:27,685] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:50:27] "[37mOPTIONS /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 13:50:27.693758 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [OPTIONS]
2020-04-30 13:50:27.693758%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:75.0
2020-04-30 13:50:27.694755%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987791872, percent=68.7, used=8749920256, free=3987791872)
2020-04-30 13:50:27.694755%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:27.694755%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:50:27,700] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:50:27] "[37mOPTIONS /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 13:50:27.710711 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [OPTIONS]
2020-04-30 13:50:27.710711%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:0.0
2020-04-30 13:50:27.710711%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3987816448, percent=68.7, used=8749895680, free=3987816448)
2020-04-30 13:50:27.710711%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:50:27,711] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:50:27] "[37mOPTIONS /agent/61 HTTP/1.1[0m" 200 -
2020-04-30 13:50:27.934519 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/15/en [GET]
2020-04-30 13:50:27.934519%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:12.5
2020-04-30 13:50:27.935516%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3990138880, percent=68.7, used=8747573248, free=3990138880)
2020-04-30 13:50:27.935516%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:27.935516%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:27.939505%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:50:27,959] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:50:27] "[37mGET /intentReport/1/15/en?agentId=61 HTTP/1.1[0m" 200 -
2020-04-30 13:50:27.993361 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/intentReport/1/100000000/en [GET]
2020-04-30 13:50:27.993361%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:31.2
2020-04-30 13:50:27.993361%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3990081536, percent=68.7, used=8747630592, free=3990081536)
2020-04-30 13:50:27.993361%%%%%%%%%%%%%%%%%%  Agent ID 61 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:27.993361%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:27.998355%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:28.010318 %%%%%%%%%%%%%%%%%% New Request %%%%%%%%%%%%%%%%%% :/agent/61 [GET]
2020-04-30 13:50:28.010318%%%%%%%%%%%%%%%%%% cpu used %%%%%%%%%%%%%%%%%%:100.0
2020-04-30 13:50:28.010318%%%%%%%%%%%%%%%%%%  memory used %%%%%%%%%%%%%%%%%%:svmem(total=12737712128, available=3990011904, percent=68.7, used=8747700224, free=3990011904)
2020-04-30 13:50:28.010318%%%%%%%%%%%%%%%%%%  ip 127.0.0.1 %%%%%%%%%%%%%%%%%%:
2020-04-30 13:50:28.017297%%%%%%%%%%%%%%%%%% User Name: admin  %%%%%%%%%%%%%%%%%%:
[2020-04-30 13:50:28,028] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:50:28] "[37mGET /agent/61 HTTP/1.1[0m" 200 -
[2020-04-30 13:50:28,028] INFO in _internal: 127.0.0.1 - - [30/Apr/2020 13:50:28] "[37mGET /intentReport/1/100000000/en?agentId=61 HTTP/1.1[0m" 200 -
